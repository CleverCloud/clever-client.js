{
  "openapi": "3.0.1",
  "info" : {
    "title": "Clever Cloud API",
    "description": "Use this API to manipulate your Clever Cloud services.",
    "version" : "4.0.0"
  },
  "servers": [
    {
      "url": "https://api.clever-cloud.com/v4",
      "description": "The production API server (v4)"
    },
    {
      "url": "https://api.par0.clvrcld.net/v4",
      "description": "The testing API server (v4)."
    }
  ],
  "paths": {
    "/networkgroups/organisations/{ownerId}/networkgroups": {
      "get": {
        "tags": [
          "networkgroups"
        ],
        "summary": "List Networkgroups",
        "description": "Lists networkgroups from an owner.",
        "operationId": "listNetworkgroups",
        "x-service": "networkgroup",
        "x-function": "get",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Networkgroups",
                  "description": "List of networkgroups.",
                  "type": "array",
                  "items": {
                    "title": "Networkgroup",
                    "required": [
                      "id",
                      "owner_id",
                      "label",
                      "description",
                      "network_ip",
                      "last-allocated-ip",
                      "tags",
                      "version"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Networkgroup `id`",
                        "description": "Unique `id` of a networkgroup.",
                        "type": "string",
                        "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                      },
                      "owner_id": {
                        "title": "Owner `id`",
                        "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
                        "type": "string",
                        "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
                      },
                      "label": {
                        "title": "Networkgroup Label",
                        "description": "Label of a networkgroup.",
                        "type": "string",
                        "example": "my-networkgroup"
                      },
                      "description": {
                        "title": "Networkgroup Description",
                        "description": "Description of a networkgroup.",
                        "type": "string",
                        "example": "A networkgroup with my apps and add-ons."
                      },
                      "network_ip": {
                        "title": "IP Address With Port",
                        "description": "IP address with port number.",
                        "type": "string",
                        "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/\\d{1,5}$",
                        "example": "10.105.0.0/16"
                      },
                      "last-allocated-ip": {
                        "title": "IP Address",
                        "description": "IP address.",
                        "type": "string",
                        "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                        "example": "10.105.0.42"
                      },
                      "tags": {
                        "title": "Tags",
                        "description": "An array of semantic tags.",
                        "type": "array",
                        "items": {
                          "title": "Tag",
                          "description": "A semantic tag.",
                          "type": "string"
                        }
                      },
                      "members": {
                        "title": "Members",
                        "description": "List of `Member`s in a networkgroup.",
                        "type": "array",
                        "items": {
                          "title": "Member",
                          "description": "A networkgroup member is a set of nodes that should be in the network by a simple predicate: `id` is equals to an app `id` (i.e. `app_xxx`), an add-on `id` (i.e. `addon_xxx`) or an external node category `id`.",
                          "required": [
                            "id",
                            "label",
                            "domain-name",
                            "type"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Member `id`",
                              "description": "Unique `id` of a networkgroup member.",
                              "type": "string",
                              "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                            },
                            "label": {
                              "title": "Member Label",
                              "description": "Human-readable name of a networkgroup member.",
                              "type": "string"
                            },
                            "domain-name": {
                              "title": "Member Name",
                              "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias.",
                              "type": "string"
                            },
                            "type": {
                              "title": "Member Type",
                              "description": "The type of a networkgroup member. It can be an application (`'application'`), an add-on (`'addon'`) or an external node (`'external'`).",
                              "type": "string",
                              "enum": [
                                "application",
                                "addon",
                                "external"
                              ]
                            }
                          },
                          "example": {
                            "summary": "Example networkgroup member",
                            "value": {
                              "id": "app_0596acdb-fc59-4fdd-b747-0e3754460a63",
                              "label": "My Member",
                              "domain-name": "my-domain",
                              "type": "application"
                            }
                          }
                        }
                      },
                      "peers": {
                        "title": "Peers",
                        "description": "List of `Peer`s in a networkgroup.",
                        "type": "array",
                        "items": {
                          "title": "Peer",
                          "required": [
                            "id",
                            "label",
                            "hostname",
                            "public-key",
                            "endpoint",
                            "parent_event",
                            "parent_member",
                            "type"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Peer `id`",
                              "description": "Unique `id` of a networkgroup peer.",
                              "type": "string",
                              "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                            },
                            "label": {
                              "title": "Peer Label",
                              "description": "Label of a networkgroup peer.",
                              "type": "string"
                            },
                            "hostname": {
                              "title": "Host Name",
                              "description": "Host name of a networkgroup peer.",
                              "type": "string",
                              "example": "rust-1"
                            },
                            "hv": {
                              "title": "Hypervisor",
                              "required": [
                                "host",
                                "zone"
                              ],
                              "type": "object",
                              "properties": {
                                "host": {
                                  "title": "Host Name",
                                  "description": "Name of the hypervisor host.",
                                  "type": "string",
                                  "example": "hv-par0-001"
                                },
                                "zone": {
                                  "title": "Zone",
                                  "required": [
                                    "id"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "title": "Zone `id`",
                                      "description": "A zone `id`.",
                                      "type": "string",
                                      "example": "par0"
                                    }
                                  },
                                  "example": {
                                    "summary": "Example zone",
                                    "value": {
                                      "id": "par0"
                                    }
                                  }
                                }
                              },
                              "example": {
                                "summary": "Example hypervisor",
                                "value": {
                                  "host": "hv-par0-001",
                                  "zone": {
                                    "id": "par0"
                                  }
                                }
                              }
                            },
                            "public-key": {
                              "title": "WireGuard® Public Key",
                              "description": "WireGuard® public key of a networkgroup peer. It's a Base64-encoded string (hence the format).",
                              "type": "string",
                              "format": "[a-zA-Z0-9+/]{43}=",
                              "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                            },
                            "endpoint": {
                              "title": "Endpoint",
                              "required": [
                                "type"
                              ],
                              "type": "object",
                              "properties": {
                                "ng-term": {
                                  "title": "Networkgroup Termination",
                                  "description": "A networkgroup termination.",
                                  "required": [
                                    "ip",
                                    "port"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "ip": {
                                      "title": "IP Address",
                                      "description": "IP address.",
                                      "type": "string",
                                      "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                                      "example": "10.105.0.42"
                                    },
                                    "port": {
                                      "title": "Port",
                                      "description": "A port number.",
                                      "type": "integer",
                                      "format": "int32",
                                      "example": 50159
                                    }
                                  },
                                  "example": {
                                    "summary": "Example networkgroup termination",
                                    "value": {
                                      "ip": "10.101.0.7",
                                      "port": 50159
                                    }
                                  }
                                },
                                "public-term": {
                                  "title": "Public Termination",
                                  "description": "A public termination.",
                                  "required": [
                                    "ip",
                                    "port"
                                  ],
                                  "type": "object",
                                  "properties": {
                                    "ip": {
                                      "title": "IP Address",
                                      "description": "IP address.",
                                      "type": "string",
                                      "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                                      "example": "10.105.0.42"
                                    },
                                    "port": {
                                      "title": "Port",
                                      "description": "A port number.",
                                      "type": "integer",
                                      "format": "int32",
                                      "example": 50159
                                    }
                                  },
                                  "example": {
                                    "summary": "Example public termination",
                                    "value": {
                                      "ip": "62.210.251.80",
                                      "port": 45000
                                    }
                                  }
                                },
                                "type": {
                                  "title": "Endpoint Type",
                                  "description": "The type of a networkgroup endpoint. It can be a client endpoint (`'ClientEndpoint'`) or a server endpoint (`'ServerEndpoint'`).",
                                  "type": "string",
                                  "enum": [
                                    "ClientEndpoint",
                                    "ServerEndpoint"
                                  ]
                                },
                                "ng-ip": {
                                  "title": "IP Address With Port",
                                  "description": "IP address with port number.",
                                  "type": "string",
                                  "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/\\d{1,5}$",
                                  "example": "10.105.0.0/16"
                                }
                              },
                              "example": {
                                "summary": "Example networkgroup enndpoint",
                                "value": {
                                  "ng-term": {
                                    "ip": "10.101.0.7",
                                    "port": 50159
                                  },
                                  "public-term": {
                                    "ip": "62.210.251.80",
                                    "port": 45000
                                  },
                                  "type": "ServerEndpoint"
                                }
                              }
                            },
                            "parent_event": {
                              "title": "Parent Event",
                              "type": "string",
                              "nullable": true
                            },
                            "parent_member": {
                              "title": "Member `id`",
                              "description": "Unique `id` of a networkgroup member.",
                              "type": "string",
                              "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                            },
                            "type": {
                              "title": "Peer Type",
                              "description": "Type of a networkgroup peer.",
                              "type": "string",
                              "enum": [
                                "CleverPeer",
                                "ExternalPeer"
                              ]
                            }
                          },
                          "example": {
                            "summary": "Example peer",
                            "value": {
                              "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                              "label": "java-1",
                              "hostname": "java-1",
                              "hv": {
                                "host": "hv-par0-001",
                                "zone": {
                                  "id": "par0"
                                }
                              },
                              "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                              "endpoint": {
                                "ng-term": {
                                  "ip": "10.101.0.7",
                                  "port": 50159
                                },
                                "public-term": {
                                  "ip": "62.210.251.80",
                                  "port": 45000
                                },
                                "type": "ServerEndpoint"
                              },
                              "parent_event": null,
                              "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                              "type": "CleverPeer"
                            }
                          }
                        }
                      },
                      "version": {
                        "title": "Version",
                        "description": "Version number.",
                        "type": "integer",
                        "format": "int32",
                        "example": 42
                      }
                    },
                    "example": {
                      "summary": "Example networkgroup",
                      "value": {
                        "id": "ng_c1acf968-be9b-4d84-a10c-c6817fada09d",
                        "owner_id": "orga_3eb78ce1-4ce8-4853-90cb-81c3e13c047f",
                        "label": "test-ng",
                        "description": "NG example",
                        "network_ip": "10.101.0.0/16",
                        "last-allocated-ip": "10.101.0.12",
                        "tags": [],
                        "peers": [
                          {
                            "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                            "label": "java-1",
                            "hostname": "java-1",
                            "hv": {
                              "host": "hv-par0-001",
                              "zone": {
                                "id": "par0"
                              }
                            },
                            "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                            "endpoint": {
                              "ng-term": {
                                "ip": "10.101.0.7",
                                "port": 50159
                              },
                              "public-term": {
                                "ip": "62.210.251.80",
                                "port": 45000
                              },
                              "type": "ServerEndpoint"
                            },
                            "parent_event": null,
                            "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                            "type": "CleverPeer"
                          },
                          {
                            "id": "external_f7f5fa23-a469-48c9-bf0b-7d8583d603b1",
                            "label": "mylaptop",
                            "hostname": "mylaptop",
                            "public-key": "GfTtsW0lrKjr7EDsrg2jglikIB+f3cV/wdBoThsESnA=",
                            "endpoint": {
                              "ng-ip": "10.101.0.12",
                              "type": "ClientEndpoint"
                            },
                            "parent_event": null,
                            "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                            "type": "ExternalPeer"
                          }
                        ],
                        "members": [
                          {
                            "id": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                            "label": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                            "domain-name": "mydom",
                            "type": "externalNode"
                          },
                          {
                            "id": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                            "label": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                            "domain-name": "app-tester",
                            "type": "application"
                          }
                        ],
                        "version": 14
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "summary": "Simple Example",
                    "description": "An example list of networkgroups.",
                    "value": [
                      {
                        "id": "ng_c1acf968-be9b-4d84-a10c-c6817fada09d",
                        "owner_id": "orga_3eb78ce1-4ce8-4853-90cb-81c3e13c047f",
                        "label": "test-ng",
                        "description": "NG example",
                        "network_ip": "10.101.0.0/16",
                        "last-allocated-ip": "10.101.0.12",
                        "tags": [],
                        "peers": [
                          {
                            "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                            "label": "java-1",
                            "hostname": "java-1",
                            "hv": {
                              "host": "hv-par0-001",
                              "zone": {
                                "id": "par0"
                              }
                            },
                            "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                            "endpoint": {
                              "ng-term": {
                                "ip": "10.101.0.7",
                                "port": 50159
                              },
                              "public-term": {
                                "ip": "62.210.251.80",
                                "port": 45000
                              },
                              "type": "ServerEndpoint"
                            },
                            "parent_event": null,
                            "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                            "type": "CleverPeer"
                          },
                          {
                            "id": "external_f7f5fa23-a469-48c9-bf0b-7d8583d603b1",
                            "label": "mylaptop",
                            "hostname": "mylaptop",
                            "public-key": "GfTtsW0lrKjr7EDsrg2jglikIB+f3cV/wdBoThsESnA=",
                            "endpoint": {
                              "ng-ip": "10.101.0.12",
                              "type": "ClientEndpoint"
                            },
                            "parent_event": null,
                            "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                            "type": "ExternalPeer"
                          }
                        ],
                        "members": [
                          {
                            "id": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                            "label": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                            "domain-name": "mydom",
                            "type": "externalNode"
                          },
                          {
                            "id": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                            "label": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                            "domain-name": "app-tester",
                            "type": "application"
                          }
                        ],
                        "version": 14
                      },
                      {
                        "id": "ng_9636dfb1-d507-48d1-8c49-efedba0bbf22",
                        "owner_id": "orga_74d97a1f-30a9-4015-8f69-bd46e0152417",
                        "label": "example-ng",
                        "description": "Example networkgroup",
                        "network_ip": "10.101.0.0/16",
                        "last-allocated-ip": "10.101.0.0",
                        "tags": [],
                        "peers": [],
                        "members": [],
                        "version": 0
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "User not in organization": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "networkgroups"
        ],
        "summary": "Create Networkgroup",
        "description": "Creates a networkgroup.",
        "operationId": "createNetworkgroup",
        "x-service": "networkgroup",
        "x-function": "createNg",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "Create Networkgroup Request",
                "required": [
                  "owner_id",
                  "label",
                  "description",
                  "tags"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Networkgroup `id`",
                    "description": "Unique `id` of a networkgroup.",
                    "type": "string",
                    "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                  },
                  "owner_id": {
                    "title": "Owner `id`",
                    "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
                    "type": "string",
                    "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
                  },
                  "label": {
                    "title": "Networkgroup Label",
                    "description": "Label of a networkgroup.",
                    "type": "string",
                    "example": "my-networkgroup"
                  },
                  "description": {
                    "title": "Networkgroup Description",
                    "description": "Description of a networkgroup.",
                    "type": "string",
                    "example": "A networkgroup with my apps and add-ons."
                  },
                  "tags": {
                    "title": "Tags",
                    "description": "An array of semantic tags.",
                    "type": "array",
                    "items": {
                      "title": "Tag",
                      "description": "A semantic tag.",
                      "type": "string"
                    }
                  },
                  "members": {
                    "title": "Members",
                    "description": "List of `Member`s in a networkgroup.",
                    "type": "array",
                    "items": {
                      "title": "Member",
                      "description": "A networkgroup member is a set of nodes that should be in the network by a simple predicate: `id` is equals to an app `id` (i.e. `app_xxx`), an add-on `id` (i.e. `addon_xxx`) or an external node category `id`.",
                      "required": [
                        "id",
                        "label",
                        "domain-name",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Member `id`",
                          "description": "Unique `id` of a networkgroup member.",
                          "type": "string",
                          "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                        },
                        "label": {
                          "title": "Member Label",
                          "description": "Human-readable name of a networkgroup member.",
                          "type": "string"
                        },
                        "domain-name": {
                          "title": "Member Name",
                          "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias.",
                          "type": "string"
                        },
                        "type": {
                          "title": "Member Type",
                          "description": "The type of a networkgroup member. It can be an application (`'application'`), an add-on (`'addon'`) or an external node (`'external'`).",
                          "type": "string",
                          "enum": [
                            "application",
                            "addon",
                            "external"
                          ]
                        }
                      },
                      "example": {
                        "summary": "Example networkgroup member",
                        "value": {
                          "id": "app_0596acdb-fc59-4fdd-b747-0e3754460a63",
                          "label": "My Member",
                          "domain-name": "my-domain",
                          "type": "application"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "summary": "Simple Example",
                  "description": "Example request for creating a networkgroup.",
                  "value": {
                    "owner_id": "orga_4cad2a15-7898-4573-bfa9-d9f938088836",
                    "label": "my-networkgroup",
                    "description": "Networkgroup with my apps and add-ons",
                    "tags": [
                      "apps",
                      "test"
                    ]
                  }
                }
              },
              "examples": {
                "default": {
                  "summary": "Simple Example",
                  "description": "Example request for creating a networkgroup.",
                  "value": {
                    "owner_id": "orga_4cad2a15-7898-4573-bfa9-d9f938088836",
                    "label": "my-networkgroup",
                    "description": "Networkgroup with my apps and add-ons",
                    "tags": [
                      "apps",
                      "test"
                    ]
                  }
                },
                "Dynamic": {
                  "summary": "Postman Dynamic Example",
                  "description": "Example request for creating a networkgroup with Postman.",
                  "value": {
                    "owner_id": "{{ownerId}}",
                    "label": "{{$randomLoremSlug}}",
                    "description": "{{$randomWords}}",
                    "tags": [
                      "{{$randomLoremWord}}",
                      "{{$randomLoremWord}}"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Networkgroup",
                  "required": [
                    "id",
                    "owner_id",
                    "label",
                    "description",
                    "network_ip",
                    "last-allocated-ip",
                    "tags",
                    "version"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Networkgroup `id`",
                      "description": "Unique `id` of a networkgroup.",
                      "type": "string",
                      "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                    },
                    "owner_id": {
                      "title": "Owner `id`",
                      "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
                      "type": "string",
                      "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
                    },
                    "label": {
                      "title": "Networkgroup Label",
                      "description": "Label of a networkgroup.",
                      "type": "string",
                      "example": "my-networkgroup"
                    },
                    "description": {
                      "title": "Networkgroup Description",
                      "description": "Description of a networkgroup.",
                      "type": "string",
                      "example": "A networkgroup with my apps and add-ons."
                    },
                    "network_ip": {
                      "title": "IP Address With Port",
                      "description": "IP address with port number.",
                      "type": "string",
                      "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/\\d{1,5}$",
                      "example": "10.105.0.0/16"
                    },
                    "last-allocated-ip": {
                      "title": "IP Address",
                      "description": "IP address.",
                      "type": "string",
                      "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                      "example": "10.105.0.42"
                    },
                    "tags": {
                      "title": "Tags",
                      "description": "An array of semantic tags.",
                      "type": "array",
                      "items": {
                        "title": "Tag",
                        "description": "A semantic tag.",
                        "type": "string"
                      }
                    },
                    "members": {
                      "title": "Members",
                      "description": "List of `Member`s in a networkgroup.",
                      "type": "array",
                      "items": {
                        "title": "Member",
                        "description": "A networkgroup member is a set of nodes that should be in the network by a simple predicate: `id` is equals to an app `id` (i.e. `app_xxx`), an add-on `id` (i.e. `addon_xxx`) or an external node category `id`.",
                        "required": [
                          "id",
                          "label",
                          "domain-name",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Member `id`",
                            "description": "Unique `id` of a networkgroup member.",
                            "type": "string",
                            "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                          },
                          "label": {
                            "title": "Member Label",
                            "description": "Human-readable name of a networkgroup member.",
                            "type": "string"
                          },
                          "domain-name": {
                            "title": "Member Name",
                            "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias.",
                            "type": "string"
                          },
                          "type": {
                            "title": "Member Type",
                            "description": "The type of a networkgroup member. It can be an application (`'application'`), an add-on (`'addon'`) or an external node (`'external'`).",
                            "type": "string",
                            "enum": [
                              "application",
                              "addon",
                              "external"
                            ]
                          }
                        },
                        "example": {
                          "summary": "Example networkgroup member",
                          "value": {
                            "id": "app_0596acdb-fc59-4fdd-b747-0e3754460a63",
                            "label": "My Member",
                            "domain-name": "my-domain",
                            "type": "application"
                          }
                        }
                      }
                    },
                    "peers": {
                      "title": "Peers",
                      "description": "List of `Peer`s in a networkgroup.",
                      "type": "array",
                      "items": {
                        "title": "Peer",
                        "required": [
                          "id",
                          "label",
                          "hostname",
                          "public-key",
                          "endpoint",
                          "parent_event",
                          "parent_member",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Peer `id`",
                            "description": "Unique `id` of a networkgroup peer.",
                            "type": "string",
                            "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                          },
                          "label": {
                            "title": "Peer Label",
                            "description": "Label of a networkgroup peer.",
                            "type": "string"
                          },
                          "hostname": {
                            "title": "Host Name",
                            "description": "Host name of a networkgroup peer.",
                            "type": "string",
                            "example": "rust-1"
                          },
                          "hv": {
                            "title": "Hypervisor",
                            "required": [
                              "host",
                              "zone"
                            ],
                            "type": "object",
                            "properties": {
                              "host": {
                                "title": "Host Name",
                                "description": "Name of the hypervisor host.",
                                "type": "string",
                                "example": "hv-par0-001"
                              },
                              "zone": {
                                "title": "Zone",
                                "required": [
                                  "id"
                                ],
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Zone `id`",
                                    "description": "A zone `id`.",
                                    "type": "string",
                                    "example": "par0"
                                  }
                                },
                                "example": {
                                  "summary": "Example zone",
                                  "value": {
                                    "id": "par0"
                                  }
                                }
                              }
                            },
                            "example": {
                              "summary": "Example hypervisor",
                              "value": {
                                "host": "hv-par0-001",
                                "zone": {
                                  "id": "par0"
                                }
                              }
                            }
                          },
                          "public-key": {
                            "title": "WireGuard® Public Key",
                            "description": "WireGuard® public key of a networkgroup peer. It's a Base64-encoded string (hence the format).",
                            "type": "string",
                            "format": "[a-zA-Z0-9+/]{43}=",
                            "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                          },
                          "endpoint": {
                            "title": "Endpoint",
                            "required": [
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "ng-term": {
                                "title": "Networkgroup Termination",
                                "description": "A networkgroup termination.",
                                "required": [
                                  "ip",
                                  "port"
                                ],
                                "type": "object",
                                "properties": {
                                  "ip": {
                                    "title": "IP Address",
                                    "description": "IP address.",
                                    "type": "string",
                                    "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                                    "example": "10.105.0.42"
                                  },
                                  "port": {
                                    "title": "Port",
                                    "description": "A port number.",
                                    "type": "integer",
                                    "format": "int32",
                                    "example": 50159
                                  }
                                },
                                "example": {
                                  "summary": "Example networkgroup termination",
                                  "value": {
                                    "ip": "10.101.0.7",
                                    "port": 50159
                                  }
                                }
                              },
                              "public-term": {
                                "title": "Public Termination",
                                "description": "A public termination.",
                                "required": [
                                  "ip",
                                  "port"
                                ],
                                "type": "object",
                                "properties": {
                                  "ip": {
                                    "title": "IP Address",
                                    "description": "IP address.",
                                    "type": "string",
                                    "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                                    "example": "10.105.0.42"
                                  },
                                  "port": {
                                    "title": "Port",
                                    "description": "A port number.",
                                    "type": "integer",
                                    "format": "int32",
                                    "example": 50159
                                  }
                                },
                                "example": {
                                  "summary": "Example public termination",
                                  "value": {
                                    "ip": "62.210.251.80",
                                    "port": 45000
                                  }
                                }
                              },
                              "type": {
                                "title": "Endpoint Type",
                                "description": "The type of a networkgroup endpoint. It can be a client endpoint (`'ClientEndpoint'`) or a server endpoint (`'ServerEndpoint'`).",
                                "type": "string",
                                "enum": [
                                  "ClientEndpoint",
                                  "ServerEndpoint"
                                ]
                              },
                              "ng-ip": {
                                "title": "IP Address With Port",
                                "description": "IP address with port number.",
                                "type": "string",
                                "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/\\d{1,5}$",
                                "example": "10.105.0.0/16"
                              }
                            },
                            "example": {
                              "summary": "Example networkgroup enndpoint",
                              "value": {
                                "ng-term": {
                                  "ip": "10.101.0.7",
                                  "port": 50159
                                },
                                "public-term": {
                                  "ip": "62.210.251.80",
                                  "port": 45000
                                },
                                "type": "ServerEndpoint"
                              }
                            }
                          },
                          "parent_event": {
                            "title": "Parent Event",
                            "type": "string",
                            "nullable": true
                          },
                          "parent_member": {
                            "title": "Member `id`",
                            "description": "Unique `id` of a networkgroup member.",
                            "type": "string",
                            "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                          },
                          "type": {
                            "title": "Peer Type",
                            "description": "Type of a networkgroup peer.",
                            "type": "string",
                            "enum": [
                              "CleverPeer",
                              "ExternalPeer"
                            ]
                          }
                        },
                        "example": {
                          "summary": "Example peer",
                          "value": {
                            "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                            "label": "java-1",
                            "hostname": "java-1",
                            "hv": {
                              "host": "hv-par0-001",
                              "zone": {
                                "id": "par0"
                              }
                            },
                            "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                            "endpoint": {
                              "ng-term": {
                                "ip": "10.101.0.7",
                                "port": 50159
                              },
                              "public-term": {
                                "ip": "62.210.251.80",
                                "port": 45000
                              },
                              "type": "ServerEndpoint"
                            },
                            "parent_event": null,
                            "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                            "type": "CleverPeer"
                          }
                        }
                      }
                    },
                    "version": {
                      "title": "Version",
                      "description": "Version number.",
                      "type": "integer",
                      "format": "int32",
                      "example": 42
                    }
                  },
                  "example": {
                    "summary": "Example networkgroup",
                    "value": {
                      "id": "ng_c1acf968-be9b-4d84-a10c-c6817fada09d",
                      "owner_id": "orga_3eb78ce1-4ce8-4853-90cb-81c3e13c047f",
                      "label": "test-ng",
                      "description": "NG example",
                      "network_ip": "10.101.0.0/16",
                      "last-allocated-ip": "10.101.0.12",
                      "tags": [],
                      "peers": [
                        {
                          "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                          "label": "java-1",
                          "hostname": "java-1",
                          "hv": {
                            "host": "hv-par0-001",
                            "zone": {
                              "id": "par0"
                            }
                          },
                          "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                          "endpoint": {
                            "ng-term": {
                              "ip": "10.101.0.7",
                              "port": 50159
                            },
                            "public-term": {
                              "ip": "62.210.251.80",
                              "port": 45000
                            },
                            "type": "ServerEndpoint"
                          },
                          "parent_event": null,
                          "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                          "type": "CleverPeer"
                        },
                        {
                          "id": "external_f7f5fa23-a469-48c9-bf0b-7d8583d603b1",
                          "label": "mylaptop",
                          "hostname": "mylaptop",
                          "public-key": "GfTtsW0lrKjr7EDsrg2jglikIB+f3cV/wdBoThsESnA=",
                          "endpoint": {
                            "ng-ip": "10.101.0.12",
                            "type": "ClientEndpoint"
                          },
                          "parent_event": null,
                          "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                          "type": "ExternalPeer"
                        }
                      ],
                      "members": [
                        {
                          "id": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                          "label": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                          "domain-name": "mydom",
                          "type": "externalNode"
                        },
                        {
                          "id": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                          "label": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                          "domain-name": "app-tester",
                          "type": "application"
                        }
                      ],
                      "version": 14
                    }
                  }
                },
                "examples": {
                  "Created networkgroup": {
                    "summary": "Newly created networkgroup",
                    "value": {
                      "id": "ng_9636dfb1-d507-48d1-8c49-efedba0bbf22",
                      "owner_id": "orga_74d97a1f-30a9-4015-8f69-bd46e0152417",
                      "label": "example-ng",
                      "description": "Example networkgroup",
                      "network_ip": "10.101.0.0/16",
                      "last-allocated-ip": "10.101.0.0",
                      "tags": [],
                      "peers": [],
                      "members": [],
                      "version": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "`owner_id` from body and path do not match": {
                    "value": "server can't do that, owner_id does not match the orga_id from url"
                  },
                  "Invalid `id`": {
                    "value": "server can't do that, Invalid NetworkGroup ID Some(6e0df72a-17df-47fa-92f5-90cc5df6deb3)"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Label already taken": {
                    "value": "Seems this networkgroup label is already taken"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/networkgroups/organisations/{ownerId}/networkgroups/{ngId}": {
      "get": {
        "tags": [
          "networkgroups"
        ],
        "summary": "Get Networkgroup",
        "description": "Gets details from a networkgroup.",
        "operationId": "getNetworkgroup",
        "x-service": "networkgroup",
        "x-function": "getNg",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Networkgroup",
                  "required": [
                    "id",
                    "owner_id",
                    "label",
                    "description",
                    "network_ip",
                    "last-allocated-ip",
                    "tags",
                    "version"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Networkgroup `id`",
                      "description": "Unique `id` of a networkgroup.",
                      "type": "string",
                      "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                    },
                    "owner_id": {
                      "title": "Owner `id`",
                      "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
                      "type": "string",
                      "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
                    },
                    "label": {
                      "title": "Networkgroup Label",
                      "description": "Label of a networkgroup.",
                      "type": "string",
                      "example": "my-networkgroup"
                    },
                    "description": {
                      "title": "Networkgroup Description",
                      "description": "Description of a networkgroup.",
                      "type": "string",
                      "example": "A networkgroup with my apps and add-ons."
                    },
                    "network_ip": {
                      "title": "IP Address With Port",
                      "description": "IP address with port number.",
                      "type": "string",
                      "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/\\d{1,5}$",
                      "example": "10.105.0.0/16"
                    },
                    "last-allocated-ip": {
                      "title": "IP Address",
                      "description": "IP address.",
                      "type": "string",
                      "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                      "example": "10.105.0.42"
                    },
                    "tags": {
                      "title": "Tags",
                      "description": "An array of semantic tags.",
                      "type": "array",
                      "items": {
                        "title": "Tag",
                        "description": "A semantic tag.",
                        "type": "string"
                      }
                    },
                    "members": {
                      "title": "Members",
                      "description": "List of `Member`s in a networkgroup.",
                      "type": "array",
                      "items": {
                        "title": "Member",
                        "description": "A networkgroup member is a set of nodes that should be in the network by a simple predicate: `id` is equals to an app `id` (i.e. `app_xxx`), an add-on `id` (i.e. `addon_xxx`) or an external node category `id`.",
                        "required": [
                          "id",
                          "label",
                          "domain-name",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Member `id`",
                            "description": "Unique `id` of a networkgroup member.",
                            "type": "string",
                            "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                          },
                          "label": {
                            "title": "Member Label",
                            "description": "Human-readable name of a networkgroup member.",
                            "type": "string"
                          },
                          "domain-name": {
                            "title": "Member Name",
                            "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias.",
                            "type": "string"
                          },
                          "type": {
                            "title": "Member Type",
                            "description": "The type of a networkgroup member. It can be an application (`'application'`), an add-on (`'addon'`) or an external node (`'external'`).",
                            "type": "string",
                            "enum": [
                              "application",
                              "addon",
                              "external"
                            ]
                          }
                        },
                        "example": {
                          "summary": "Example networkgroup member",
                          "value": {
                            "id": "app_0596acdb-fc59-4fdd-b747-0e3754460a63",
                            "label": "My Member",
                            "domain-name": "my-domain",
                            "type": "application"
                          }
                        }
                      }
                    },
                    "peers": {
                      "title": "Peers",
                      "description": "List of `Peer`s in a networkgroup.",
                      "type": "array",
                      "items": {
                        "title": "Peer",
                        "required": [
                          "id",
                          "label",
                          "hostname",
                          "public-key",
                          "endpoint",
                          "parent_event",
                          "parent_member",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Peer `id`",
                            "description": "Unique `id` of a networkgroup peer.",
                            "type": "string",
                            "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                          },
                          "label": {
                            "title": "Peer Label",
                            "description": "Label of a networkgroup peer.",
                            "type": "string"
                          },
                          "hostname": {
                            "title": "Host Name",
                            "description": "Host name of a networkgroup peer.",
                            "type": "string",
                            "example": "rust-1"
                          },
                          "hv": {
                            "title": "Hypervisor",
                            "required": [
                              "host",
                              "zone"
                            ],
                            "type": "object",
                            "properties": {
                              "host": {
                                "title": "Host Name",
                                "description": "Name of the hypervisor host.",
                                "type": "string",
                                "example": "hv-par0-001"
                              },
                              "zone": {
                                "title": "Zone",
                                "required": [
                                  "id"
                                ],
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "Zone `id`",
                                    "description": "A zone `id`.",
                                    "type": "string",
                                    "example": "par0"
                                  }
                                },
                                "example": {
                                  "summary": "Example zone",
                                  "value": {
                                    "id": "par0"
                                  }
                                }
                              }
                            },
                            "example": {
                              "summary": "Example hypervisor",
                              "value": {
                                "host": "hv-par0-001",
                                "zone": {
                                  "id": "par0"
                                }
                              }
                            }
                          },
                          "public-key": {
                            "title": "WireGuard® Public Key",
                            "description": "WireGuard® public key of a networkgroup peer. It's a Base64-encoded string (hence the format).",
                            "type": "string",
                            "format": "[a-zA-Z0-9+/]{43}=",
                            "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                          },
                          "endpoint": {
                            "title": "Endpoint",
                            "required": [
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "ng-term": {
                                "title": "Networkgroup Termination",
                                "description": "A networkgroup termination.",
                                "required": [
                                  "ip",
                                  "port"
                                ],
                                "type": "object",
                                "properties": {
                                  "ip": {
                                    "title": "IP Address",
                                    "description": "IP address.",
                                    "type": "string",
                                    "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                                    "example": "10.105.0.42"
                                  },
                                  "port": {
                                    "title": "Port",
                                    "description": "A port number.",
                                    "type": "integer",
                                    "format": "int32",
                                    "example": 50159
                                  }
                                },
                                "example": {
                                  "summary": "Example networkgroup termination",
                                  "value": {
                                    "ip": "10.101.0.7",
                                    "port": 50159
                                  }
                                }
                              },
                              "public-term": {
                                "title": "Public Termination",
                                "description": "A public termination.",
                                "required": [
                                  "ip",
                                  "port"
                                ],
                                "type": "object",
                                "properties": {
                                  "ip": {
                                    "title": "IP Address",
                                    "description": "IP address.",
                                    "type": "string",
                                    "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                                    "example": "10.105.0.42"
                                  },
                                  "port": {
                                    "title": "Port",
                                    "description": "A port number.",
                                    "type": "integer",
                                    "format": "int32",
                                    "example": 50159
                                  }
                                },
                                "example": {
                                  "summary": "Example public termination",
                                  "value": {
                                    "ip": "62.210.251.80",
                                    "port": 45000
                                  }
                                }
                              },
                              "type": {
                                "title": "Endpoint Type",
                                "description": "The type of a networkgroup endpoint. It can be a client endpoint (`'ClientEndpoint'`) or a server endpoint (`'ServerEndpoint'`).",
                                "type": "string",
                                "enum": [
                                  "ClientEndpoint",
                                  "ServerEndpoint"
                                ]
                              },
                              "ng-ip": {
                                "title": "IP Address With Port",
                                "description": "IP address with port number.",
                                "type": "string",
                                "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/\\d{1,5}$",
                                "example": "10.105.0.0/16"
                              }
                            },
                            "example": {
                              "summary": "Example networkgroup enndpoint",
                              "value": {
                                "ng-term": {
                                  "ip": "10.101.0.7",
                                  "port": 50159
                                },
                                "public-term": {
                                  "ip": "62.210.251.80",
                                  "port": 45000
                                },
                                "type": "ServerEndpoint"
                              }
                            }
                          },
                          "parent_event": {
                            "title": "Parent Event",
                            "type": "string",
                            "nullable": true
                          },
                          "parent_member": {
                            "title": "Member `id`",
                            "description": "Unique `id` of a networkgroup member.",
                            "type": "string",
                            "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                          },
                          "type": {
                            "title": "Peer Type",
                            "description": "Type of a networkgroup peer.",
                            "type": "string",
                            "enum": [
                              "CleverPeer",
                              "ExternalPeer"
                            ]
                          }
                        },
                        "example": {
                          "summary": "Example peer",
                          "value": {
                            "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                            "label": "java-1",
                            "hostname": "java-1",
                            "hv": {
                              "host": "hv-par0-001",
                              "zone": {
                                "id": "par0"
                              }
                            },
                            "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                            "endpoint": {
                              "ng-term": {
                                "ip": "10.101.0.7",
                                "port": 50159
                              },
                              "public-term": {
                                "ip": "62.210.251.80",
                                "port": 45000
                              },
                              "type": "ServerEndpoint"
                            },
                            "parent_event": null,
                            "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                            "type": "CleverPeer"
                          }
                        }
                      }
                    },
                    "version": {
                      "title": "Version",
                      "description": "Version number.",
                      "type": "integer",
                      "format": "int32",
                      "example": 42
                    }
                  },
                  "example": {
                    "summary": "Example networkgroup",
                    "value": {
                      "id": "ng_c1acf968-be9b-4d84-a10c-c6817fada09d",
                      "owner_id": "orga_3eb78ce1-4ce8-4853-90cb-81c3e13c047f",
                      "label": "test-ng",
                      "description": "NG example",
                      "network_ip": "10.101.0.0/16",
                      "last-allocated-ip": "10.101.0.12",
                      "tags": [],
                      "peers": [
                        {
                          "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                          "label": "java-1",
                          "hostname": "java-1",
                          "hv": {
                            "host": "hv-par0-001",
                            "zone": {
                              "id": "par0"
                            }
                          },
                          "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                          "endpoint": {
                            "ng-term": {
                              "ip": "10.101.0.7",
                              "port": 50159
                            },
                            "public-term": {
                              "ip": "62.210.251.80",
                              "port": 45000
                            },
                            "type": "ServerEndpoint"
                          },
                          "parent_event": null,
                          "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                          "type": "CleverPeer"
                        },
                        {
                          "id": "external_f7f5fa23-a469-48c9-bf0b-7d8583d603b1",
                          "label": "mylaptop",
                          "hostname": "mylaptop",
                          "public-key": "GfTtsW0lrKjr7EDsrg2jglikIB+f3cV/wdBoThsESnA=",
                          "endpoint": {
                            "ng-ip": "10.101.0.12",
                            "type": "ClientEndpoint"
                          },
                          "parent_event": null,
                          "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                          "type": "ExternalPeer"
                        }
                      ],
                      "members": [
                        {
                          "id": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                          "label": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                          "domain-name": "mydom",
                          "type": "externalNode"
                        },
                        {
                          "id": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                          "label": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                          "domain-name": "app-tester",
                          "type": "application"
                        }
                      ],
                      "version": 14
                    }
                  }
                },
                "examples": {
                  "default": {
                    "summary": "Example networkgroup",
                    "value": {
                      "id": "ng_c1acf968-be9b-4d84-a10c-c6817fada09d",
                      "owner_id": "orga_3eb78ce1-4ce8-4853-90cb-81c3e13c047f",
                      "label": "test-ng",
                      "description": "NG example",
                      "network_ip": "10.101.0.0/16",
                      "last-allocated-ip": "10.101.0.12",
                      "tags": [],
                      "peers": [
                        {
                          "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                          "label": "java-1",
                          "hostname": "java-1",
                          "hv": {
                            "host": "hv-par0-001",
                            "zone": {
                              "id": "par0"
                            }
                          },
                          "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                          "endpoint": {
                            "ng-term": {
                              "ip": "10.101.0.7",
                              "port": 50159
                            },
                            "public-term": {
                              "ip": "62.210.251.80",
                              "port": 45000
                            },
                            "type": "ServerEndpoint"
                          },
                          "parent_event": null,
                          "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                          "type": "CleverPeer"
                        },
                        {
                          "id": "external_f7f5fa23-a469-48c9-bf0b-7d8583d603b1",
                          "label": "mylaptop",
                          "hostname": "mylaptop",
                          "public-key": "GfTtsW0lrKjr7EDsrg2jglikIB+f3cV/wdBoThsESnA=",
                          "endpoint": {
                            "ng-ip": "10.101.0.12",
                            "type": "ClientEndpoint"
                          },
                          "parent_event": null,
                          "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                          "type": "ExternalPeer"
                        }
                      ],
                      "members": [
                        {
                          "id": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                          "label": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                          "domain-name": "mydom",
                          "type": "externalNode"
                        },
                        {
                          "id": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                          "label": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                          "domain-name": "app-tester",
                          "type": "application"
                        }
                      ],
                      "version": 14
                    }
                  },
                  "new": {
                    "summary": "Newly created networkgroup",
                    "value": {
                      "id": "ng_9636dfb1-d507-48d1-8c49-efedba0bbf22",
                      "owner_id": "orga_74d97a1f-30a9-4015-8f69-bd46e0152417",
                      "label": "example-ng",
                      "description": "Example networkgroup",
                      "network_ip": "10.101.0.0/16",
                      "last-allocated-ip": "10.101.0.0",
                      "tags": [],
                      "peers": [],
                      "members": [],
                      "version": 0
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Networkgroup not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "networkgroups"
        ],
        "summary": "Delete Networkgroup",
        "description": "Deletes a networkgroup.",
        "operationId": "deleteNetworkgroup",
        "x-service": "networkgroup",
        "x-function": "deleteNg",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success - No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/networkgroups/organisations/{ownerId}/networkgroups/{ngId}/members": {
      "get": {
        "tags": [
          "networkgroups"
        ],
        "summary": "List Members",
        "description": "Lists members from a networkgroup.",
        "operationId": "listMembers",
        "x-service": "networkgroup",
        "x-function": "listMembers",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Members",
                  "description": "List of `Member`s in a networkgroup.",
                  "type": "array",
                  "items": {
                    "title": "Member",
                    "description": "A networkgroup member is a set of nodes that should be in the network by a simple predicate: `id` is equals to an app `id` (i.e. `app_xxx`), an add-on `id` (i.e. `addon_xxx`) or an external node category `id`.",
                    "required": [
                      "id",
                      "label",
                      "domain-name",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Member `id`",
                        "description": "Unique `id` of a networkgroup member.",
                        "type": "string",
                        "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                      },
                      "label": {
                        "title": "Member Label",
                        "description": "Human-readable name of a networkgroup member.",
                        "type": "string"
                      },
                      "domain-name": {
                        "title": "Member Name",
                        "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias.",
                        "type": "string"
                      },
                      "type": {
                        "title": "Member Type",
                        "description": "The type of a networkgroup member. It can be an application (`'application'`), an add-on (`'addon'`) or an external node (`'external'`).",
                        "type": "string",
                        "enum": [
                          "application",
                          "addon",
                          "external"
                        ]
                      }
                    },
                    "example": {
                      "summary": "Example networkgroup member",
                      "value": {
                        "id": "app_0596acdb-fc59-4fdd-b747-0e3754460a63",
                        "label": "My Member",
                        "domain-name": "my-domain",
                        "type": "application"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "summary": "Simple Example",
                    "description": "An example list of networkgroup members.",
                    "value": [
                      {
                        "id": "app_c992f9db-9a03-4e96-b1ab-29afedebee93",
                        "label": "My first app",
                        "domain-name": "app-1",
                        "type": "application"
                      },
                      {
                        "id": "laptops-1",
                        "label": "Company laptops",
                        "domain-name": "laptops",
                        "type": "externalNode"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Networkgroup not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "networkgroups"
        ],
        "summary": "Add Member",
        "description": "Adds a member to a networkgroup.",
        "operationId": "addMember",
        "x-service": "networkgroup",
        "x-function": "addMember",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "Create Member Request",
                "description": "A networkgroup member is a set of nodes that should be in the network by a simple predicate: `id` is equals to an app `id` (i.e. `app_xxx`), an add-on `id` (i.e. `addon_xxx`) or an external node category `id`.",
                "required": [
                  "id",
                  "label",
                  "domain-name",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "title": "Member `id`",
                    "description": "Unique `id` of a networkgroup member.",
                    "type": "string",
                    "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                  },
                  "label": {
                    "title": "Member Label",
                    "description": "Human-readable name of a networkgroup member.",
                    "type": "string"
                  },
                  "domain-name": {
                    "title": "Member Name",
                    "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias.",
                    "type": "string"
                  },
                  "type": {
                    "title": "Member Type",
                    "description": "The type of a networkgroup member. It can be an application (`'application'`), an add-on (`'addon'`) or an external node (`'external'`).",
                    "type": "string",
                    "enum": [
                      "application",
                      "addon",
                      "external"
                    ]
                  }
                },
                "example": {
                  "summary": "Simple Example",
                  "description": "Example request for adding a networkgroup member.",
                  "value": {
                    "id": "app_52061589-530c-448a-8a2b-217230da2408",
                    "label": "My Member",
                    "domain-name": "my-domain",
                    "type": "application"
                  }
                }
              },
              "examples": {
                "default": {
                  "summary": "Simple Example",
                  "description": "Example request for adding a networkgroup member.",
                  "value": {
                    "id": "app_52061589-530c-448a-8a2b-217230da2408",
                    "label": "My Member",
                    "domain-name": "my-domain",
                    "type": "application"
                  }
                },
                "Dynamic": {
                  "summary": "Postman Dynamic Example",
                  "description": "Example request for adding a networkgroup member with Postman.",
                  "value": {
                    "id": "{{$randomLoremSlug}}",
                    "label": "{{$randomLoremWords}}",
                    "domain-name": "{{$randomLoremSlug}}",
                    "type": "external"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Success - Accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "The request has been accepted for processing, but the processing has not been completed."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Invalid body (e.g. `type`)": {
                    "value": "server can't do that, Seems the member you try to add is invalid"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Networkgroup not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/networkgroups/organisations/{ownerId}/networkgroups/{ngId}/members/{memberId}": {
      "get": {
        "tags": [
          "networkgroups"
        ],
        "summary": "Get Member",
        "description": "Gets details from a networkgroup member.",
        "operationId": "getMember",
        "x-service": "networkgroup",
        "x-function": "getMember",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "A networkgroup member `id`.",
            "required": true,
            "schema": {
              "title": "Member `id`",
              "description": "Unique `id` of a networkgroup member.",
              "type": "string",
              "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
            },
            "examples": {
              "Dynamic": {
                "value": "{{memberId}}"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Member",
                  "description": "A networkgroup member is a set of nodes that should be in the network by a simple predicate: `id` is equals to an app `id` (i.e. `app_xxx`), an add-on `id` (i.e. `addon_xxx`) or an external node category `id`.",
                  "required": [
                    "id",
                    "label",
                    "domain-name",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Member `id`",
                      "description": "Unique `id` of a networkgroup member.",
                      "type": "string",
                      "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                    },
                    "label": {
                      "title": "Member Label",
                      "description": "Human-readable name of a networkgroup member.",
                      "type": "string"
                    },
                    "domain-name": {
                      "title": "Member Name",
                      "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias.",
                      "type": "string"
                    },
                    "type": {
                      "title": "Member Type",
                      "description": "The type of a networkgroup member. It can be an application (`'application'`), an add-on (`'addon'`) or an external node (`'external'`).",
                      "type": "string",
                      "enum": [
                        "application",
                        "addon",
                        "external"
                      ]
                    }
                  },
                  "example": {
                    "summary": "Example networkgroup member",
                    "value": {
                      "id": "app_0596acdb-fc59-4fdd-b747-0e3754460a63",
                      "label": "My Member",
                      "domain-name": "my-domain",
                      "type": "application"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "summary": "Example networkgroup member",
                    "value": {
                      "id": "app_0596acdb-fc59-4fdd-b747-0e3754460a63",
                      "label": "My Member",
                      "domain-name": "my-domain",
                      "type": "application"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Networkgroup not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  },
                  "Member not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "networkgroups"
        ],
        "summary": "Remove Member",
        "description": "Removes a member from a networkgroup.",
        "operationId": "removeMember",
        "x-service": "networkgroup",
        "x-function": "removeMember",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "A networkgroup member `id`.",
            "required": true,
            "schema": {
              "title": "Member `id`",
              "description": "Unique `id` of a networkgroup member.",
              "type": "string",
              "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
            },
            "examples": {
              "Dynamic": {
                "value": "{{memberId}}"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success - No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Networkgroup not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  },
                  "Member not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/networkgroups/organisations/{ownerId}/networkgroups/{ngId}/peers": {
      "get": {
        "tags": [
          "networkgroups"
        ],
        "summary": "List Peers",
        "description": "Lists peers connected to a networkgroup.",
        "operationId": "listPeers",
        "x-service": "networkgroup",
        "x-function": "listPeers",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Peers",
                  "description": "List of `Peer`s in a networkgroup.",
                  "type": "array",
                  "items": {
                    "title": "Peer",
                    "required": [
                      "id",
                      "label",
                      "hostname",
                      "public-key",
                      "endpoint",
                      "parent_event",
                      "parent_member",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "Peer `id`",
                        "description": "Unique `id` of a networkgroup peer.",
                        "type": "string",
                        "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                      },
                      "label": {
                        "title": "Peer Label",
                        "description": "Label of a networkgroup peer.",
                        "type": "string"
                      },
                      "hostname": {
                        "title": "Host Name",
                        "description": "Host name of a networkgroup peer.",
                        "type": "string",
                        "example": "rust-1"
                      },
                      "hv": {
                        "title": "Hypervisor",
                        "required": [
                          "host",
                          "zone"
                        ],
                        "type": "object",
                        "properties": {
                          "host": {
                            "title": "Host Name",
                            "description": "Name of the hypervisor host.",
                            "type": "string",
                            "example": "hv-par0-001"
                          },
                          "zone": {
                            "title": "Zone",
                            "required": [
                              "id"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Zone `id`",
                                "description": "A zone `id`.",
                                "type": "string",
                                "example": "par0"
                              }
                            },
                            "example": {
                              "summary": "Example zone",
                              "value": {
                                "id": "par0"
                              }
                            }
                          }
                        },
                        "example": {
                          "summary": "Example hypervisor",
                          "value": {
                            "host": "hv-par0-001",
                            "zone": {
                              "id": "par0"
                            }
                          }
                        }
                      },
                      "public-key": {
                        "title": "WireGuard® Public Key",
                        "description": "WireGuard® public key of a networkgroup peer. It's a Base64-encoded string (hence the format).",
                        "type": "string",
                        "format": "[a-zA-Z0-9+/]{43}=",
                        "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                      },
                      "endpoint": {
                        "title": "Endpoint",
                        "required": [
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "ng-term": {
                            "title": "Networkgroup Termination",
                            "description": "A networkgroup termination.",
                            "required": [
                              "ip",
                              "port"
                            ],
                            "type": "object",
                            "properties": {
                              "ip": {
                                "title": "IP Address",
                                "description": "IP address.",
                                "type": "string",
                                "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                                "example": "10.105.0.42"
                              },
                              "port": {
                                "title": "Port",
                                "description": "A port number.",
                                "type": "integer",
                                "format": "int32",
                                "example": 50159
                              }
                            },
                            "example": {
                              "summary": "Example networkgroup termination",
                              "value": {
                                "ip": "10.101.0.7",
                                "port": 50159
                              }
                            }
                          },
                          "public-term": {
                            "title": "Public Termination",
                            "description": "A public termination.",
                            "required": [
                              "ip",
                              "port"
                            ],
                            "type": "object",
                            "properties": {
                              "ip": {
                                "title": "IP Address",
                                "description": "IP address.",
                                "type": "string",
                                "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                                "example": "10.105.0.42"
                              },
                              "port": {
                                "title": "Port",
                                "description": "A port number.",
                                "type": "integer",
                                "format": "int32",
                                "example": 50159
                              }
                            },
                            "example": {
                              "summary": "Example public termination",
                              "value": {
                                "ip": "62.210.251.80",
                                "port": 45000
                              }
                            }
                          },
                          "type": {
                            "title": "Endpoint Type",
                            "description": "The type of a networkgroup endpoint. It can be a client endpoint (`'ClientEndpoint'`) or a server endpoint (`'ServerEndpoint'`).",
                            "type": "string",
                            "enum": [
                              "ClientEndpoint",
                              "ServerEndpoint"
                            ]
                          },
                          "ng-ip": {
                            "title": "IP Address With Port",
                            "description": "IP address with port number.",
                            "type": "string",
                            "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/\\d{1,5}$",
                            "example": "10.105.0.0/16"
                          }
                        },
                        "example": {
                          "summary": "Example networkgroup enndpoint",
                          "value": {
                            "ng-term": {
                              "ip": "10.101.0.7",
                              "port": 50159
                            },
                            "public-term": {
                              "ip": "62.210.251.80",
                              "port": 45000
                            },
                            "type": "ServerEndpoint"
                          }
                        }
                      },
                      "parent_event": {
                        "title": "Parent Event",
                        "type": "string",
                        "nullable": true
                      },
                      "parent_member": {
                        "title": "Member `id`",
                        "description": "Unique `id` of a networkgroup member.",
                        "type": "string",
                        "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                      },
                      "type": {
                        "title": "Peer Type",
                        "description": "Type of a networkgroup peer.",
                        "type": "string",
                        "enum": [
                          "CleverPeer",
                          "ExternalPeer"
                        ]
                      }
                    },
                    "example": {
                      "summary": "Example peer",
                      "value": {
                        "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                        "label": "java-1",
                        "hostname": "java-1",
                        "hv": {
                          "host": "hv-par0-001",
                          "zone": {
                            "id": "par0"
                          }
                        },
                        "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                        "endpoint": {
                          "ng-term": {
                            "ip": "10.101.0.7",
                            "port": 50159
                          },
                          "public-term": {
                            "ip": "62.210.251.80",
                            "port": 45000
                          },
                          "type": "ServerEndpoint"
                        },
                        "parent_event": null,
                        "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                        "type": "CleverPeer"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "summary": "Simple Example",
                    "description": "An example list of networkgroup peers.",
                    "value": [
                      {
                        "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                        "label": "java-1",
                        "hostname": "java-1",
                        "hv": {
                          "host": "hv-par0-001",
                          "zone": {
                            "id": "par0"
                          }
                        },
                        "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                        "endpoint": {
                          "ng-term": {
                            "ip": "10.101.0.7",
                            "port": 50159
                          },
                          "public-term": {
                            "ip": "62.210.251.80",
                            "port": 45000
                          },
                          "type": "ServerEndpoint"
                        },
                        "parent_event": null,
                        "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                        "type": "CleverPeer"
                      },
                      {
                        "id": "external_f7f5fa23-a469-48c9-bf0b-7d8583d603b1",
                        "label": "mylaptop",
                        "hostname": "mylaptop",
                        "public-key": "GfTtsW0lrKjr7EDsrg2jglikIB+f3cV/wdBoThsESnA=",
                        "endpoint": {
                          "ng-ip": "10.101.0.12",
                          "type": "ClientEndpoint"
                        },
                        "parent_event": null,
                        "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e93",
                        "type": "ExternalPeer"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Networkgroup not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/networkgroups/organisations/{ownerId}/networkgroups/{ngId}/peers/{peerId}": {
      "get": {
        "tags": [
          "networkgroups"
        ],
        "summary": "Get Peer",
        "description": "Gets details from a networkgroup peer.",
        "operationId": "getPeer",
        "x-service": "networkgroup",
        "x-function": "getPeer",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          },
          {
            "name": "peerId",
            "in": "path",
            "description": "A networkgroup peer `id`.",
            "required": true,
            "schema": {
              "title": "Peer `id`",
              "description": "Unique `id` of a networkgroup peer.",
              "type": "string",
              "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
            },
            "examples": {
              "Dynamic": {
                "value": "{{peerId}}"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Peer",
                  "required": [
                    "id",
                    "label",
                    "hostname",
                    "public-key",
                    "endpoint",
                    "parent_event",
                    "parent_member",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Peer `id`",
                      "description": "Unique `id` of a networkgroup peer.",
                      "type": "string",
                      "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                    },
                    "label": {
                      "title": "Peer Label",
                      "description": "Label of a networkgroup peer.",
                      "type": "string"
                    },
                    "hostname": {
                      "title": "Host Name",
                      "description": "Host name of a networkgroup peer.",
                      "type": "string",
                      "example": "rust-1"
                    },
                    "hv": {
                      "title": "Hypervisor",
                      "required": [
                        "host",
                        "zone"
                      ],
                      "type": "object",
                      "properties": {
                        "host": {
                          "title": "Host Name",
                          "description": "Name of the hypervisor host.",
                          "type": "string",
                          "example": "hv-par0-001"
                        },
                        "zone": {
                          "title": "Zone",
                          "required": [
                            "id"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "Zone `id`",
                              "description": "A zone `id`.",
                              "type": "string",
                              "example": "par0"
                            }
                          },
                          "example": {
                            "summary": "Example zone",
                            "value": {
                              "id": "par0"
                            }
                          }
                        }
                      },
                      "example": {
                        "summary": "Example hypervisor",
                        "value": {
                          "host": "hv-par0-001",
                          "zone": {
                            "id": "par0"
                          }
                        }
                      }
                    },
                    "public-key": {
                      "title": "WireGuard® Public Key",
                      "description": "WireGuard® public key of a networkgroup peer. It's a Base64-encoded string (hence the format).",
                      "type": "string",
                      "format": "[a-zA-Z0-9+/]{43}=",
                      "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                    },
                    "endpoint": {
                      "title": "Endpoint",
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "ng-term": {
                          "title": "Networkgroup Termination",
                          "description": "A networkgroup termination.",
                          "required": [
                            "ip",
                            "port"
                          ],
                          "type": "object",
                          "properties": {
                            "ip": {
                              "title": "IP Address",
                              "description": "IP address.",
                              "type": "string",
                              "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                              "example": "10.105.0.42"
                            },
                            "port": {
                              "title": "Port",
                              "description": "A port number.",
                              "type": "integer",
                              "format": "int32",
                              "example": 50159
                            }
                          },
                          "example": {
                            "summary": "Example networkgroup termination",
                            "value": {
                              "ip": "10.101.0.7",
                              "port": 50159
                            }
                          }
                        },
                        "public-term": {
                          "title": "Public Termination",
                          "description": "A public termination.",
                          "required": [
                            "ip",
                            "port"
                          ],
                          "type": "object",
                          "properties": {
                            "ip": {
                              "title": "IP Address",
                              "description": "IP address.",
                              "type": "string",
                              "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                              "example": "10.105.0.42"
                            },
                            "port": {
                              "title": "Port",
                              "description": "A port number.",
                              "type": "integer",
                              "format": "int32",
                              "example": 50159
                            }
                          },
                          "example": {
                            "summary": "Example public termination",
                            "value": {
                              "ip": "62.210.251.80",
                              "port": 45000
                            }
                          }
                        },
                        "type": {
                          "title": "Endpoint Type",
                          "description": "The type of a networkgroup endpoint. It can be a client endpoint (`'ClientEndpoint'`) or a server endpoint (`'ServerEndpoint'`).",
                          "type": "string",
                          "enum": [
                            "ClientEndpoint",
                            "ServerEndpoint"
                          ]
                        },
                        "ng-ip": {
                          "title": "IP Address With Port",
                          "description": "IP address with port number.",
                          "type": "string",
                          "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/\\d{1,5}$",
                          "example": "10.105.0.0/16"
                        }
                      },
                      "example": {
                        "summary": "Example networkgroup enndpoint",
                        "value": {
                          "ng-term": {
                            "ip": "10.101.0.7",
                            "port": 50159
                          },
                          "public-term": {
                            "ip": "62.210.251.80",
                            "port": 45000
                          },
                          "type": "ServerEndpoint"
                        }
                      }
                    },
                    "parent_event": {
                      "title": "Parent Event",
                      "type": "string",
                      "nullable": true
                    },
                    "parent_member": {
                      "title": "Member `id`",
                      "description": "Unique `id` of a networkgroup member.",
                      "type": "string",
                      "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                    },
                    "type": {
                      "title": "Peer Type",
                      "description": "Type of a networkgroup peer.",
                      "type": "string",
                      "enum": [
                        "CleverPeer",
                        "ExternalPeer"
                      ]
                    }
                  },
                  "example": {
                    "summary": "Example peer",
                    "value": {
                      "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                      "label": "java-1",
                      "hostname": "java-1",
                      "hv": {
                        "host": "hv-par0-001",
                        "zone": {
                          "id": "par0"
                        }
                      },
                      "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                      "endpoint": {
                        "ng-term": {
                          "ip": "10.101.0.7",
                          "port": 50159
                        },
                        "public-term": {
                          "ip": "62.210.251.80",
                          "port": 45000
                        },
                        "type": "ServerEndpoint"
                      },
                      "parent_event": null,
                      "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                      "type": "CleverPeer"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "summary": "Example peer",
                    "value": {
                      "id": "ea21854c-a12a-4f90-9701-d329d8f99f96",
                      "label": "java-1",
                      "hostname": "java-1",
                      "hv": {
                        "host": "hv-par0-001",
                        "zone": {
                          "id": "par0"
                        }
                      },
                      "public-key": "kd9swNEpWvoovJ9QO8xZg3SEm7RPSDddgdA5KyEFtgM=",
                      "endpoint": {
                        "ng-term": {
                          "ip": "10.101.0.7",
                          "port": 50159
                        },
                        "public-term": {
                          "ip": "62.210.251.80",
                          "port": 45000
                        },
                        "type": "ServerEndpoint"
                      },
                      "parent_event": null,
                      "parent_member": "app_b888f06d-3adb-4cf1-b017-7eac4f096e90",
                      "type": "CleverPeer"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Networkgroup not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  },
                  "Peer not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/networkgroups/organisations/{ownerId}/networkgroups/{ngId}/external-peers": {
      "post": {
        "tags": [
          "networkgroups"
        ],
        "summary": "Add External Peer",
        "description": "Adds an external peer to a networkgroup.",
        "operationId": "addExternalPeer",
        "x-service": "networkgroup",
        "x-function": "addExternalPeer",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "title": "Add External Peer Request",
                "required": [
                  "peer-role",
                  "public-key",
                  "parent_member"
                ],
                "type": "object",
                "properties": {
                  "peer-role": {
                    "title": "Role",
                    "description": "The role of this peer in the networkgroup. Either client (`'client'`) or server (`'server'`).",
                    "type": "string",
                    "enum": [
                      "client",
                      "server"
                    ]
                  },
                  "label": {
                    "title": "Peer Label",
                    "description": "Label of a networkgroup peer.",
                    "type": "string"
                  },
                  "public-key": {
                    "title": "WireGuard® Public Key",
                    "description": "WireGuard® public key of a networkgroup peer. It's a Base64-encoded string (hence the format).",
                    "type": "string",
                    "format": "[a-zA-Z0-9+/]{43}=",
                    "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                  },
                  "hostname": {
                    "title": "Host Name",
                    "description": "Host name of a networkgroup peer.",
                    "type": "string",
                    "example": "rust-1"
                  },
                  "parent_member": {
                    "title": "Member `id`",
                    "description": "Unique `id` of a networkgroup member.",
                    "type": "string",
                    "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                  },
                  "ip": {
                    "title": "IP Address",
                    "description": "The public IP on which you are listening (only for `server` role).",
                    "type": "string",
                    "format": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                    "example": "10.105.0.42"
                  },
                  "port": {
                    "title": "Port",
                    "description": "The public port on which you are listening (only for `server` role).",
                    "type": "integer",
                    "format": "int32",
                    "example": 50159
                  }
                }
              },
              "examples": {
                "default": {
                  "summary": "Simple Example",
                  "description": "Example request for adding a networkgroup external peer.",
                  "value": {
                    "peer-role": "client",
                    "public-key": "J0OW17ZDXvByNDDM7nv3KB+vwkvvJUGYGqpsncxZnzU=",
                    "label": "My laptop",
                    "hostname": "my-laptop",
                    "parent_member": "company-laptops"
                  }
                },
                "Dynamic": {
                  "summary": "Postman Dynamic Example",
                  "description": "Example request for adding a networkgroup external peer with Postman.",
                  "value": {
                    "peer-role": "server",
                    "public-key": "{{$randomPassword}}",
                    "ip": "{{$randomIP}}",
                    "port": "{{$randomInt}}",
                    "label": "{{$randomWords}}",
                    "hostname": "{{$randomLoremSlug}}",
                    "parent_member": "{{memberId}}"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Add External Peer Response",
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Peer `id`",
                      "description": "Unique `id` of a networkgroup peer.",
                      "type": "string",
                      "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "summary": "Example Response",
                    "description": "Example response for adding a networkgroup external peer.",
                    "value": {
                      "id": "external_2824083d-077b-4ec2-9e7c-8dffb2dcd979"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Invalid field (`ip`)": {
                    "value": "The request content was malformed:\n012.345.678.901 is not a correct ip address: DownField(ip)"
                  },
                  "Missing field (`public-key`)": {
                    "value": "The request content was malformed:\nAttempt to decode value on failed cursor: DownField(public-key)"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Networkgroup not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/networkgroups/organisations/{ownerId}/networkgroups/{ngId}/external-peers/{peerId}": {
      "delete": {
        "tags": [
          "networkgroups"
        ],
        "summary": "Remove External Peer",
        "description": "Removes an external peer from a networkgroup.",
        "operationId": "removeExternalPeer",
        "x-service": "networkgroup",
        "x-function": "removeExternalPeer",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          },
          {
            "name": "peerId",
            "in": "path",
            "description": "A networkgroup peer `id`.",
            "required": true,
            "schema": {
              "title": "Peer `id`",
              "description": "Unique `id` of a networkgroup peer.",
              "type": "string",
              "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
            },
            "examples": {
              "Dynamic": {
                "value": "{{peerId}}"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success - No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Networkgroup not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  },
                  "Peer not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/networkgroups/organisations/{ownerId}/networkgroups/{ngId}/peers/{peerId}/wireguard/configuration": {
      "get": {
        "tags": [
          "networkgroups"
        ],
        "summary": "Get WireGuard® Configuration",
        "description": "Gets the actual WireGuard® tunnel configuration file for a networkgroup peer. The endpoint returns a `wg-quick` configuration file encoded in Base64 format, without its owner's private key. In `[Interface]`, you have to replace `PrivateKey = <%PrivateKey%>` by the desired private key.",
        "operationId": "getWgConf",
        "x-service": "networkgroup",
        "x-function": "getWgConf",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          },
          {
            "name": "peerId",
            "in": "path",
            "description": "A networkgroup peer `id`.",
            "required": true,
            "schema": {
              "title": "Peer `id`",
              "description": "Unique `id` of a networkgroup peer.",
              "type": "string",
              "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
            },
            "examples": {
              "Dynamic": {
                "value": "{{peerId}}"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "title": "WireGuard® Configuration",
                  "description": "WireGuard® configuration for a specific networkgroup peer.",
                  "required": [
                    "ng-id",
                    "peer-id",
                    "version",
                    "configuration"
                  ],
                  "type": "object",
                  "properties": {
                    "ng-id": {
                      "title": "Networkgroup `id`",
                      "description": "Unique `id` of a networkgroup.",
                      "type": "string",
                      "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                    },
                    "peer-id": {
                      "title": "Peer `id`",
                      "description": "Unique `id` of a networkgroup peer.",
                      "type": "string",
                      "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                    },
                    "version": {
                      "title": "WireGuard® Public Key",
                      "description": "WireGuard® public key of a networkgroup peer. It's a Base64-encoded string (hence the format).",
                      "type": "string",
                      "format": "[a-zA-Z0-9+/]{43}=",
                      "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                    },
                    "configuration": {
                      "title": "WireGuard® Configuration File",
                      "description": "A WireGuard® tunnel configuration file encoded in Base64 format, without its owner's private key. In `[Interface]`, you have to replace `PrivateKey = <%PrivateKey%>` by the desired private key.",
                      "type": "string",
                      "example": {
                        "summary": "Example WireGuard® configuration file",
                        "value": "W0ludGVyZmFjZV0NClByaXZhdGVLZXkgPSA8JVByaXZhdGVLZXklPg0KQWRkcmVzcyA9IDEwLjEwMi4wLjYvMTYNCg0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gS2o5cFRDTjFMQ1JaYms1U1kxbFNPU3hJT2t4dFgyVlJWRlUwTkNaeGNTNHUNCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuMTAvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFpsOTlYV1p5VGpSa1J6TmJVWEF1Sm5WSVZTTXJaaWxrVmxSOVFGb3NSamdLDQogICAgQWxsb3dlZElQcyA9IDEwLjEwMi4wLjUvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFlTMDVjaU5IWkVaNlpqZGpTMTF3TkhWNU4xUXBNMnRRYVVKWVdHUlNYem8NCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuOS8zMg0KICAgIFBlcnNpc3RlbnRLZWVwYWxpdmUgPSAyNQ0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gSVdneldWMGpLRjhsZWwxcmNIczJOV2NyVURRckxHbHlXRlFsVFQ4amUzMA0KICAgIEFsbG93ZWRJUHMgPSAxMC4xMDIuMC43LzMyDQogICAgUGVyc2lzdGVudEtlZXBhbGl2ZSA9IDI1DQoNCg0K"
                      }
                    }
                  },
                  "example": {
                    "summary": "Example WireGuard® configuration",
                    "value": {
                      "ng-id": "ng_78da65ea-dfe2-4819-9aa6-721e9d6eaea6",
                      "peer-id": "external_e540d94c-3334-4263-8fa1-3cf40857fc06",
                      "version": 42,
                      "configuration": "W0ludGVyZmFjZV0NClByaXZhdGVLZXkgPSA8JVByaXZhdGVLZXklPg0KQWRkcmVzcyA9IDEwLjEwMi4wLjYvMTYNCg0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gS2o5cFRDTjFMQ1JaYms1U1kxbFNPU3hJT2t4dFgyVlJWRlUwTkNaeGNTNHUNCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuMTAvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFpsOTlYV1p5VGpSa1J6TmJVWEF1Sm5WSVZTTXJaaWxrVmxSOVFGb3NSamdLDQogICAgQWxsb3dlZElQcyA9IDEwLjEwMi4wLjUvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFlTMDVjaU5IWkVaNlpqZGpTMTF3TkhWNU4xUXBNMnRRYVVKWVdHUlNYem8NCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuOS8zMg0KICAgIFBlcnNpc3RlbnRLZWVwYWxpdmUgPSAyNQ0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gSVdneldWMGpLRjhsZWwxcmNIczJOV2NyVURRckxHbHlXRlFsVFQ4amUzMA0KICAgIEFsbG93ZWRJUHMgPSAxMC4xMDIuMC43LzMyDQogICAgUGVyc2lzdGVudEtlZXBhbGl2ZSA9IDI1DQoNCg0K"
                    }
                  }
                },
                "examples": {
                  "default": {
                    "summary": "Example WireGuard® configuration",
                    "value": {
                      "ng-id": "ng_78da65ea-dfe2-4819-9aa6-721e9d6eaea6",
                      "peer-id": "external_e540d94c-3334-4263-8fa1-3cf40857fc06",
                      "version": 42,
                      "configuration": "W0ludGVyZmFjZV0NClByaXZhdGVLZXkgPSA8JVByaXZhdGVLZXklPg0KQWRkcmVzcyA9IDEwLjEwMi4wLjYvMTYNCg0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gS2o5cFRDTjFMQ1JaYms1U1kxbFNPU3hJT2t4dFgyVlJWRlUwTkNaeGNTNHUNCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuMTAvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFpsOTlYV1p5VGpSa1J6TmJVWEF1Sm5WSVZTTXJaaWxrVmxSOVFGb3NSamdLDQogICAgQWxsb3dlZElQcyA9IDEwLjEwMi4wLjUvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFlTMDVjaU5IWkVaNlpqZGpTMTF3TkhWNU4xUXBNMnRRYVVKWVdHUlNYem8NCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuOS8zMg0KICAgIFBlcnNpc3RlbnRLZWVwYWxpdmUgPSAyNQ0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gSVdneldWMGpLRjhsZWwxcmNIczJOV2NyVURRckxHbHlXRlFsVFQ4amUzMA0KICAgIEFsbG93ZWRJUHMgPSAxMC4xMDIuMC43LzMyDQogICAgUGVyc2lzdGVudEtlZXBhbGl2ZSA9IDI1DQoNCg0K"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Networkgroup not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  },
                  "Peer not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/networkgroups/organisations/{ownerId}/networkgroups/{ngId}/peers/{peerId}/wireguard/configuration/stream": {
      "get": {
        "tags": [
          "networkgroups",
          "sse"
        ],
        "summary": "WireGuard® Configuration SSE",
        "description": "Retreives the actual WireGuard® configuration file for a networkgroup peer as a Server Sent Event. The `'conf'` event returns a `wg-quick` configuration file encoded in Base64 format, without its owner's private key. In `[Interface]`, you have to replace `PrivateKey = <%PrivateKey%>` by the desired private key.",
        "operationId": "sseWgConf",
        "x-service": "networkgroup",
        "x-function": "sseWgConf",
        "security": [
          {
            "OAuth1": []
          }
        ],
        "parameters": [
          {
            "name": "ownerId",
            "in": "path",
            "description": "An owner `id`. It can be a user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
            "required": true,
            "schema": {
              "title": "Owner `id`",
              "description": "A user `id` (i.e. `user_xxx`) for personal space, or an organization `id` (i.e. `orga_xxx`).",
              "type": "string",
              "example": "orga_e7b264c3-fb77-46c6-9c8f-899e14465330"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ownerId}}"
              }
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "description": "A networkgroup `id`.",
            "required": true,
            "schema": {
              "title": "Networkgroup `id`",
              "description": "Unique `id` of a networkgroup.",
              "type": "string",
              "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
            },
            "examples": {
              "Dynamic": {
                "value": "{{ngId}}"
              }
            }
          },
          {
            "name": "peerId",
            "in": "path",
            "description": "A networkgroup peer `id`.",
            "required": true,
            "schema": {
              "title": "Peer `id`",
              "description": "Unique `id` of a networkgroup peer.",
              "type": "string",
              "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
            },
            "examples": {
              "Dynamic": {
                "value": "{{peerId}}"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/event-stream": {
                "schema": {
                  "oneOf": [
                    {
                      "title": "WireGuard® Configuration",
                      "description": "WireGuard® configuration for a specific networkgroup peer.",
                      "required": [
                        "ng-id",
                        "peer-id",
                        "version",
                        "configuration"
                      ],
                      "type": "object",
                      "properties": {
                        "ng-id": {
                          "title": "Networkgroup `id`",
                          "description": "Unique `id` of a networkgroup.",
                          "type": "string",
                          "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                        },
                        "peer-id": {
                          "title": "Peer `id`",
                          "description": "Unique `id` of a networkgroup peer.",
                          "type": "string",
                          "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                        },
                        "version": {
                          "title": "WireGuard® Public Key",
                          "description": "WireGuard® public key of a networkgroup peer. It's a Base64-encoded string (hence the format).",
                          "type": "string",
                          "format": "[a-zA-Z0-9+/]{43}=",
                          "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                        },
                        "configuration": {
                          "title": "WireGuard® Configuration File",
                          "description": "A WireGuard® tunnel configuration file encoded in Base64 format, without its owner's private key. In `[Interface]`, you have to replace `PrivateKey = <%PrivateKey%>` by the desired private key.",
                          "type": "string",
                          "example": {
                            "summary": "Example WireGuard® configuration file",
                            "value": "W0ludGVyZmFjZV0NClByaXZhdGVLZXkgPSA8JVByaXZhdGVLZXklPg0KQWRkcmVzcyA9IDEwLjEwMi4wLjYvMTYNCg0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gS2o5cFRDTjFMQ1JaYms1U1kxbFNPU3hJT2t4dFgyVlJWRlUwTkNaeGNTNHUNCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuMTAvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFpsOTlYV1p5VGpSa1J6TmJVWEF1Sm5WSVZTTXJaaWxrVmxSOVFGb3NSamdLDQogICAgQWxsb3dlZElQcyA9IDEwLjEwMi4wLjUvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFlTMDVjaU5IWkVaNlpqZGpTMTF3TkhWNU4xUXBNMnRRYVVKWVdHUlNYem8NCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuOS8zMg0KICAgIFBlcnNpc3RlbnRLZWVwYWxpdmUgPSAyNQ0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gSVdneldWMGpLRjhsZWwxcmNIczJOV2NyVURRckxHbHlXRlFsVFQ4amUzMA0KICAgIEFsbG93ZWRJUHMgPSAxMC4xMDIuMC43LzMyDQogICAgUGVyc2lzdGVudEtlZXBhbGl2ZSA9IDI1DQoNCg0K"
                          }
                        }
                      },
                      "example": {
                        "summary": "Example WireGuard® configuration",
                        "value": {
                          "ng-id": "ng_78da65ea-dfe2-4819-9aa6-721e9d6eaea6",
                          "peer-id": "external_e540d94c-3334-4263-8fa1-3cf40857fc06",
                          "version": 42,
                          "configuration": "W0ludGVyZmFjZV0NClByaXZhdGVLZXkgPSA8JVByaXZhdGVLZXklPg0KQWRkcmVzcyA9IDEwLjEwMi4wLjYvMTYNCg0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gS2o5cFRDTjFMQ1JaYms1U1kxbFNPU3hJT2t4dFgyVlJWRlUwTkNaeGNTNHUNCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuMTAvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFpsOTlYV1p5VGpSa1J6TmJVWEF1Sm5WSVZTTXJaaWxrVmxSOVFGb3NSamdLDQogICAgQWxsb3dlZElQcyA9IDEwLjEwMi4wLjUvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFlTMDVjaU5IWkVaNlpqZGpTMTF3TkhWNU4xUXBNMnRRYVVKWVdHUlNYem8NCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuOS8zMg0KICAgIFBlcnNpc3RlbnRLZWVwYWxpdmUgPSAyNQ0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gSVdneldWMGpLRjhsZWwxcmNIczJOV2NyVURRckxHbHlXRlFsVFQ4amUzMA0KICAgIEFsbG93ZWRJUHMgPSAxMC4xMDIuMC43LzMyDQogICAgUGVyc2lzdGVudEtlZXBhbGl2ZSA9IDI1DQoNCg0K"
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "`'conf'` event": {
                    "summary": "`'conf'` event",
                    "value": {
                      "ng-id": "ng_78da65ea-dfe2-4819-9aa6-721e9d6eaea6",
                      "peer-id": "external_e540d94c-3334-4263-8fa1-3cf40857fc06",
                      "version": 42,
                      "configuration": "W0ludGVyZmFjZV0NClByaXZhdGVLZXkgPSA8JVByaXZhdGVLZXklPg0KQWRkcmVzcyA9IDEwLjEwMi4wLjYvMTYNCg0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gS2o5cFRDTjFMQ1JaYms1U1kxbFNPU3hJT2t4dFgyVlJWRlUwTkNaeGNTNHUNCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuMTAvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFpsOTlYV1p5VGpSa1J6TmJVWEF1Sm5WSVZTTXJaaWxrVmxSOVFGb3NSamdLDQogICAgQWxsb3dlZElQcyA9IDEwLjEwMi4wLjUvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFlTMDVjaU5IWkVaNlpqZGpTMTF3TkhWNU4xUXBNMnRRYVVKWVdHUlNYem8NCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuOS8zMg0KICAgIFBlcnNpc3RlbnRLZWVwYWxpdmUgPSAyNQ0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gSVdneldWMGpLRjhsZWwxcmNIczJOV2NyVURRckxHbHlXRlFsVFQ4amUzMA0KICAgIEFsbG93ZWRJUHMgPSAxMC4xMDIuMC43LzMyDQogICAgUGVyc2lzdGVudEtlZXBhbGl2ZSA9IDI1DQoNCg0K"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Owner not found": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  },
                  "Networkgroup from another owner": {
                    "value": "Authentication is possible but has failed or not yet been provided."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Networkgroup not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  },
                  "Peer not found": {
                    "value": "The requested resource could not be found but may be available again in the future."
                  }
                }
              }
            }
          }
        }
      }
    },

    "/products/zones": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "List Zones",
        "operationId": "listZones",
        "x-service": "product",
        "x-function": "getAllZones",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Zone Details",
                    "required": [
                      "city",
                      "country",
                      "countryCode",
                      "id",
                      "lat",
                      "lon",
                      "name",
                      "tags"
                    ],
                    "type": "object",
                    "properties": {
                      "city": {
                        "description": "The city in which the datacenter is.",
                        "type": "string"
                      },
                      "country": {
                        "description": "The country in which the datacenter is.",
                        "type": "string"
                      },
                      "countryCode": {
                        "description": "The country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The zone `id`.",
                        "type": "string"
                      },
                      "lat": {
                        "description": "The datacenter latitude.",
                        "type": "number"
                      },
                      "lon": {
                        "description": "The datacenter longitude.",
                        "type": "number"
                      },
                      "name": {
                        "description": "The zone name.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Tags associated to the zone.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "displayName": {
                        "description": "The zone display name.",
                        "type": "string"
                      }
                    },
                    "example": {
                      "summary": "Example zone",
                      "value": {
                        "city": "Singapore",
                        "country": "Singapore",
                        "countryCode": "SG",
                        "id": "3b9a58f4-bab4-439b-8662-e200d9805dba",
                        "lat": 1.3143,
                        "lon": 103.7038,
                        "name": "sgp",
                        "tags": [
                          "for:applications",
                          "infra:ovh"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addon-providers/{providerId}": {
      "get": {
        "operationId": "getAddonProvider",
        "parameters": [
          { "name": "providerId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "addon-providers",
        "x-function": "getAddonProvider"
      }
    },
    "/addon-providers/{providerId}/addons/{addonId}": {
      "get": {
        "operationId": "getAddon",
        "parameters": [
          { "name": "providerId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "addonId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "addon-providers",
        "x-function": "getAddon"
      }
    },
    "/addon-providers/jenkins/addons/{addonId}/updates": {
      "get": {
        "operationId": "getJenkinsUpdates",
        "parameters": [
          { "name": "addonId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "addon-providers",
        "x-function": "getJenkinsUpdates"
      }
    },
    "/addon-providers/{providerId}/clusters/{clusterId}": {
      "get": {
        "operationId": "getCluster",
        "parameters": [
          { "name": "providerId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "clusterId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "addon-providers",
        "x-function": "getCluster"
      }
    },
    "/billing/organisations/{id}/invoices": {
      "get": {
        "operationId": "getAllInvoices",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "since", "in": "query", "required": false, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "getAllInvoices"
      }
    },
    "/billing/organisations/{id}/invoices/unpaid": {
      "get": {
        "operationId": "getAllUnpaidInvoices",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "getAllUnpaidInvoices"
      }
    },
    "/billing/organisations/{id}/invoices/{invoiceNumber}{type}": {
      "get": {
        "operationId": "getInvoice",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "invoiceNumber", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "type", "in": "path", "required": false, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "getInvoice"
      }
    },
    "/billing/organisations/{id}/payments/methods": {
      "get": {
        "operationId": "getPaymentMethods",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "getPaymentMethods"
      },
      "post": {
        "operationId": "createPaymentMethod",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "createPaymentMethod"
      }
    },
    "/billing/organisations/{id}/payments/methods/default": {
      "put": {
        "operationId": "setDefaultPaymentMethod",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "setDefaultPaymentMethod"
      }
    },
    "/billing/organisations/{id}/payments/methods/{methodId}": {
      "delete": {
        "operationId": "deletePaymentMethod",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "deletePaymentMethod"
      }
    },
    "/billing/organisations/{id}/invoices/{invoiceNumber}/payments/paypal": {
      "post": {
        "operationId": "initPaypalPayment",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "invoiceNumber", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "initPaypalPayment"
      }
    },
    "/billing/organisations/{id}/invoices/{invoiceNumber}/payments/paypal/{payerId}": {
      "put": {
        "operationId": "authorizePaypalPayment",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "invoiceNumber", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "payerId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "authorizePaypalPayment"
      }
    },
    "/billing/organisations/{id}/invoices/{invoiceNumber}/payments/stripe": {
      "post": {
        "operationId": "initStripePayment",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "invoiceNumber", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "initStripePayment"
      }
    },
    "/billing/organisations/{id}/invoices/{invoiceNumber}/payments/stripe/{paymentId}": {
      "put": {
        "operationId": "authorizeStripePayment",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "invoiceNumber", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "paymentId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "authorizeStripePayment"
      }
    },
    "/billing/organisations/{id}/payments/stripe/intent": {
      "get": {
        "operationId": "getStripePaymentIntent",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "type", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "getStripePaymentIntent"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OAuth1": {
        "type": "http",
        "scheme": "oauth"
      }
    }
  },
  "tags": [
    {
      "name": "networkgroups",
      "description": "Networkgroups"
    },
    {
      "name": "sse",
      "description": "Server Sent Events"
    },
    {
      "name": "products",
      "description": "Products"
    }
  ]
}
