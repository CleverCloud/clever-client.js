{
  "openapi": "3.0.1",
  "info" : {
    "title": "Clever Cloud Api",
    "description": "Use this API to manipulate your Clever Cloud services.",
    "version" : "4.0.0"
  },
  "servers": [
    {
      "url": "https://api.clever-cloud.com/v4",
      "description": "The production API server (v4)"
    }
  ],
  "paths": {
    "/organisations/{owner_id}/networkgroups": {
      "get": {
        "operationId": "getNetworkgroups",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "networkgroup",
        "x-function": "get"
      },
      "post": {
        "operationId": "createNetworkgroup",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "description" : "wanted networkgroup id",
                    "type": "string",
                    "required": false
                  },
                  "owner_id": {
                    "description" : "organization id",
                    "type": "string",
                    "required": true
                  },
                  "label": {
                    "description" : "label of the networkgroup",
                    "type": "string",
                    "required": false
                  },
                  "description": {
                    "description" : "description of the networkgroup",
                    "type": "string",
                    "required": false
                  },
                  "tags": {
                    "description" : "semantic tags",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "members": {
                    "description" : "members to add",
                    "type": "string",
                    "required": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "networkgroup",
        "x-function": "createNg"
      }
    },
    "/organisations/{owner_id}/networkgroups/{id}": {
      "delete": {
        "operationId": "deleteNetworkgroup",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {}
            }
          }
        },
        "x-service": "networkgroup",
        "x-function": "deleteNg"
      }
    },
    "/organisations/{owner_id}/networkgroups/{id}/members": {
      "get": {
        "operationId": "listMembers",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "x-service": "networkgroup",
        "x-function": "listMembers"
      }
    },
    "/organisations/{owner_id}/networkgroups/{ngId}/members/{memberId}": {
      "get": {
        "operationId": "getMember",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "x-service": "networkgroup",
        "x-function": "getMember"
      },
      "delete": {
        "operationId": "removeMember",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {}
            }
          }
        },
        "x-service": "networkgroup",
        "x-function": "removeMember"
      }
    },
    "/organisations/{owner_id}/networkgroups/{id}/peers": {
      "get": {
        "operationId": "listPeers",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "x-service": "networkgroup",
        "x-function": "listPeers"
      }
    },
    "/organisations/{owner_id}/networkgroups/{ngId}/peers/{peerId}": {
      "get": {
        "operationId": "getPeer",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "peerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "x-service": "networkgroup",
        "x-function": "getPeer"
      }
    },
    "/organisations/{owner_id}/networkgroups/{ngId}/external-peers": {
      "post": {
        "operationId": "addExternalPeer",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "description": "The public ip on which you are listening (only for server role)",
                    "type": "string",
                    "required": false
                  },
                  "port": {
                    "description": "The public port on which you are listening (only for server role)",
                    "type": "string",
                    "required": false
                  },
                  "peer-role": {
                    "description": "The role of this peer in the networgroup",
                    "type": "string",
                    "enum": [
                      "client",
                      "server"
                    ],
                    "required": true
                  },
                  "label": {
                    "description": "The label of the peer",
                    "type": "string",
                    "required": false
                  },
                  "public-key": {
                    "description": "The wireguard public key of the peer",
                    "type": "string",
                    "required": false
                  },
                  "hostname": {
                    "description": "The hostname to use for the peer",
                    "type": "string",
                    "required": false
                  },
                  "parent-member": {
                    "description": "The member id of the peer category",
                    "type": "string",
                    "required": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            }
          }
        },
        "x-service": "networkgroup",
        "x-function": "addExternalPeer"
      }
    },
    "/organisations/{owner_id}/networkgroups/{ngId}/external-peers/{peerId}": {
      "delete": {
        "operationId": "removeExternalPeer",
        "parameters": [
          {
            "name": "owner_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ngId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "peerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {}
            }
          }
        },
        "x-service": "networkgroup",
        "x-function": "removeExternalPeer"
      }
    },
    "/products/zones": {
      "get": {
        "operationId": "getZones",
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "product",
        "x-function": "getAllZones"
      }
    },
    "/addon-providers/{providerId}": {
      "get": {
        "operationId": "getAddonProvider",
        "parameters": [
          { "name": "providerId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "addon-providers",
        "x-function": "getAddonProvider"
      }
    },
    "/addon-providers/{providerId}/addons/{addonId}": {
      "get": {
        "operationId": "getAddon",
        "parameters": [
          { "name": "providerId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "addonId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "addon-providers",
        "x-function": "getAddon"
      }
    },
    "/addon-providers/jenkins/addons/{addonId}/updates": {
      "get": {
        "operationId": "getJenkinsUpdates",
        "parameters": [
          { "name": "addonId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "addon-providers",
        "x-function": "getJenkinsUpdates"
      }
    },
    "/addon-providers/{providerId}/clusters/{clusterId}": {
      "get": {
        "operationId": "getCluster",
        "parameters": [
          { "name": "providerId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "clusterId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "addon-providers",
        "x-function": "getCluster"
      }
    },
    "/billing/organisations/{id}/invoices": {
      "get": {
        "operationId": "getAllInvoices",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "since", "in": "query", "required": false, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "getAllInvoices"
      }
    },
    "/billing/organisations/{id}/invoices/unpaid": {
      "get": {
        "operationId": "getAllUnpaidInvoices",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "getAllUnpaidInvoices"
      }
    },
    "/billing/organisations/{id}/invoices/{invoiceNumber}{type}": {
      "get": {
        "operationId": "getInvoice",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "invoiceNumber", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "type", "in": "path", "required": false, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "getInvoice"
      }
    },
    "/billing/organisations/{id}/payments/methods": {
      "get": {
        "operationId": "getPaymentMethods",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "getPaymentMethods"
      },
      "post": {
        "operationId": "createPaymentMethod",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "createPaymentMethod"
      }
    },
    "/billing/organisations/{id}/payments/methods/default": {
      "put": {
        "operationId": "setDefaultPaymentMethod",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "setDefaultPaymentMethod"
      }
    },
    "/billing/organisations/{id}/payments/methods/{methodId}": {
      "delete": {
        "operationId": "deletePaymentMethod",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "deletePaymentMethod"
      }
    },
    "/billing/organisations/{id}/invoices/{invoiceNumber}/payments/paypal": {
      "post": {
        "operationId": "initPaypalPayment",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "invoiceNumber", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "initPaypalPayment"
      }
    },
    "/billing/organisations/{id}/invoices/{invoiceNumber}/payments/paypal/{payerId}": {
      "put": {
        "operationId": "authorizePaypalPayment",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "invoiceNumber", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "payerId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "authorizePaypalPayment"
      }
    },
    "/billing/organisations/{id}/invoices/{invoiceNumber}/payments/stripe": {
      "post": {
        "operationId": "initStripePayment",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "invoiceNumber", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "initStripePayment"
      }
    },
    "/billing/organisations/{id}/invoices/{invoiceNumber}/payments/stripe/{paymentId}": {
      "put": {
        "operationId": "authorizeStripePayment",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "invoiceNumber", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "paymentId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "authorizeStripePayment"
      }
    },
    "/billing/organisations/{id}/payments/stripe/intent": {
      "get": {
        "operationId": "getStripePaymentIntent",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "type", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": { }
            }
          }
        },
        "x-service": "billing",
        "x-function": "getStripePaymentIntent"
      }
    }
  },
  "components": {
  }
}
