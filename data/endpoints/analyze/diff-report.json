{
  "reportDate": "2025-04-04T09:09:33.152Z",
  "local-cc-api-v4": {
    "source": {
      "type": "file",
      "id": "local-cc-api-v4",
      "path": "data/endpoints/input/local-cc-api-v4.json",
      "target": "api",
      "pathPrefix": "/v4"
    },
    "date": "2025-04-04T09:09:33.152Z",
    "diff": {
      "hasDiff": true,
      "addedEndpoints": [
        {
          "id": "[GET] /v4/addon-providers/:XXX",
          "method": "get",
          "path": "/v4/addon-providers/{providerId}",
          "normalizedPath": "/v4/addon-providers/:XXX",
          "operationId": "getAddonProvider",
          "queryParams": [],
          "pathParams": [
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/addon-providers/:XXX/addons/:XXX",
          "method": "get",
          "path": "/v4/addon-providers/{providerId}/addons/{addonId}",
          "normalizedPath": "/v4/addon-providers/:XXX/addons/:XXX",
          "operationId": "getAddon",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/addon-providers/jenkins/addons/:XXX/updates",
          "method": "get",
          "path": "/v4/addon-providers/jenkins/addons/{addonId}/updates",
          "normalizedPath": "/v4/addon-providers/jenkins/addons/:XXX/updates",
          "operationId": "getJenkinsUpdates",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/addon-providers/:XXX/clusters/:XXX",
          "method": "get",
          "path": "/v4/addon-providers/{providerId}/clusters/{clusterId}",
          "normalizedPath": "/v4/addon-providers/:XXX/clusters/:XXX",
          "operationId": "getCluster",
          "queryParams": [],
          "pathParams": [
            {
              "name": "clusterId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/billing/organisations/:XXX/invoices",
          "method": "get",
          "path": "/v4/billing/organisations/{id}/invoices",
          "normalizedPath": "/v4/billing/organisations/:XXX/invoices",
          "operationId": "getAllInvoices",
          "queryParams": [
            {
              "name": "since",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/billing/organisations/:XXX/invoices/unpaid",
          "method": "get",
          "path": "/v4/billing/organisations/{id}/invoices/unpaid",
          "normalizedPath": "/v4/billing/organisations/:XXX/invoices/unpaid",
          "operationId": "getAllUnpaidInvoices",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/billing/organisations/:XXX/invoices/:XXX:XXX",
          "method": "get",
          "path": "/v4/billing/organisations/{id}/invoices/{invoiceNumber}{type}",
          "normalizedPath": "/v4/billing/organisations/:XXX/invoices/:XXX:XXX",
          "operationId": "getInvoice",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invoiceNumber",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "type",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/billing/organisations/:XXX/payments/methods",
          "method": "get",
          "path": "/v4/billing/organisations/{id}/payments/methods",
          "normalizedPath": "/v4/billing/organisations/:XXX/payments/methods",
          "operationId": "getPaymentMethods",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[POST] /v4/billing/organisations/:XXX/payments/methods",
          "method": "post",
          "path": "/v4/billing/organisations/{id}/payments/methods",
          "normalizedPath": "/v4/billing/organisations/:XXX/payments/methods",
          "operationId": "createPaymentMethod",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {}
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[PUT] /v4/billing/organisations/:XXX/payments/methods/default",
          "method": "put",
          "path": "/v4/billing/organisations/{id}/payments/methods/default",
          "normalizedPath": "/v4/billing/organisations/:XXX/payments/methods/default",
          "operationId": "setDefaultPaymentMethod",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {}
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[DELETE] /v4/billing/organisations/:XXX/payments/methods/:XXX",
          "method": "delete",
          "path": "/v4/billing/organisations/{id}/payments/methods/{methodId}",
          "normalizedPath": "/v4/billing/organisations/:XXX/payments/methods/:XXX",
          "operationId": "deletePaymentMethod",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "methodId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[POST] /v4/billing/organisations/:XXX/invoices/:XXX/payments/paypal",
          "method": "post",
          "path": "/v4/billing/organisations/{id}/invoices/{invoiceNumber}/payments/paypal",
          "normalizedPath": "/v4/billing/organisations/:XXX/invoices/:XXX/payments/paypal",
          "operationId": "initPaypalPayment",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invoiceNumber",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[PUT] /v4/billing/organisations/:XXX/invoices/:XXX/payments/paypal/:XXX",
          "method": "put",
          "path": "/v4/billing/organisations/{id}/invoices/{invoiceNumber}/payments/paypal/{payerId}",
          "normalizedPath": "/v4/billing/organisations/:XXX/invoices/:XXX/payments/paypal/:XXX",
          "operationId": "authorizePaypalPayment",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invoiceNumber",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "payerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[POST] /v4/billing/organisations/:XXX/invoices/:XXX/payments/stripe",
          "method": "post",
          "path": "/v4/billing/organisations/{id}/invoices/{invoiceNumber}/payments/stripe",
          "normalizedPath": "/v4/billing/organisations/:XXX/invoices/:XXX/payments/stripe",
          "operationId": "initStripePayment",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invoiceNumber",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {}
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[PUT] /v4/billing/organisations/:XXX/invoices/:XXX/payments/stripe/:XXX",
          "method": "put",
          "path": "/v4/billing/organisations/{id}/invoices/{invoiceNumber}/payments/stripe/{paymentId}",
          "normalizedPath": "/v4/billing/organisations/:XXX/invoices/:XXX/payments/stripe/:XXX",
          "operationId": "authorizeStripePayment",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invoiceNumber",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "paymentId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/billing/organisations/:XXX/payments/stripe/intent",
          "method": "get",
          "path": "/v4/billing/organisations/{id}/payments/stripe/intent",
          "normalizedPath": "/v4/billing/organisations/:XXX/payments/stripe/intent",
          "operationId": "getStripePaymentIntent",
          "queryParams": [
            {
              "name": "type",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/billing/organisations/:XXX/credits/summary",
          "method": "get",
          "path": "/v4/billing/organisations/{id}/credits/summary",
          "normalizedPath": "/v4/billing/organisations/:XXX/credits/summary",
          "operationId": "getCreditsSummary",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/billing/organisations/:XXX/price-system",
          "method": "get",
          "path": "/v4/billing/organisations/{owner_id}/price-system",
          "normalizedPath": "/v4/billing/organisations/:XXX/price-system",
          "operationId": "getOrganisationPriceSystem",
          "queryParams": [
            {
              "name": "zone_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "owner_id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/materia/organisations/:XXX/materia/databases/:XXX",
          "method": "get",
          "path": "/v4/materia/organisations/{ownerId}/materia/databases/{id}",
          "normalizedPath": "/v4/materia/organisations/:XXX/materia/databases/:XXX",
          "operationId": "getMateriaKvInfo",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/load-balancers/organisations/:XXX/applications/:XXX/load-balancers/default",
          "method": "get",
          "path": "/v4/load-balancers/organisations/{ownerId}/applications/{appId}/load-balancers/default",
          "normalizedPath": "/v4/load-balancers/organisations/:XXX/applications/:XXX/load-balancers/default",
          "operationId": "getDefaultLoadBalancersDnsInfo",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/billing/price-system",
          "method": "get",
          "path": "/v4/billing/price-system",
          "normalizedPath": "/v4/billing/price-system",
          "operationId": "getPriceSystem",
          "queryParams": [
            {
              "name": "currency",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "zone_id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/saas/grafana/:XXX",
          "method": "get",
          "path": "/v4/saas/grafana/{id}",
          "normalizedPath": "/v4/saas/grafana/:XXX",
          "operationId": "getGrafanaOrganisation",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[POST] /v4/saas/grafana/:XXX",
          "method": "post",
          "path": "/v4/saas/grafana/{id}",
          "normalizedPath": "/v4/saas/grafana/:XXX",
          "operationId": "createGrafanaOrganisation",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[DELETE] /v4/saas/grafana/:XXX",
          "method": "delete",
          "path": "/v4/saas/grafana/{id}",
          "normalizedPath": "/v4/saas/grafana/:XXX",
          "operationId": "deleteGrafanaOrganisation",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[POST] /v4/saas/grafana/:XXX/reset",
          "method": "post",
          "path": "/v4/saas/grafana/{id}/reset",
          "normalizedPath": "/v4/saas/grafana/:XXX/reset",
          "operationId": "resetGrafanaOrganisation",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v4/stats/organisations/:XXX/requests",
          "method": "get",
          "path": "/v4/stats/organisations/{ownerId}/requests",
          "normalizedPath": "/v4/stats/organisations/:XXX/requests",
          "operationId": "fetchHeatmapPoints",
          "queryParams": [
            {
              "name": "application",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        }
      ],
      "deletedEndpoints": [],
      "modifiedEndpoints": []
    }
  },
  "remote-cc-api-ovd": {
    "source": {
      "type": "url",
      "id": "remote-cc-api-ovd",
      "url": "https://api.clever-cloud.com/v4/ovd/openapi.json",
      "target": "api",
      "pathPrefix": ""
    },
    "date": "2025-04-04T09:09:33.152Z",
    "diff": {
      "hasDiff": true,
      "addedEndpoints": [
        {
          "id": "[POST] /v2/providers/addon-matomo/resources",
          "method": "post",
          "path": "/v2/providers/addon-matomo/resources",
          "normalizedPath": "/v2/providers/addon-matomo/resources",
          "operationId": "createMatomo",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "callback_url": {
                        "type": "string"
                      },
                      "heroku_id": {
                        "type": "string"
                      },
                      "logplex_token": {
                        "type": "string"
                      },
                      "logs_collector": {
                        "type": "string"
                      },
                      "options": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "owner_id": {
                        "type": "string"
                      },
                      "plan": {
                        "type": "string"
                      },
                      "region": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "ref": "#/components/requestBodies/ProvisionRequest"
          },
          "response": {
            "statusCode": 201,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "Provision",
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "id": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "ref": "#/components/schemas/ProvisionResponse"
            }
          }
        },
        {
          "id": "[DELETE] /v2/providers/addon-matomo/resources/:XXX",
          "method": "delete",
          "path": "/v2/providers/addon-matomo/resources/{matomoId}",
          "normalizedPath": "/v2/providers/addon-matomo/resources/:XXX",
          "operationId": "deleteMatomo",
          "queryParams": [],
          "pathParams": [
            {
              "name": "matomoId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "pattern": "^matomo_[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "type": "string",
                  "example": "matomo_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/MatomoID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[POST] /v2/providers/addon-tardis/resources",
          "method": "post",
          "path": "/v2/providers/addon-tardis/resources",
          "normalizedPath": "/v2/providers/addon-tardis/resources",
          "operationId": "createTardisAddon",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "callback_url": {
                        "type": "string"
                      },
                      "heroku_id": {
                        "type": "string"
                      },
                      "logplex_token": {
                        "type": "string"
                      },
                      "logs_collector": {
                        "type": "string"
                      },
                      "options": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "owner_id": {
                        "type": "string"
                      },
                      "plan": {
                        "type": "string"
                      },
                      "region": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "config"
                ],
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "id": {
                    "title": "Tardis ID",
                    "pattern": "^tardis_.*$",
                    "type": "string",
                    "description": "An addon Tardis ID.",
                    "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/TardisProvisionResponse"
            }
          }
        },
        {
          "id": "[GET] /v2/providers/addon-tardis/resources/:XXX",
          "method": "get",
          "path": "/v2/providers/addon-tardis/resources/{tardisId}",
          "normalizedPath": "/v2/providers/addon-tardis/resources/:XXX",
          "operationId": "getTardisAddon",
          "queryParams": [],
          "pathParams": [
            {
              "name": "tardisId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis ID",
                  "pattern": "^tardis_.*$",
                  "type": "string",
                  "description": "An addon Tardis ID.",
                  "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TardisID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "creation_date",
                  "plan",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deletion_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "owner_id": {
                    "$ref": "#/components/schemas/OwnerID"
                  },
                  "plan": {
                    "type": "object"
                  },
                  "read_token": {
                    "required": [
                      "addon_id",
                      "creation_date",
                      "expiration_date",
                      "senx_application_id",
                      "token",
                      "tokenType",
                      "token_id",
                      "ttl"
                    ],
                    "type": "object",
                    "properties": {
                      "addon_id": {
                        "type": "string"
                      },
                      "creation_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "string"
                      },
                      "senx_application_id": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenType": {
                        "type": "object"
                      },
                      "token_id": {
                        "type": "string"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  },
                  "senx_application_id": {
                    "title": "SenX Application ID",
                    "pattern": "^cc..*$",
                    "type": "string",
                    "description": "A SenX Warp10 application ID.",
                    "example": "cc.96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "status": {
                    "type": "object"
                  },
                  "tardis_id": {
                    "title": "Tardis ID",
                    "pattern": "^tardis_.*$",
                    "type": "string",
                    "description": "An addon Tardis ID.",
                    "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "write_token": {
                    "required": [
                      "addon_id",
                      "creation_date",
                      "expiration_date",
                      "senx_application_id",
                      "token",
                      "tokenType",
                      "token_id",
                      "ttl"
                    ],
                    "type": "object",
                    "properties": {
                      "addon_id": {
                        "type": "string"
                      },
                      "creation_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "string"
                      },
                      "senx_application_id": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenType": {
                        "type": "object"
                      },
                      "token_id": {
                        "type": "string"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonTardis"
            }
          }
        },
        {
          "id": "[DELETE] /v2/providers/addon-tardis/resources/:XXX",
          "method": "delete",
          "path": "/v2/providers/addon-tardis/resources/{tardisId}",
          "normalizedPath": "/v2/providers/addon-tardis/resources/:XXX",
          "operationId": "deleteTardisAddon",
          "queryParams": [],
          "pathParams": [
            {
              "name": "tardisId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis ID",
                  "pattern": "^tardis_.*$",
                  "type": "string",
                  "description": "An addon Tardis ID.",
                  "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TardisID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/addon-providers/addon-matomo/addons/:XXX",
          "method": "get",
          "path": "/v4/addon-providers/addon-matomo/addons/{matomoId}",
          "normalizedPath": "/v4/addon-providers/addon-matomo/addons/:XXX",
          "operationId": "getMatomo",
          "queryParams": [],
          "pathParams": [
            {
              "name": "matomoId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "pattern": "^matomo_[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "type": "string",
                  "example": "matomo_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/MatomoID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "addonId",
                  "host",
                  "mysqlId",
                  "ownerId",
                  "phpId",
                  "planIdentifier",
                  "redisId"
                ],
                "type": "object",
                "properties": {
                  "addonId": {
                    "type": "string"
                  },
                  "host": {
                    "type": "string"
                  },
                  "mysqlId": {
                    "type": "string"
                  },
                  "ownerId": {
                    "type": "object"
                  },
                  "phpId": {
                    "type": "object"
                  },
                  "planIdentifier": {
                    "type": "string",
                    "example": "BETA",
                    "enum": [
                      "BETA"
                    ],
                    "default": "BETA"
                  },
                  "redisId": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/AddonView"
            }
          }
        },
        {
          "id": "[GET] /v4/addon-providers/addon-matomo/token/validate",
          "method": "get",
          "path": "/v4/addon-providers/addon-matomo/token/validate",
          "normalizedPath": "/v4/addon-providers/addon-matomo/token/validate",
          "operationId": "getMatomoKTokenValidation",
          "queryParams": [
            {
              "name": "keycloakToken",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "addonId",
                  "ownerId",
                  "phpAppId"
                ],
                "type": "object",
                "properties": {
                  "addonId": {
                    "type": "string"
                  },
                  "ownerId": {
                    "type": "object"
                  },
                  "phpAppId": {
                    "type": "object"
                  }
                }
              },
              "ref": "#/components/schemas/InfoWithPHPApp"
            }
          }
        },
        {
          "id": "[GET] /v4/addon-providers/addon-pulsar",
          "method": "get",
          "path": "/v4/addon-providers/addon-pulsar",
          "normalizedPath": "/v4/addon-providers/addon-pulsar",
          "operationId": "getPulsarProviderConsoleInfos",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "clusters",
                  "dedicated",
                  "defaultDedicatedVersion",
                  "providerId"
                ],
                "type": "object",
                "properties": {
                  "clusters": {
                    "type": "array",
                    "items": {
                      "required": [
                        "features",
                        "id",
                        "label",
                        "version",
                        "zone"
                      ],
                      "type": "object",
                      "properties": {
                        "features": {
                          "type": "array",
                          "items": {
                            "required": [
                              "name"
                            ],
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "id": {
                          "type": "string"
                        },
                        "label": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "zone": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "dedicated": {
                    "type": "object",
                    "additionalProperties": {
                      "required": [
                        "features"
                      ],
                      "type": "object",
                      "properties": {
                        "features": {
                          "type": "array",
                          "items": {
                            "required": [
                              "name"
                            ],
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean",
                                "default": false
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "defaultDedicatedVersion": {
                    "type": "string"
                  },
                  "providerId": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ProviderConsoleView"
            }
          }
        },
        {
          "id": "[GET] /v4/addon-providers/addon-pulsar/addons/:XXX",
          "method": "get",
          "path": "/v4/addon-providers/addon-pulsar/addons/{pulsarId}",
          "normalizedPath": "/v4/addon-providers/addon-pulsar/addons/:XXX",
          "operationId": "getPulsar",
          "queryParams": [],
          "pathParams": [
            {
              "name": "pulsarId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Pulsar ID",
                  "pattern": "^pulsar_.*$",
                  "type": "string",
                  "description": "An addon Pulsar ID.",
                  "example": "pulsar_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/PulsarID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "cluster_id",
                  "cold_storage_linked",
                  "cold_storage_must_be_provided",
                  "creation_date",
                  "id",
                  "namespace",
                  "owner_id",
                  "plan",
                  "status",
                  "tenant",
                  "token"
                ],
                "type": "object",
                "properties": {
                  "ask_for_deletion_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "cluster_id": {
                    "type": "string"
                  },
                  "cold_storage_id": {
                    "type": "string"
                  },
                  "cold_storage_linked": {
                    "type": "boolean"
                  },
                  "cold_storage_must_be_provided": {
                    "type": "boolean"
                  },
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deletion_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "id": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  },
                  "owner_id": {
                    "type": "object"
                  },
                  "plan": {
                    "type": "object"
                  },
                  "status": {
                    "type": "object"
                  },
                  "tenant": {
                    "type": "string"
                  },
                  "token": {
                    "type": "object"
                  }
                }
              },
              "ref": "#/components/schemas/Addon"
            }
          }
        },
        {
          "id": "[POST] /v4/addon-providers/addon-pulsar/addons/:XXX/create-tenant-and-namespace",
          "method": "post",
          "path": "/v4/addon-providers/addon-pulsar/addons/{pulsarId}/create-tenant-and-namespace",
          "normalizedPath": "/v4/addon-providers/addon-pulsar/addons/:XXX/create-tenant-and-namespace",
          "operationId": "createTenantAndNamespace",
          "queryParams": [],
          "pathParams": [
            {
              "name": "pulsarId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Pulsar ID",
                  "pattern": "^pulsar_.*$",
                  "type": "string",
                  "description": "An addon Pulsar ID.",
                  "example": "pulsar_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/PulsarID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "cluster_id",
                  "cold_storage_linked",
                  "cold_storage_must_be_provided",
                  "creation_date",
                  "id",
                  "namespace",
                  "owner_id",
                  "plan",
                  "status",
                  "tenant",
                  "token"
                ],
                "type": "object",
                "properties": {
                  "ask_for_deletion_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "cluster_id": {
                    "type": "string"
                  },
                  "cold_storage_id": {
                    "type": "string"
                  },
                  "cold_storage_linked": {
                    "type": "boolean"
                  },
                  "cold_storage_must_be_provided": {
                    "type": "boolean"
                  },
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deletion_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "id": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  },
                  "owner_id": {
                    "type": "object"
                  },
                  "plan": {
                    "type": "object"
                  },
                  "status": {
                    "type": "object"
                  },
                  "tenant": {
                    "type": "string"
                  },
                  "token": {
                    "type": "object"
                  }
                }
              },
              "ref": "#/components/schemas/Addon"
            }
          }
        },
        {
          "id": "[DELETE] /v4/addon-providers/addon-pulsar/addons/:XXX/delete-tenant-and-namespace",
          "method": "delete",
          "path": "/v4/addon-providers/addon-pulsar/addons/{pulsarId}/delete-tenant-and-namespace",
          "normalizedPath": "/v4/addon-providers/addon-pulsar/addons/:XXX/delete-tenant-and-namespace",
          "operationId": "deleteTenantAndNamespace",
          "queryParams": [],
          "pathParams": [
            {
              "name": "pulsarId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Pulsar ID",
                  "pattern": "^pulsar_.*$",
                  "type": "string",
                  "description": "An addon Pulsar ID.",
                  "example": "pulsar_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/PulsarID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/addon-providers/addon-pulsar/addons/:XXX/storage-policies",
          "method": "get",
          "path": "/v4/addon-providers/addon-pulsar/addons/{pulsarId}/storage-policies",
          "normalizedPath": "/v4/addon-providers/addon-pulsar/addons/:XXX/storage-policies",
          "operationId": "getPulsarStoragePolicy",
          "queryParams": [],
          "pathParams": [
            {
              "name": "pulsarId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Pulsar ID",
                  "pattern": "^pulsar_.*$",
                  "type": "string",
                  "description": "An addon Pulsar ID.",
                  "example": "pulsar_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/PulsarID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "offloadPolicies": {
                    "type": "object",
                    "properties": {
                      "durationInDays": {
                        "type": "object"
                      },
                      "sizeInMB": {
                        "type": "object"
                      }
                    }
                  },
                  "retentionPolicies": {
                    "type": "object",
                    "properties": {
                      "durationInDays": {
                        "type": "object"
                      },
                      "sizeInMB": {
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/StoragePoliciesView"
            }
          }
        },
        {
          "id": "[PATCH] /v4/addon-providers/addon-pulsar/addons/:XXX/storage-policies",
          "method": "patch",
          "path": "/v4/addon-providers/addon-pulsar/addons/{pulsarId}/storage-policies",
          "normalizedPath": "/v4/addon-providers/addon-pulsar/addons/:XXX/storage-policies",
          "operationId": "patchStoragePolicies",
          "queryParams": [],
          "pathParams": [
            {
              "name": "pulsarId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Pulsar ID",
                  "pattern": "^pulsar_.*$",
                  "type": "string",
                  "description": "An addon Pulsar ID.",
                  "example": "pulsar_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/PulsarID"
              }
            }
          ],
          "requestBody": {
            "type": "broken",
            "ref": "#/components/requestBodies/StoragePoliciesView"
          },
          "response": {
            "statusCode": 201,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "Provision",
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "additionalProperties": true
                  },
                  "id": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "ref": "#/components/schemas/ProvisionResponse"
            }
          }
        },
        {
          "id": "[DELETE] /v4/addon-providers/addon-pulsar/addons/:XXX/topics/:XXX",
          "method": "delete",
          "path": "/v4/addon-providers/addon-pulsar/addons/{pulsarId}/topics/{topicName}",
          "normalizedPath": "/v4/addon-providers/addon-pulsar/addons/:XXX/topics/:XXX",
          "operationId": "deleteTopic",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/addon-providers/addon-pulsar/clusters/:XXX",
          "method": "get",
          "path": "/v4/addon-providers/addon-pulsar/clusters/{clusterId}",
          "normalizedPath": "/v4/addon-providers/addon-pulsar/clusters/:XXX",
          "operationId": "getPulsarCluster",
          "queryParams": [],
          "pathParams": [
            {
              "name": "clusterId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Cluster ID",
                  "pattern": "^cluster_.*$",
                  "type": "string",
                  "description": "a infrastructureCluster ID",
                  "example": "cluster_e7b264c3-fb77-46c6-9c8f-899e14465330"
                },
                "ref": "#/components/schemas/ClusterID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "offloadPolicies",
                  "retentionPolicies"
                ],
                "type": "object",
                "properties": {
                  "offloadPolicies": {
                    "required": [
                      "duration",
                      "size"
                    ],
                    "type": "object",
                    "properties": {
                      "duration": {
                        "required": [
                          "unit",
                          "value"
                        ],
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "object"
                          },
                          "value": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "size": {
                        "required": [
                          "unit",
                          "value"
                        ],
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "object"
                          },
                          "value": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      }
                    }
                  },
                  "retentionPolicies": {
                    "required": [
                      "duration",
                      "size"
                    ],
                    "type": "object",
                    "properties": {
                      "duration": {
                        "required": [
                          "unit",
                          "value"
                        ],
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "object"
                          },
                          "value": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "size": {
                        "required": [
                          "unit",
                          "value"
                        ],
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "object"
                          },
                          "value": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/StoragePolicies"
            }
          }
        },
        {
          "id": "[POST] /v4/addon-providers/addon-tardis/addons",
          "method": "post",
          "path": "/v4/addon-providers/addon-tardis/addons",
          "normalizedPath": "/v4/addon-providers/addon-tardis/addons",
          "operationId": "createTardis",
          "queryParams": [
            {
              "name": "appOnly",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "boolean",
                  "default": false
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "ownerID",
                      "plan"
                    ],
                    "type": "object",
                    "properties": {
                      "authorID": {
                        "type": "string"
                      },
                      "ownerID": {
                        "type": "object"
                      },
                      "plan": {
                        "type": "object"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "creation_date",
                  "plan",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deletion_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "owner_id": {
                    "$ref": "#/components/schemas/OwnerID"
                  },
                  "plan": {
                    "type": "object"
                  },
                  "read_token": {
                    "required": [
                      "addon_id",
                      "creation_date",
                      "expiration_date",
                      "senx_application_id",
                      "token",
                      "tokenType",
                      "token_id",
                      "ttl"
                    ],
                    "type": "object",
                    "properties": {
                      "addon_id": {
                        "type": "string"
                      },
                      "creation_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "string"
                      },
                      "senx_application_id": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenType": {
                        "type": "object"
                      },
                      "token_id": {
                        "type": "string"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  },
                  "senx_application_id": {
                    "title": "SenX Application ID",
                    "pattern": "^cc..*$",
                    "type": "string",
                    "description": "A SenX Warp10 application ID.",
                    "example": "cc.96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "status": {
                    "type": "object"
                  },
                  "tardis_id": {
                    "title": "Tardis ID",
                    "pattern": "^tardis_.*$",
                    "type": "string",
                    "description": "An addon Tardis ID.",
                    "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "write_token": {
                    "required": [
                      "addon_id",
                      "creation_date",
                      "expiration_date",
                      "senx_application_id",
                      "token",
                      "tokenType",
                      "token_id",
                      "ttl"
                    ],
                    "type": "object",
                    "properties": {
                      "addon_id": {
                        "type": "string"
                      },
                      "creation_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "string"
                      },
                      "senx_application_id": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenType": {
                        "type": "object"
                      },
                      "token_id": {
                        "type": "string"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonTardis"
            }
          }
        },
        {
          "id": "[GET] /v4/addon-providers/addon-tardis/addons/:XXX",
          "method": "get",
          "path": "/v4/addon-providers/addon-tardis/addons/{tardisId}",
          "normalizedPath": "/v4/addon-providers/addon-tardis/addons/:XXX",
          "operationId": "getTardis",
          "queryParams": [],
          "pathParams": [
            {
              "name": "tardisId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis ID",
                  "pattern": "^tardis_.*$",
                  "type": "string",
                  "description": "An addon Tardis ID.",
                  "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TardisID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "creation_date",
                  "plan",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deletion_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "owner_id": {
                    "$ref": "#/components/schemas/OwnerID"
                  },
                  "plan": {
                    "type": "object"
                  },
                  "read_token": {
                    "required": [
                      "addon_id",
                      "creation_date",
                      "expiration_date",
                      "senx_application_id",
                      "token",
                      "tokenType",
                      "token_id",
                      "ttl"
                    ],
                    "type": "object",
                    "properties": {
                      "addon_id": {
                        "type": "string"
                      },
                      "creation_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "string"
                      },
                      "senx_application_id": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenType": {
                        "type": "object"
                      },
                      "token_id": {
                        "type": "string"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  },
                  "senx_application_id": {
                    "title": "SenX Application ID",
                    "pattern": "^cc..*$",
                    "type": "string",
                    "description": "A SenX Warp10 application ID.",
                    "example": "cc.96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "status": {
                    "type": "object"
                  },
                  "tardis_id": {
                    "title": "Tardis ID",
                    "pattern": "^tardis_.*$",
                    "type": "string",
                    "description": "An addon Tardis ID.",
                    "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "write_token": {
                    "required": [
                      "addon_id",
                      "creation_date",
                      "expiration_date",
                      "senx_application_id",
                      "token",
                      "tokenType",
                      "token_id",
                      "ttl"
                    ],
                    "type": "object",
                    "properties": {
                      "addon_id": {
                        "type": "string"
                      },
                      "creation_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "string"
                      },
                      "senx_application_id": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenType": {
                        "type": "object"
                      },
                      "token_id": {
                        "type": "string"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonTardis"
            }
          }
        },
        {
          "id": "[DELETE] /v4/addon-providers/addon-tardis/addons/:XXX",
          "method": "delete",
          "path": "/v4/addon-providers/addon-tardis/addons/{tardisId}",
          "normalizedPath": "/v4/addon-providers/addon-tardis/addons/:XXX",
          "operationId": "deleteTardis",
          "queryParams": [],
          "pathParams": [
            {
              "name": "tardisId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis ID",
                  "pattern": "^tardis_.*$",
                  "type": "string",
                  "description": "An addon Tardis ID.",
                  "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TardisID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX",
          "method": "get",
          "path": "/v4/addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}",
          "normalizedPath": "/v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX",
          "operationId": "getTardisAddonWithOwner",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "tardisId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis ID",
                  "pattern": "^tardis_.*$",
                  "type": "string",
                  "description": "An addon Tardis ID.",
                  "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TardisID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "creation_date",
                  "plan",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deletion_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "owner_id": {
                    "$ref": "#/components/schemas/OwnerID"
                  },
                  "plan": {
                    "type": "object"
                  },
                  "read_token": {
                    "required": [
                      "addon_id",
                      "creation_date",
                      "expiration_date",
                      "senx_application_id",
                      "token",
                      "tokenType",
                      "token_id",
                      "ttl"
                    ],
                    "type": "object",
                    "properties": {
                      "addon_id": {
                        "type": "string"
                      },
                      "creation_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "string"
                      },
                      "senx_application_id": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenType": {
                        "type": "object"
                      },
                      "token_id": {
                        "type": "string"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  },
                  "senx_application_id": {
                    "title": "SenX Application ID",
                    "pattern": "^cc..*$",
                    "type": "string",
                    "description": "A SenX Warp10 application ID.",
                    "example": "cc.96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "status": {
                    "type": "object"
                  },
                  "tardis_id": {
                    "title": "Tardis ID",
                    "pattern": "^tardis_.*$",
                    "type": "string",
                    "description": "An addon Tardis ID.",
                    "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "write_token": {
                    "required": [
                      "addon_id",
                      "creation_date",
                      "expiration_date",
                      "senx_application_id",
                      "token",
                      "tokenType",
                      "token_id",
                      "ttl"
                    ],
                    "type": "object",
                    "properties": {
                      "addon_id": {
                        "type": "string"
                      },
                      "creation_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "string"
                      },
                      "senx_application_id": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenType": {
                        "type": "object"
                      },
                      "token_id": {
                        "type": "string"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonTardis"
            }
          }
        },
        {
          "id": "[DELETE] /v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX",
          "method": "delete",
          "path": "/v4/addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}",
          "normalizedPath": "/v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX",
          "operationId": "deleteTardisAddonWithOwner",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "tardisId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis ID",
                  "pattern": "^tardis_.*$",
                  "type": "string",
                  "description": "An addon Tardis ID.",
                  "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TardisID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[POST] /v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX/revert",
          "method": "post",
          "path": "/v4/addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}/revert",
          "normalizedPath": "/v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX/revert",
          "operationId": "revertTardisAddonDeletion",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "tardisId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis ID",
                  "pattern": "^tardis_.*$",
                  "type": "string",
                  "description": "An addon Tardis ID.",
                  "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TardisID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "default": "Addon is now active"
                  }
                }
              },
              "ref": "#/components/schemas/TardisAddonActive"
            }
          }
        },
        {
          "id": "[GET] /v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX/token/:XXX",
          "method": "get",
          "path": "/v4/addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}/token/{tokenId}",
          "normalizedPath": "/v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX/token/:XXX",
          "operationId": "getTardisToken",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "tardisId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis ID",
                  "pattern": "^tardis_.*$",
                  "type": "string",
                  "description": "An addon Tardis ID.",
                  "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TardisID"
              }
            },
            {
              "name": "tokenId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis token ID",
                  "type": "string",
                  "description": "An addon Tardis token ID.",
                  "example": "96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TokenID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "addon_id",
                  "creation_date",
                  "expiration_date",
                  "senx_application_id",
                  "token",
                  "tokenType",
                  "token_id",
                  "ttl"
                ],
                "type": "object",
                "properties": {
                  "addon_id": {
                    "type": "string"
                  },
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "expiration_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "properties": {
                    "type": "string"
                  },
                  "senx_application_id": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "tokenType": {
                    "type": "object"
                  },
                  "token_id": {
                    "type": "string"
                  },
                  "ttl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/TardisTokenLine"
            }
          }
        },
        {
          "id": "[DELETE] /v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX/token/:XXX",
          "method": "delete",
          "path": "/v4/addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}/token/{tokenId}",
          "normalizedPath": "/v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX/token/:XXX",
          "operationId": "deleteTardisAddonToken",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "tardisId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis ID",
                  "pattern": "^tardis_.*$",
                  "type": "string",
                  "description": "An addon Tardis ID.",
                  "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TardisID"
              }
            },
            {
              "name": "tokenId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis token ID",
                  "type": "string",
                  "description": "An addon Tardis token ID.",
                  "example": "96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TokenID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX/tokens",
          "method": "get",
          "path": "/v4/addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}/tokens",
          "normalizedPath": "/v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX/tokens",
          "operationId": "listTardisAddonTokens",
          "queryParams": [
            {
              "name": "from",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "From",
                  "minimum": 0,
                  "type": "integer",
                  "description": "Parameter use to paginate List requests (from index).",
                  "example": 0
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "onlyId",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "boolean",
                  "default": false
                },
                "ref": "#/components/schemas/TardisID"
              }
            },
            {
              "name": "to",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "To",
                  "minimum": 0,
                  "pattern": "^[0-9]+$",
                  "type": "integer",
                  "description": "Parameter use to paginate List requests (to index).",
                  "example": 100
                },
                "ref": "#/components/schemas/To"
              }
            }
          ],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "tardisId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis ID",
                  "pattern": "^tardis_.*$",
                  "type": "string",
                  "description": "An addon Tardis ID.",
                  "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/From"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "Either TardisTokenShortLinesSet or TardisTokenLinesSet",
                "oneOf": [
                  {
                    "required": [
                      "tokens"
                    ],
                    "type": "object",
                    "properties": {
                      "tokens": {
                        "type": "array",
                        "items": {
                          "required": [
                            "addon_id",
                            "senx_application_id",
                            "token_id"
                          ],
                          "type": "object",
                          "properties": {
                            "addon_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "senx_application_id": {
                              "type": "string"
                            },
                            "token_id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "required": [
                      "tokens"
                    ],
                    "type": "object",
                    "properties": {
                      "tokens": {
                        "type": "array",
                        "items": {
                          "required": [
                            "addon_id",
                            "creation_date",
                            "expiration_date",
                            "senx_application_id",
                            "token",
                            "tokenType",
                            "token_id",
                            "ttl"
                          ],
                          "type": "object",
                          "properties": {
                            "addon_id": {
                              "type": "string"
                            },
                            "creation_date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "expiration_date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "name": {
                              "type": "string"
                            },
                            "properties": {
                              "type": "string"
                            },
                            "senx_application_id": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "tokenType": {
                              "type": "object"
                            },
                            "token_id": {
                              "type": "string"
                            },
                            "ttl": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "id": "[POST] /v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX/tokens",
          "method": "post",
          "path": "/v4/addon-providers/addon-tardis/organisations/{ownerId}/addon/{tardisId}/tokens",
          "normalizedPath": "/v4/addon-providers/addon-tardis/organisations/:XXX/addon/:XXX/tokens",
          "operationId": "createTardisToken",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "tardisId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis ID",
                  "pattern": "^tardis_.*$",
                  "type": "string",
                  "description": "An addon Tardis ID.",
                  "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/TardisID"
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "tokenType"
                    ],
                    "type": "object",
                    "properties": {
                      "ephemeral": {
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "tokenType": {
                        "type": "object"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "addon_id",
                  "creation_date",
                  "expiration_date",
                  "senx_application_id",
                  "token",
                  "tokenType",
                  "token_id",
                  "ttl"
                ],
                "type": "object",
                "properties": {
                  "addon_id": {
                    "type": "string"
                  },
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "expiration_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "properties": {
                    "type": "string"
                  },
                  "senx_application_id": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "tokenType": {
                    "type": "object"
                  },
                  "token_id": {
                    "type": "string"
                  },
                  "ttl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/TardisTokenLine"
            }
          }
        },
        {
          "id": "[GET] /v4/addon-providers/addon-tardis/organisations/:XXX/addons",
          "method": "get",
          "path": "/v4/addon-providers/addon-tardis/organisations/{ownerId}/addons",
          "normalizedPath": "/v4/addon-providers/addon-tardis/organisations/:XXX/addons",
          "operationId": "listTardisAddons",
          "queryParams": [
            {
              "name": "from",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "From",
                  "minimum": 0,
                  "type": "integer",
                  "description": "Parameter use to paginate List requests (from index).",
                  "example": 0
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "to",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "To",
                  "minimum": 0,
                  "pattern": "^[0-9]+$",
                  "type": "integer",
                  "description": "Parameter use to paginate List requests (to index).",
                  "example": 100
                },
                "ref": "#/components/schemas/To"
              }
            }
          ],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "addons",
                  "ownerID"
                ],
                "type": "object",
                "properties": {
                  "addons": {
                    "type": "array",
                    "items": {
                      "required": [
                        "creation_date",
                        "plan",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "creation_date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "deletion_date": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "owner_id": {
                          "$ref": "#/components/schemas/OwnerID"
                        },
                        "plan": {
                          "type": "object"
                        },
                        "read_token": {
                          "required": [
                            "addon_id",
                            "creation_date",
                            "expiration_date",
                            "senx_application_id",
                            "token",
                            "tokenType",
                            "token_id",
                            "ttl"
                          ],
                          "type": "object",
                          "properties": {
                            "addon_id": {
                              "type": "string"
                            },
                            "creation_date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "expiration_date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "name": {
                              "type": "string"
                            },
                            "properties": {
                              "type": "string"
                            },
                            "senx_application_id": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "tokenType": {
                              "type": "object"
                            },
                            "token_id": {
                              "type": "string"
                            },
                            "ttl": {
                              "type": "string"
                            }
                          }
                        },
                        "senx_application_id": {
                          "title": "SenX Application ID",
                          "pattern": "^cc..*$",
                          "type": "string",
                          "description": "A SenX Warp10 application ID.",
                          "example": "cc.96cdf0b9-f286-4332-92bf-b71ffebb556c"
                        },
                        "status": {
                          "type": "object"
                        },
                        "tardis_id": {
                          "title": "Tardis ID",
                          "pattern": "^tardis_.*$",
                          "type": "string",
                          "description": "An addon Tardis ID.",
                          "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                        },
                        "write_token": {
                          "required": [
                            "addon_id",
                            "creation_date",
                            "expiration_date",
                            "senx_application_id",
                            "token",
                            "tokenType",
                            "token_id",
                            "ttl"
                          ],
                          "type": "object",
                          "properties": {
                            "addon_id": {
                              "type": "string"
                            },
                            "creation_date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "expiration_date": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "name": {
                              "type": "string"
                            },
                            "properties": {
                              "type": "string"
                            },
                            "senx_application_id": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "tokenType": {
                              "type": "object"
                            },
                            "token_id": {
                              "type": "string"
                            },
                            "ttl": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "ownerID": {
                    "type": "object"
                  }
                }
              },
              "ref": "#/components/schemas/AllAddonsTardis"
            }
          }
        },
        {
          "id": "[POST] /v4/addon-providers/addon-tardis/organisations/:XXX/addons",
          "method": "post",
          "path": "/v4/addon-providers/addon-tardis/organisations/{ownerId}/addons",
          "normalizedPath": "/v4/addon-providers/addon-tardis/organisations/:XXX/addons",
          "operationId": "createTardisAddonWithOwner",
          "queryParams": [
            {
              "name": "appOnly",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "boolean",
                  "default": false
                },
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "ttl": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "creation_date",
                  "plan",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "deletion_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "owner_id": {
                    "$ref": "#/components/schemas/OwnerID"
                  },
                  "plan": {
                    "type": "object"
                  },
                  "read_token": {
                    "required": [
                      "addon_id",
                      "creation_date",
                      "expiration_date",
                      "senx_application_id",
                      "token",
                      "tokenType",
                      "token_id",
                      "ttl"
                    ],
                    "type": "object",
                    "properties": {
                      "addon_id": {
                        "type": "string"
                      },
                      "creation_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "string"
                      },
                      "senx_application_id": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenType": {
                        "type": "object"
                      },
                      "token_id": {
                        "type": "string"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  },
                  "senx_application_id": {
                    "title": "SenX Application ID",
                    "pattern": "^cc..*$",
                    "type": "string",
                    "description": "A SenX Warp10 application ID.",
                    "example": "cc.96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "status": {
                    "type": "object"
                  },
                  "tardis_id": {
                    "title": "Tardis ID",
                    "pattern": "^tardis_.*$",
                    "type": "string",
                    "description": "An addon Tardis ID.",
                    "example": "tardis_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "write_token": {
                    "required": [
                      "addon_id",
                      "creation_date",
                      "expiration_date",
                      "senx_application_id",
                      "token",
                      "tokenType",
                      "token_id",
                      "ttl"
                    ],
                    "type": "object",
                    "properties": {
                      "addon_id": {
                        "type": "string"
                      },
                      "creation_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "name": {
                        "type": "string"
                      },
                      "properties": {
                        "type": "string"
                      },
                      "senx_application_id": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenType": {
                        "type": "object"
                      },
                      "token_id": {
                        "type": "string"
                      },
                      "ttl": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonTardis"
            }
          }
        },
        {
          "id": "[POST] /v4/addon-providers/addon-tardis/token/revoke",
          "method": "post",
          "path": "/v4/addon-providers/addon-tardis/token/revoke",
          "normalizedPath": "/v4/addon-providers/addon-tardis/token/revoke",
          "operationId": "revokeAndDeleteTardisAddonToken",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "description": "Token to revoke"
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/addon-providers/config-provider/addons/:XXX",
          "method": "get",
          "path": "/v4/addon-providers/config-provider/addons/{configurationProviderId}",
          "normalizedPath": "/v4/addon-providers/config-provider/addons/:XXX",
          "operationId": "getConfigProvider",
          "queryParams": [],
          "pathParams": [
            {
              "name": "configurationProviderId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string",
                  "example": "config_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/ConfigurationProviderId"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "creation_date",
                  "env"
                ],
                "type": "object",
                "properties": {
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "PORT"
                        },
                        "value": {
                          "type": "string",
                          "example": "8080"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string",
                    "example": "config_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                  },
                  "owner_id": {
                    "$ref": "#/components/schemas/OwnerID"
                  }
                }
              },
              "ref": "#/components/schemas/AddonConfigProviderView"
            }
          }
        },
        {
          "id": "[GET] /v4/addon-providers/config-provider/addons/:XXX/env",
          "method": "get",
          "path": "/v4/addon-providers/config-provider/addons/{configurationProviderId}/env",
          "normalizedPath": "/v4/addon-providers/config-provider/addons/:XXX/env",
          "operationId": "getConfigProviderEnv",
          "queryParams": [],
          "pathParams": [
            {
              "name": "configurationProviderId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string",
                  "example": "config_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/ConfigurationProviderId"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "PORT"
                    },
                    "value": {
                      "type": "string",
                      "example": "8080"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v4/addon-providers/config-provider/addons/:XXX/env",
          "method": "put",
          "path": "/v4/addon-providers/config-provider/addons/{configurationProviderId}/env",
          "normalizedPath": "/v4/addon-providers/config-provider/addons/:XXX/env",
          "operationId": "updateConfigProviderEnv",
          "queryParams": [],
          "pathParams": [
            {
              "name": "configurationProviderId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string",
                  "example": "config_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/schemas/ConfigurationProviderId"
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "DEBUG"
                        },
                        "value": {
                          "type": "string",
                          "example": "TRUE"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "PORT"
                    },
                    "value": {
                      "type": "string",
                      "example": "8080"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/console/settings",
          "method": "get",
          "path": "/v4/console/settings",
          "normalizedPath": "/v4/console/settings",
          "operationId": "listSettings",
          "queryParams": [
            {
              "name": "env",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "title": "Setting definition",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "KEY"
                    },
                    "value": {
                      "type": "string",
                      "example": "value"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/console/settings/:XXX",
          "method": "get",
          "path": "/v4/console/settings/{name}",
          "normalizedPath": "/v4/console/settings/:XXX",
          "operationId": "getSetting",
          "queryParams": [
            {
              "name": "env",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "name",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "Setting definition",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "KEY"
                  },
                  "value": {
                    "type": "string",
                    "example": "value"
                  }
                }
              },
              "ref": "#/components/schemas/Setting"
            }
          }
        },
        {
          "id": "[PUT] /v4/console/settings/:XXX",
          "method": "put",
          "path": "/v4/console/settings/{name}",
          "normalizedPath": "/v4/console/settings/:XXX",
          "operationId": "putSetting",
          "queryParams": [
            {
              "name": "env",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "name",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[DELETE] /v4/console/settings/:XXX",
          "method": "delete",
          "path": "/v4/console/settings/{name}",
          "normalizedPath": "/v4/console/settings/:XXX",
          "operationId": "deleteSetting",
          "queryParams": [
            {
              "name": "env",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "name",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/functions/organisations/:XXX/functions",
          "method": "get",
          "path": "/v4/functions/organisations/{ownerId}/functions",
          "normalizedPath": "/v4/functions/organisations/:XXX/functions",
          "operationId": "listOrganisationFunctions",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "title": "FunctionResponse",
                  "required": [
                    "createdAt",
                    "environment",
                    "updatedAt"
                  ],
                  "type": "object",
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "title": "Function description",
                      "type": "string",
                      "description": "Description of a Function.",
                      "example": "A Function of my own."
                    },
                    "environment": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "title": "Function ID",
                      "pattern": "^function_.*$",
                      "type": "string",
                      "description": "ID of a Function.",
                      "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                    },
                    "maxInstances": {
                      "type": "integer",
                      "description": "The maximum number of instances to scale the function.",
                      "format": "int32",
                      "example": 42
                    },
                    "maxMemory": {
                      "required": [
                        "unit",
                        "value"
                      ],
                      "type": "number",
                      "description": "The maximum memory to scale the function.",
                      "format": "long",
                      "example": 4096
                    },
                    "name": {
                      "title": "Function Name",
                      "type": "string",
                      "description": "Name of a Function.",
                      "example": "my function"
                    },
                    "ownerId": {
                      "$ref": "#/components/schemas/OwnerID"
                    },
                    "tag": {
                      "title": "Function tag",
                      "type": "string",
                      "description": "Tag of a function",
                      "example": "#tag"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "description": "Details about a Function."
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v4/functions/organisations/:XXX/functions",
          "method": "post",
          "path": "/v4/functions/organisations/{ownerId}/functions",
          "normalizedPath": "/v4/functions/organisations/:XXX/functions",
          "operationId": "createOrganisationFunction",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "title": "FunctionCreateOpts",
                    "required": [
                      "environment",
                      "maxInstances",
                      "maxMemory"
                    ],
                    "type": "object",
                    "properties": {
                      "description": {
                        "title": "Function description",
                        "type": "string",
                        "description": "Description of a Function.",
                        "example": "A Function of my own."
                      },
                      "environment": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "maxInstances": {
                        "type": "integer",
                        "description": "The maximum number of instances to scale the function.",
                        "format": "int32",
                        "example": 42
                      },
                      "maxMemory": {
                        "required": [
                          "unit",
                          "value"
                        ],
                        "type": "number",
                        "description": "The maximum memory to scale the function.",
                        "format": "double",
                        "example": 16.5
                      },
                      "name": {
                        "title": "Function Name",
                        "type": "string",
                        "description": "Name of a Function.",
                        "example": "my function"
                      },
                      "tag": {
                        "title": "Function tag",
                        "type": "string",
                        "description": "Tag of a function",
                        "example": "#tag"
                      }
                    },
                    "description": "Details about a Function."
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 201,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "title": "FunctionResponse",
                  "required": [
                    "createdAt",
                    "environment",
                    "updatedAt"
                  ],
                  "type": "object",
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "title": "Function description",
                      "type": "string",
                      "description": "Description of a Function.",
                      "example": "A Function of my own."
                    },
                    "environment": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "title": "Function ID",
                      "pattern": "^function_.*$",
                      "type": "string",
                      "description": "ID of a Function.",
                      "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                    },
                    "maxInstances": {
                      "type": "integer",
                      "description": "The maximum number of instances to scale the function.",
                      "format": "int32",
                      "example": 42
                    },
                    "maxMemory": {
                      "required": [
                        "unit",
                        "value"
                      ],
                      "type": "number",
                      "description": "The maximum memory to scale the function.",
                      "format": "long",
                      "example": 4096
                    },
                    "name": {
                      "title": "Function Name",
                      "type": "string",
                      "description": "Name of a Function.",
                      "example": "my function"
                    },
                    "ownerId": {
                      "$ref": "#/components/schemas/OwnerID"
                    },
                    "tag": {
                      "title": "Function tag",
                      "type": "string",
                      "description": "Tag of a function",
                      "example": "#tag"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "description": "Details about a Function."
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/functions/organisations/:XXX/functions/:XXX",
          "method": "get",
          "path": "/v4/functions/organisations/{ownerId}/functions/{functionId}",
          "normalizedPath": "/v4/functions/organisations/:XXX/functions/:XXX",
          "operationId": "getOrganisationFunction",
          "queryParams": [],
          "pathParams": [
            {
              "name": "functionId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Function ID",
                  "pattern": "^function_.*$",
                  "type": "string",
                  "description": "ID of a Function.",
                  "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "title": "FunctionResponse",
                  "required": [
                    "createdAt",
                    "environment",
                    "updatedAt"
                  ],
                  "type": "object",
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "title": "Function description",
                      "type": "string",
                      "description": "Description of a Function.",
                      "example": "A Function of my own."
                    },
                    "environment": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "title": "Function ID",
                      "pattern": "^function_.*$",
                      "type": "string",
                      "description": "ID of a Function.",
                      "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                    },
                    "maxInstances": {
                      "type": "integer",
                      "description": "The maximum number of instances to scale the function.",
                      "format": "int32",
                      "example": 42
                    },
                    "maxMemory": {
                      "required": [
                        "unit",
                        "value"
                      ],
                      "type": "number",
                      "description": "The maximum memory to scale the function.",
                      "format": "long",
                      "example": 4096
                    },
                    "name": {
                      "title": "Function Name",
                      "type": "string",
                      "description": "Name of a Function.",
                      "example": "my function"
                    },
                    "ownerId": {
                      "$ref": "#/components/schemas/OwnerID"
                    },
                    "tag": {
                      "title": "Function tag",
                      "type": "string",
                      "description": "Tag of a function",
                      "example": "#tag"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "description": "Details about a Function."
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v4/functions/organisations/:XXX/functions/:XXX",
          "method": "put",
          "path": "/v4/functions/organisations/{ownerId}/functions/{functionId}",
          "normalizedPath": "/v4/functions/organisations/:XXX/functions/:XXX",
          "operationId": "updateOrganisationfunction",
          "queryParams": [],
          "pathParams": [
            {
              "name": "functionId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Function ID",
                  "pattern": "^function_.*$",
                  "type": "string",
                  "description": "ID of a Function.",
                  "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "environment",
                      "maxInstances",
                      "maxMemory"
                    ],
                    "type": "object",
                    "properties": {
                      "description": {
                        "title": "Function description",
                        "type": "string",
                        "description": "Description of a Function.",
                        "example": "A Function of my own."
                      },
                      "environment": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "maxInstances": {
                        "type": "integer",
                        "description": "The maximum number of instances to scale the function.",
                        "format": "int32",
                        "example": 42
                      },
                      "maxMemory": {
                        "required": [
                          "unit",
                          "value"
                        ],
                        "type": "number",
                        "description": "The maximum memory to scale the function.",
                        "format": "double",
                        "example": 16.5
                      },
                      "name": {
                        "title": "Function Name",
                        "type": "string",
                        "description": "Name of a Function.",
                        "example": "my function"
                      },
                      "tag": {
                        "title": "Function tag",
                        "type": "string",
                        "description": "Tag of a function",
                        "example": "#tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "title": "FunctionResponse",
                  "required": [
                    "createdAt",
                    "environment",
                    "updatedAt"
                  ],
                  "type": "object",
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "title": "Function description",
                      "type": "string",
                      "description": "Description of a Function.",
                      "example": "A Function of my own."
                    },
                    "environment": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "title": "Function ID",
                      "pattern": "^function_.*$",
                      "type": "string",
                      "description": "ID of a Function.",
                      "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                    },
                    "maxInstances": {
                      "type": "integer",
                      "description": "The maximum number of instances to scale the function.",
                      "format": "int32",
                      "example": 42
                    },
                    "maxMemory": {
                      "required": [
                        "unit",
                        "value"
                      ],
                      "type": "number",
                      "description": "The maximum memory to scale the function.",
                      "format": "long",
                      "example": 4096
                    },
                    "name": {
                      "title": "Function Name",
                      "type": "string",
                      "description": "Name of a Function.",
                      "example": "my function"
                    },
                    "ownerId": {
                      "$ref": "#/components/schemas/OwnerID"
                    },
                    "tag": {
                      "title": "Function tag",
                      "type": "string",
                      "description": "Tag of a function",
                      "example": "#tag"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "description": "Details about a Function."
                }
              }
            }
          }
        },
        {
          "id": "[DELETE] /v4/functions/organisations/:XXX/functions/:XXX",
          "method": "delete",
          "path": "/v4/functions/organisations/{ownerId}/functions/{functionId}",
          "normalizedPath": "/v4/functions/organisations/:XXX/functions/:XXX",
          "operationId": "deleteOrganisationFunction",
          "queryParams": [],
          "pathParams": [
            {
              "name": "functionId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Function ID",
                  "pattern": "^function_.*$",
                  "type": "string",
                  "description": "ID of a Function.",
                  "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/functions/organisations/:XXX/functions/:XXX/deployments",
          "method": "get",
          "path": "/v4/functions/organisations/{ownerId}/functions/{functionId}/deployments",
          "normalizedPath": "/v4/functions/organisations/:XXX/functions/:XXX/deployments",
          "operationId": "listOrganisationFunctionDeployments",
          "queryParams": [],
          "pathParams": [
            {
              "name": "functionId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Function ID",
                  "pattern": "^function_.*$",
                  "type": "string",
                  "description": "ID of a Function.",
                  "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "required": [
                    "createdAt",
                    "updatedAt"
                  ],
                  "type": "object",
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "title": "Deployment description",
                      "type": "string",
                      "description": "Description of a Deployment.",
                      "example": "A Deployment of my own."
                    },
                    "errorReason": {
                      "type": "string"
                    },
                    "functionId": {
                      "title": "Function ID",
                      "pattern": "^function_.*$",
                      "type": "string",
                      "description": "ID of a Function.",
                      "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                    },
                    "id": {
                      "title": "Deployment ID",
                      "pattern": "^deployment_.*$",
                      "type": "string",
                      "description": "ID of Deployment.",
                      "example": "deployment_987e23df-579f-43f7-ae31-c199bae9bae3"
                    },
                    "name": {
                      "title": "Deployment Name",
                      "type": "string",
                      "description": "Name of a Deployment.",
                      "example": "my deployment"
                    },
                    "platform": {
                      "title": "Platform",
                      "type": "string",
                      "description": "Platform that the function is using",
                      "example": "JAVA_SCRIPT",
                      "enum": [
                        "RUST",
                        "ASSEMBLY_SCRIPT",
                        "TINY_GO",
                        "JAVA_SCRIPT"
                      ]
                    },
                    "status": {
                      "title": "Status",
                      "type": "string",
                      "description": "Status of Deployment.",
                      "example": "PACKAGING",
                      "enum": [
                        "WAITING_FOR_UPLOAD",
                        "PACKAGING",
                        "DEPLOYING",
                        "READY",
                        "ERROR"
                      ]
                    },
                    "tag": {
                      "title": "Deployment tag",
                      "type": "string",
                      "description": "Tag of a Deployment",
                      "example": "#tag"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "url": {
                      "$ref": "#/components/schemas/FunctionDeploymentURL"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v4/functions/organisations/:XXX/functions/:XXX/deployments",
          "method": "post",
          "path": "/v4/functions/organisations/{ownerId}/functions/{functionId}/deployments",
          "normalizedPath": "/v4/functions/organisations/:XXX/functions/:XXX/deployments",
          "operationId": "createOrganisationFunctionDeployment",
          "queryParams": [],
          "pathParams": [
            {
              "name": "functionId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Function ID",
                  "pattern": "^function_.*$",
                  "type": "string",
                  "description": "ID of a Function.",
                  "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "title": "Deployment description",
                        "type": "string",
                        "description": "Description of a Deployment.",
                        "example": "A Deployment of my own."
                      },
                      "name": {
                        "title": "Deployment Name",
                        "type": "string",
                        "description": "Name of a Deployment.",
                        "example": "my deployment"
                      },
                      "platform": {
                        "title": "Platform",
                        "type": "string",
                        "description": "Platform that the function is using",
                        "example": "JAVA_SCRIPT",
                        "enum": [
                          "RUST",
                          "ASSEMBLY_SCRIPT",
                          "TINY_GO",
                          "JAVA_SCRIPT"
                        ]
                      },
                      "tag": {
                        "title": "Deployment tag",
                        "type": "string",
                        "description": "Tag of a Deployment",
                        "example": "#tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 201,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "createdAt",
                  "updatedAt"
                ],
                "type": "object",
                "properties": {
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "title": "Deployment description",
                    "type": "string",
                    "description": "Description of a Deployment.",
                    "example": "A Deployment of my own."
                  },
                  "errorReason": {
                    "type": "string"
                  },
                  "functionId": {
                    "title": "Function ID",
                    "pattern": "^function_.*$",
                    "type": "string",
                    "description": "ID of a Function.",
                    "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                  },
                  "id": {
                    "title": "Deployment ID",
                    "pattern": "^deployment_.*$",
                    "type": "string",
                    "description": "ID of Deployment.",
                    "example": "deployment_987e23df-579f-43f7-ae31-c199bae9bae3"
                  },
                  "name": {
                    "title": "Deployment Name",
                    "type": "string",
                    "description": "Name of a Deployment.",
                    "example": "my deployment"
                  },
                  "platform": {
                    "title": "Platform",
                    "type": "string",
                    "description": "Platform that the function is using",
                    "example": "JAVA_SCRIPT",
                    "enum": [
                      "RUST",
                      "ASSEMBLY_SCRIPT",
                      "TINY_GO",
                      "JAVA_SCRIPT"
                    ]
                  },
                  "status": {
                    "title": "Status",
                    "type": "string",
                    "description": "Status of Deployment.",
                    "example": "PACKAGING",
                    "enum": [
                      "WAITING_FOR_UPLOAD",
                      "PACKAGING",
                      "DEPLOYING",
                      "READY",
                      "ERROR"
                    ]
                  },
                  "tag": {
                    "title": "Deployment tag",
                    "type": "string",
                    "description": "Tag of a Deployment",
                    "example": "#tag"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "url": {
                    "$ref": "#/components/schemas/FunctionDeploymentURL"
                  }
                }
              },
              "ref": "#/components/schemas/Deployment"
            }
          }
        },
        {
          "id": "[GET] /v4/functions/organisations/:XXX/functions/:XXX/deployments/:XXX",
          "method": "get",
          "path": "/v4/functions/organisations/{ownerId}/functions/{functionId}/deployments/{deploymentId}",
          "normalizedPath": "/v4/functions/organisations/:XXX/functions/:XXX/deployments/:XXX",
          "operationId": "getOrganisationFunctionDeployment",
          "queryParams": [],
          "pathParams": [
            {
              "name": "deploymentId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Deployment ID",
                  "pattern": "^deployment_.*$",
                  "type": "string",
                  "description": "ID of Deployment.",
                  "example": "deployment_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "functionId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Function ID",
                  "pattern": "^function_.*$",
                  "type": "string",
                  "description": "ID of a Function.",
                  "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/FunctionID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "createdAt",
                  "updatedAt"
                ],
                "type": "object",
                "properties": {
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "title": "Deployment description",
                    "type": "string",
                    "description": "Description of a Deployment.",
                    "example": "A Deployment of my own."
                  },
                  "errorReason": {
                    "type": "string"
                  },
                  "functionId": {
                    "title": "Function ID",
                    "pattern": "^function_.*$",
                    "type": "string",
                    "description": "ID of a Function.",
                    "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                  },
                  "id": {
                    "title": "Deployment ID",
                    "pattern": "^deployment_.*$",
                    "type": "string",
                    "description": "ID of Deployment.",
                    "example": "deployment_987e23df-579f-43f7-ae31-c199bae9bae3"
                  },
                  "name": {
                    "title": "Deployment Name",
                    "type": "string",
                    "description": "Name of a Deployment.",
                    "example": "my deployment"
                  },
                  "platform": {
                    "title": "Platform",
                    "type": "string",
                    "description": "Platform that the function is using",
                    "example": "JAVA_SCRIPT",
                    "enum": [
                      "RUST",
                      "ASSEMBLY_SCRIPT",
                      "TINY_GO",
                      "JAVA_SCRIPT"
                    ]
                  },
                  "status": {
                    "title": "Status",
                    "type": "string",
                    "description": "Status of Deployment.",
                    "example": "PACKAGING",
                    "enum": [
                      "WAITING_FOR_UPLOAD",
                      "PACKAGING",
                      "DEPLOYING",
                      "READY",
                      "ERROR"
                    ]
                  },
                  "tag": {
                    "title": "Deployment tag",
                    "type": "string",
                    "description": "Tag of a Deployment",
                    "example": "#tag"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "url": {
                    "$ref": "#/components/schemas/FunctionDeploymentURL"
                  }
                }
              },
              "ref": "#/components/schemas/Deployment"
            }
          }
        },
        {
          "id": "[PUT] /v4/functions/organisations/:XXX/functions/:XXX/deployments/:XXX",
          "method": "put",
          "path": "/v4/functions/organisations/{ownerId}/functions/{functionId}/deployments/{deploymentId}",
          "normalizedPath": "/v4/functions/organisations/:XXX/functions/:XXX/deployments/:XXX",
          "operationId": "updateOrganisationFunctionDeployment",
          "queryParams": [],
          "pathParams": [
            {
              "name": "deploymentId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Deployment ID",
                  "pattern": "^deployment_.*$",
                  "type": "string",
                  "description": "ID of Deployment.",
                  "example": "deployment_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "functionId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Function ID",
                  "pattern": "^function_.*$",
                  "type": "string",
                  "description": "ID of a Function.",
                  "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/FunctionID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "title": "Deployment description",
                        "type": "string",
                        "description": "Description of a Deployment.",
                        "example": "A Deployment of my own."
                      },
                      "name": {
                        "title": "Deployment Name",
                        "type": "string",
                        "description": "Name of a Deployment.",
                        "example": "my deployment"
                      },
                      "tag": {
                        "title": "Deployment tag",
                        "type": "string",
                        "description": "Tag of a Deployment",
                        "example": "#tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "createdAt",
                  "updatedAt"
                ],
                "type": "object",
                "properties": {
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "title": "Deployment description",
                    "type": "string",
                    "description": "Description of a Deployment.",
                    "example": "A Deployment of my own."
                  },
                  "errorReason": {
                    "type": "string"
                  },
                  "functionId": {
                    "title": "Function ID",
                    "pattern": "^function_.*$",
                    "type": "string",
                    "description": "ID of a Function.",
                    "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                  },
                  "id": {
                    "title": "Deployment ID",
                    "pattern": "^deployment_.*$",
                    "type": "string",
                    "description": "ID of Deployment.",
                    "example": "deployment_987e23df-579f-43f7-ae31-c199bae9bae3"
                  },
                  "name": {
                    "title": "Deployment Name",
                    "type": "string",
                    "description": "Name of a Deployment.",
                    "example": "my deployment"
                  },
                  "platform": {
                    "title": "Platform",
                    "type": "string",
                    "description": "Platform that the function is using",
                    "example": "JAVA_SCRIPT",
                    "enum": [
                      "RUST",
                      "ASSEMBLY_SCRIPT",
                      "TINY_GO",
                      "JAVA_SCRIPT"
                    ]
                  },
                  "status": {
                    "title": "Status",
                    "type": "string",
                    "description": "Status of Deployment.",
                    "example": "PACKAGING",
                    "enum": [
                      "WAITING_FOR_UPLOAD",
                      "PACKAGING",
                      "DEPLOYING",
                      "READY",
                      "ERROR"
                    ]
                  },
                  "tag": {
                    "title": "Deployment tag",
                    "type": "string",
                    "description": "Tag of a Deployment",
                    "example": "#tag"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "url": {
                    "$ref": "#/components/schemas/FunctionDeploymentURL"
                  }
                }
              },
              "ref": "#/components/schemas/Deployment"
            }
          }
        },
        {
          "id": "[POST] /v4/functions/organisations/:XXX/functions/:XXX/deployments/:XXX",
          "method": "post",
          "path": "/v4/functions/organisations/{ownerId}/functions/{functionId}/deployments/{deploymentId}",
          "normalizedPath": "/v4/functions/organisations/:XXX/functions/:XXX/deployments/:XXX",
          "operationId": "triggerOrganisationFunctionDeployment",
          "queryParams": [],
          "pathParams": [
            {
              "name": "deploymentId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Deployment ID",
                  "pattern": "^deployment_.*$",
                  "type": "string",
                  "description": "ID of Deployment.",
                  "example": "deployment_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "functionId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Function ID",
                  "pattern": "^function_.*$",
                  "type": "string",
                  "description": "ID of a Function.",
                  "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/FunctionID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[DELETE] /v4/functions/organisations/:XXX/functions/:XXX/deployments/:XXX",
          "method": "delete",
          "path": "/v4/functions/organisations/{ownerId}/functions/{functionId}/deployments/{deploymentId}",
          "normalizedPath": "/v4/functions/organisations/:XXX/functions/:XXX/deployments/:XXX",
          "operationId": "deleteOrganisationFunctionDeployment",
          "queryParams": [],
          "pathParams": [
            {
              "name": "deploymentId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Deployment ID",
                  "pattern": "^deployment_.*$",
                  "type": "string",
                  "description": "ID of Deployment.",
                  "example": "deployment_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "functionId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Function ID",
                  "pattern": "^function_.*$",
                  "type": "string",
                  "description": "ID of a Function.",
                  "example": "function_987e23df-579f-43f7-ae31-c199bae9bae3"
                },
                "ref": "#/components/schemas/FunctionID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[POST] /v4/iam/organisations/:XXX/iam/materia-db-kv/:XXX/tokens",
          "method": "post",
          "path": "/v4/iam/organisations/{ownerId}/iam/materia-db-kv/{KVId}/tokens",
          "normalizedPath": "/v4/iam/organisations/:XXX/iam/materia-db-kv/:XXX/tokens",
          "operationId": "createMateriaDBKVToken",
          "queryParams": [],
          "pathParams": [
            {
              "name": "resourceId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Resource ID",
                  "pattern": "^(app|mysql|postgresql|redis|mongodb|elastisearch)_.*$",
                  "type": "string",
                  "description": "A resource ID (can be an application or an addon as mysql_, postgresql_, redis_, mongodb_ or elasticsearch_.",
                  "example": "app_42cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/parameters/OwnerId"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "creation_date",
                  "description",
                  "id",
                  "labels",
                  "name",
                  "redacted_end",
                  "redacted_start",
                  "revocation_id",
                  "status",
                  "tags",
                  "type",
                  "update_date"
                ],
                "type": "object",
                "properties": {
                  "biscuit": {
                    "type": "string"
                  },
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "labels": {
                    "required": [
                      "creator",
                      "region"
                    ],
                    "type": "object",
                    "properties": {
                      "creator": {
                        "type": "string"
                      },
                      "owner": {
                        "type": "object"
                      },
                      "region": {
                        "type": "string"
                      },
                      "resource_id": {
                        "type": "string"
                      },
                      "service": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "redacted_end": {
                    "type": "string"
                  },
                  "redacted_start": {
                    "type": "string"
                  },
                  "revocation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "revocation_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "object"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "type": "object"
                  },
                  "update_date": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "ref": "#/components/schemas/IAMBiscuitView"
            }
          }
        },
        {
          "id": "[GET] /v4/iam/organisations/:XXX/iam/tokens",
          "method": "get",
          "path": "/v4/iam/organisations/{ownerId}/iam/tokens",
          "normalizedPath": "/v4/iam/organisations/:XXX/iam/tokens",
          "operationId": "listOrganisationTokens",
          "queryParams": [
            {
              "name": "from",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "object",
                  "properties": {
                    "defined": {
                      "type": "boolean"
                    },
                    "empty": {
                      "type": "boolean"
                    }
                  },
                  "format": "int > 0"
                },
                "ref": "#/components/parameters/OwnerId"
              }
            },
            {
              "name": "size",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "object",
                  "properties": {
                    "defined": {
                      "type": "boolean"
                    },
                    "empty": {
                      "type": "boolean"
                    }
                  },
                  "format": "int > 0"
                },
                "ref": "#/components/schemas/OptionObject"
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "required": [
                    "creation_date",
                    "description",
                    "id",
                    "labels",
                    "name",
                    "redacted_end",
                    "redacted_start",
                    "revocation_id",
                    "status",
                    "tags",
                    "type",
                    "update_date"
                  ],
                  "type": "object",
                  "properties": {
                    "biscuit": {
                      "type": "string"
                    },
                    "creation_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "labels": {
                      "required": [
                        "creator",
                        "region"
                      ],
                      "type": "object",
                      "properties": {
                        "creator": {
                          "type": "string"
                        },
                        "owner": {
                          "type": "object"
                        },
                        "region": {
                          "type": "string"
                        },
                        "resource_id": {
                          "type": "string"
                        },
                        "service": {
                          "type": "string"
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "redacted_end": {
                      "type": "string"
                    },
                    "redacted_start": {
                      "type": "string"
                    },
                    "revocation_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "revocation_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "object"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "type": {
                      "type": "object"
                    },
                    "update_date": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/iam/organisations/:XXX/iam/tokens/:XXX",
          "method": "get",
          "path": "/v4/iam/organisations/{ownerId}/iam/tokens/{tokenId}",
          "normalizedPath": "/v4/iam/organisations/:XXX/iam/tokens/:XXX",
          "operationId": "getOrganisationToken",
          "queryParams": [],
          "pathParams": [
            {
              "name": "tokenId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Tardis token ID",
                  "type": "string",
                  "description": "An addon Tardis token ID.",
                  "example": "96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/parameters/OwnerId"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "creation_date",
                  "description",
                  "id",
                  "labels",
                  "name",
                  "redacted_end",
                  "redacted_start",
                  "revocation_id",
                  "status",
                  "tags",
                  "type",
                  "update_date"
                ],
                "type": "object",
                "properties": {
                  "biscuit": {
                    "type": "string"
                  },
                  "creation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "labels": {
                    "required": [
                      "creator",
                      "region"
                    ],
                    "type": "object",
                    "properties": {
                      "creator": {
                        "type": "string"
                      },
                      "owner": {
                        "type": "object"
                      },
                      "region": {
                        "type": "string"
                      },
                      "resource_id": {
                        "type": "string"
                      },
                      "service": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "redacted_end": {
                    "type": "string"
                  },
                  "redacted_start": {
                    "type": "string"
                  },
                  "revocation_date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "revocation_id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "object"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "type": "object"
                  },
                  "update_date": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "ref": "#/components/schemas/IAMBiscuitView"
            }
          }
        },
        {
          "id": "[DELETE] /v4/iam/organisations/:XXX/iam/tokens/:XXX",
          "method": "delete",
          "path": "/v4/iam/organisations/{ownerId}/iam/tokens/{tokenId}",
          "normalizedPath": "/v4/iam/organisations/:XXX/iam/tokens/:XXX",
          "operationId": "revokeToken",
          "queryParams": [],
          "pathParams": [
            {
              "name": "apiKeyId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Biscuit ID",
                  "pattern": "^biscuit_.*$",
                  "type": "string",
                  "description": "An api key ID.",
                  "example": "biscuit_96cdf0b9-f286-4332-92bf-b71ffebb556c"
                },
                "ref": "#/components/parameters/OwnerId"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/iam/tokens/revocations",
          "method": "get",
          "path": "/v4/iam/tokens/revocations",
          "normalizedPath": "/v4/iam/tokens/revocations",
          "operationId": "listTokenRevocations",
          "queryParams": [
            {
              "name": "from",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "object",
                  "properties": {
                    "defined": {
                      "type": "boolean"
                    },
                    "empty": {
                      "type": "boolean"
                    }
                  },
                  "format": "int > 0"
                },
                "ref": "#/components/schemas/OptionObject"
              }
            },
            {
              "name": "size",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "object",
                  "properties": {
                    "defined": {
                      "type": "boolean"
                    },
                    "empty": {
                      "type": "boolean"
                    }
                  },
                  "format": "int > 0"
                },
                "ref": "#/components/schemas/OptionObject"
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/load-balancers/organisations/:XXX/addons/:XXX/load-balancers/:XXX",
          "method": "get",
          "path": "/v4/load-balancers/organisations/{ownerId}/addons/{addonId}/load-balancers/{loadBalancerKind}",
          "normalizedPath": "/v4/load-balancers/organisations/:XXX/addons/:XXX/load-balancers/:XXX",
          "operationId": "listAddonLoadBalancers",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Addon ID",
                  "type": "string",
                  "example": "addon_38864e5d-9ff0-4ef1-9462-e29dc422ae6a"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "loadBalancerKind",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "object"
                },
                "ref": "#/components/schemas/AddonID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoadBalancerView"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/load-balancers/organisations/:XXX/applications/:XXX/load-balancers/:XXX",
          "method": "get",
          "path": "/v4/load-balancers/organisations/{ownerId}/applications/{applicationId}/load-balancers/{loadBalancerKind}",
          "normalizedPath": "/v4/load-balancers/organisations/:XXX/applications/:XXX/load-balancers/:XXX",
          "operationId": "listApplicationLoadBalancers",
          "queryParams": [],
          "pathParams": [
            {
              "name": "applicationId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Application ID",
                  "pattern": "^app_[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "type": "string",
                  "example": "app_38864e5d-9ff0-4ef1-9462-e29dc422ae6a"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "loadBalancerKind",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "object"
                },
                "ref": "#/components/schemas/ApplicationId"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LoadBalancer"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/logs/organisations/:XXX/applications/:XXX/accesslogs",
          "method": "get",
          "path": "/v4/logs/organisations/{ownerId}/applications/{applicationId}/accesslogs",
          "normalizedPath": "/v4/logs/organisations/:XXX/applications/:XXX/accesslogs",
          "operationId": "streamOrganisationApplicationAccessLogs",
          "queryParams": [
            {
              "name": "field",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "limit",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "minimum": 1,
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            {
              "name": "since",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "throttleElements",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "throttlePerInMilliseconds",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            {
              "name": "until",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                },
                "ref": "#/components/schemas/OptionMessageId"
              }
            }
          ],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "resourceId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Resource ID",
                  "pattern": "^(app|mysql|postgresql|redis|mongodb|elastisearch)_.*$",
                  "type": "string",
                  "description": "A resource ID (can be an application or an addon as mysql_, postgresql_, redis_, mongodb_ or elasticsearch_.",
                  "example": "app_42cdf0b9-f286-4332-92bf-b71ffebb556c"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/event-stream",
            "type": {
              "type": "broken",
              "ref": "#/components/schemas/AccessLog"
            }
          }
        },
        {
          "id": "[GET] /v4/logs/organisations/:XXX/applications/:XXX/logs",
          "method": "get",
          "path": "/v4/logs/organisations/{ownerId}/applications/{applicationId}/logs",
          "normalizedPath": "/v4/logs/organisations/:XXX/applications/:XXX/logs",
          "operationId": "streamOrganisationApplicationLogs",
          "queryParams": [
            {
              "name": "deploymentId",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                },
                "ref": "#/components/schemas/ApplicationId"
              }
            },
            {
              "name": "field",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "name": "filter",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "instanceId",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "name": "limit",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "minimum": 1,
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            {
              "name": "service",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "name": "since",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "throttleElements",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            {
              "name": "throttlePerInMilliseconds",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            {
              "name": "until",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                },
                "ref": "#/components/schemas/OptionMessageId"
              }
            }
          ],
          "pathParams": [
            {
              "name": "applicationId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Application ID",
                  "pattern": "^app_[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "type": "string",
                  "example": "app_38864e5d-9ff0-4ef1-9462-e29dc422ae6a"
                },
                "ref": "#/components/parameters/OwnerId"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/event-stream",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "ApplicationLog",
                "type": "object",
                "properties": {
                  "applicationId": {
                    "title": "Application ID",
                    "pattern": "^app_[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                    "type": "string",
                    "example": "app_38864e5d-9ff0-4ef1-9462-e29dc422ae6a"
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string"
                  },
                  "deploymentId": {
                    "type": "string"
                  },
                  "facility": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "instanceId": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "pid": {
                    "type": "integer"
                  },
                  "region": {
                    "type": "string"
                  },
                  "service": {
                    "type": "string"
                  },
                  "severity": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationLog"
            }
          }
        },
        {
          "id": "[GET] /v4/networkgroups/organisations/:XXX/networkgroups",
          "method": "get",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups",
          "operationId": "listNetworkGroups",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "title": "Network Group",
                  "required": [
                    "id",
                    "label",
                    "lastAllocatedIp",
                    "networkIp",
                    "ownerId",
                    "version"
                  ],
                  "type": "object",
                  "properties": {
                    "description": {
                      "title": "Network Group description",
                      "type": "string",
                      "description": "Description of a Network Group.",
                      "example": "A Network Group with my apps and add-ons."
                    },
                    "id": {
                      "title": "Network Group ID",
                      "type": "string",
                      "description": "Unique ID of a Network Group.",
                      "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                    },
                    "label": {
                      "title": "Network Group label",
                      "type": "string",
                      "description": "Label of a Network Group used in the `<ngLabel>.ng.clever-cloud.com` domain name alias.",
                      "example": "my-networkgroup"
                    },
                    "lastAllocatedIp": {
                      "title": "IP address",
                      "type": "string",
                      "description": "The last IP address allocated to a peer in this Network Group. It can be in IPv4 or IPv6 format.",
                      "example": "10.105.0.42"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "title": "Member",
                        "required": [
                          "domainName",
                          "id",
                          "label",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "domainName": {
                            "title": "Member name",
                            "type": "string",
                            "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias."
                          },
                          "id": {
                            "title": "Member ID",
                            "type": "string",
                            "description": "Unique ID of a Network Group member.",
                            "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                          },
                          "label": {
                            "title": "Member label",
                            "type": "string",
                            "description": "Human-readable name of a Network Group member."
                          },
                          "type": {
                            "title": "Member Type",
                            "type": "string",
                            "description": "Type of a Network Group member.",
                            "enum": [
                              "application",
                              "addon",
                              "external"
                            ]
                          }
                        },
                        "description": "Informations about a Network Group member."
                      },
                      "default": []
                    },
                    "networkIp": {
                      "title": "IP address",
                      "type": "string",
                      "description": "The public IP address of the Network Group. It can be in IPv4 or IPv6 format.",
                      "example": "10.105.0.42"
                    },
                    "ownerId": {
                      "$ref": "#/components/schemas/OwnerID"
                    },
                    "peers": {
                      "type": "array",
                      "items": {
                        "title": "Peer",
                        "type": "object",
                        "description": "Information about a Network Group peer.",
                        "oneOf": [
                          {
                            "required": [
                              "endpoint",
                              "hostname",
                              "hv",
                              "id",
                              "parentMember",
                              "publicKey"
                            ],
                            "type": "object",
                            "properties": {
                              "endpoint": {
                                "type": "object"
                              },
                              "hostname": {
                                "title": "Host name",
                                "type": "string",
                                "description": "Host name of a Network Group peer.",
                                "example": "rust-1"
                              },
                              "hv": {
                                "title": "Hypervisor ID",
                                "type": "string",
                                "description": "Unique ID of an hypervisor.",
                                "example": "hv-par0-001"
                              },
                              "id": {
                                "title": "Peer ID",
                                "type": "string",
                                "description": "Unique ID of a Network Group peer.",
                                "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                              },
                              "label": {
                                "title": "Peer label",
                                "type": "string",
                                "description": "Label of a Network Group peer."
                              },
                              "parentEvent": {
                                "title": "Parent event",
                                "type": "string",
                                "description": "Event that created the Network Group peer."
                              },
                              "parentMember": {
                                "title": "Member ID",
                                "type": "string",
                                "description": "Unique ID of a Network Group member.",
                                "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                              },
                              "publicKey": {
                                "title": "WireGuard® public key",
                                "type": "string",
                                "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                                "format": "[a-zA-Z0-9+/]{43}=",
                                "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                              }
                            }
                          },
                          {
                            "required": [
                              "endpoint",
                              "hostname",
                              "id",
                              "parentMember",
                              "publicKey"
                            ],
                            "type": "object",
                            "properties": {
                              "endpoint": {
                                "type": "object"
                              },
                              "hostname": {
                                "title": "Host name",
                                "type": "string",
                                "description": "Host name of a Network Group peer.",
                                "example": "rust-1"
                              },
                              "id": {
                                "title": "Peer ID",
                                "type": "string",
                                "description": "Unique ID of a Network Group peer.",
                                "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                              },
                              "label": {
                                "title": "Peer label",
                                "type": "string",
                                "description": "Label of a Network Group peer."
                              },
                              "parentEvent": {
                                "title": "Parent event",
                                "type": "string",
                                "description": "Event that created the Network Group peer."
                              },
                              "parentMember": {
                                "title": "Member ID",
                                "type": "string",
                                "description": "Unique ID of a Network Group member.",
                                "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                              },
                              "publicKey": {
                                "title": "WireGuard® public key",
                                "type": "string",
                                "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                                "format": "[a-zA-Z0-9+/]{43}=",
                                "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                              }
                            }
                          }
                        ]
                      },
                      "default": []
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "title": "Tag",
                        "type": "string",
                        "description": "A semantic tag."
                      },
                      "default": []
                    },
                    "version": {
                      "title": "Version number",
                      "type": "integer",
                      "description": "The version of this Network Group. It increments every time its configuration changes.",
                      "format": "int32",
                      "example": 42
                    }
                  },
                  "description": "Details about a Network Group."
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v4/networkgroups/organisations/:XXX/networkgroups",
          "method": "post",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups",
          "operationId": "createNetworkGroup",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Wannabe Network Group",
                    "type": "object",
                    "properties": {
                      "description": {
                        "title": "Network Group description",
                        "type": "string",
                        "description": "Description of a Network Group.",
                        "example": "A Network Group with my apps and add-ons."
                      },
                      "id": {
                        "title": "Network Group ID",
                        "type": "string",
                        "description": "Unique ID of a Network Group.",
                        "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                      },
                      "label": {
                        "title": "Network Group label",
                        "type": "string",
                        "description": "Label of a Network Group used in the `<ngLabel>.ng.clever-cloud.com` domain name alias.",
                        "example": "my-networkgroup"
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "title": "Wannabe member",
                          "required": [
                            "domainName",
                            "id",
                            "type"
                          ],
                          "type": "object",
                          "properties": {
                            "domainName": {
                              "title": "Member name",
                              "type": "string",
                              "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias."
                            },
                            "id": {
                              "title": "Member ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group member.",
                              "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                            },
                            "label": {
                              "title": "Member label",
                              "type": "string",
                              "description": "Human-readable name of a Network Group member."
                            },
                            "type": {
                              "title": "Member Type",
                              "type": "string",
                              "description": "Type of a Network Group member.",
                              "enum": [
                                "application",
                                "addon",
                                "external"
                              ]
                            }
                          },
                          "description": "Information required to create a Network Group member."
                        }
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "title": "Tag",
                          "type": "string",
                          "description": "A semantic tag."
                        }
                      }
                    },
                    "description": "Informations required to create an external Network Group."
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 201,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "Network Group",
                "required": [
                  "id",
                  "label",
                  "lastAllocatedIp",
                  "networkIp",
                  "ownerId",
                  "version"
                ],
                "type": "object",
                "properties": {
                  "description": {
                    "title": "Network Group description",
                    "type": "string",
                    "description": "Description of a Network Group.",
                    "example": "A Network Group with my apps and add-ons."
                  },
                  "id": {
                    "title": "Network Group ID",
                    "type": "string",
                    "description": "Unique ID of a Network Group.",
                    "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                  },
                  "label": {
                    "title": "Network Group label",
                    "type": "string",
                    "description": "Label of a Network Group used in the `<ngLabel>.ng.clever-cloud.com` domain name alias.",
                    "example": "my-networkgroup"
                  },
                  "lastAllocatedIp": {
                    "title": "IP address",
                    "type": "string",
                    "description": "The last IP address allocated to a peer in this Network Group. It can be in IPv4 or IPv6 format.",
                    "example": "10.105.0.42"
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "title": "Member",
                      "required": [
                        "domainName",
                        "id",
                        "label",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "domainName": {
                          "title": "Member name",
                          "type": "string",
                          "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias."
                        },
                        "id": {
                          "title": "Member ID",
                          "type": "string",
                          "description": "Unique ID of a Network Group member.",
                          "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                        },
                        "label": {
                          "title": "Member label",
                          "type": "string",
                          "description": "Human-readable name of a Network Group member."
                        },
                        "type": {
                          "title": "Member Type",
                          "type": "string",
                          "description": "Type of a Network Group member.",
                          "enum": [
                            "application",
                            "addon",
                            "external"
                          ]
                        }
                      },
                      "description": "Informations about a Network Group member."
                    },
                    "default": []
                  },
                  "networkIp": {
                    "title": "IP address",
                    "type": "string",
                    "description": "The public IP address of the Network Group. It can be in IPv4 or IPv6 format.",
                    "example": "10.105.0.42"
                  },
                  "ownerId": {
                    "$ref": "#/components/schemas/OwnerID"
                  },
                  "peers": {
                    "type": "array",
                    "items": {
                      "title": "Peer",
                      "type": "object",
                      "description": "Information about a Network Group peer.",
                      "oneOf": [
                        {
                          "required": [
                            "endpoint",
                            "hostname",
                            "hv",
                            "id",
                            "parentMember",
                            "publicKey"
                          ],
                          "type": "object",
                          "properties": {
                            "endpoint": {
                              "type": "object"
                            },
                            "hostname": {
                              "title": "Host name",
                              "type": "string",
                              "description": "Host name of a Network Group peer.",
                              "example": "rust-1"
                            },
                            "hv": {
                              "title": "Hypervisor ID",
                              "type": "string",
                              "description": "Unique ID of an hypervisor.",
                              "example": "hv-par0-001"
                            },
                            "id": {
                              "title": "Peer ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group peer.",
                              "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                            },
                            "label": {
                              "title": "Peer label",
                              "type": "string",
                              "description": "Label of a Network Group peer."
                            },
                            "parentEvent": {
                              "title": "Parent event",
                              "type": "string",
                              "description": "Event that created the Network Group peer."
                            },
                            "parentMember": {
                              "title": "Member ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group member.",
                              "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                            },
                            "publicKey": {
                              "title": "WireGuard® public key",
                              "type": "string",
                              "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                              "format": "[a-zA-Z0-9+/]{43}=",
                              "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                            }
                          }
                        },
                        {
                          "required": [
                            "endpoint",
                            "hostname",
                            "id",
                            "parentMember",
                            "publicKey"
                          ],
                          "type": "object",
                          "properties": {
                            "endpoint": {
                              "type": "object"
                            },
                            "hostname": {
                              "title": "Host name",
                              "type": "string",
                              "description": "Host name of a Network Group peer.",
                              "example": "rust-1"
                            },
                            "id": {
                              "title": "Peer ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group peer.",
                              "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                            },
                            "label": {
                              "title": "Peer label",
                              "type": "string",
                              "description": "Label of a Network Group peer."
                            },
                            "parentEvent": {
                              "title": "Parent event",
                              "type": "string",
                              "description": "Event that created the Network Group peer."
                            },
                            "parentMember": {
                              "title": "Member ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group member.",
                              "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                            },
                            "publicKey": {
                              "title": "WireGuard® public key",
                              "type": "string",
                              "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                              "format": "[a-zA-Z0-9+/]{43}=",
                              "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                            }
                          }
                        }
                      ]
                    },
                    "default": []
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "title": "Tag",
                      "type": "string",
                      "description": "A semantic tag."
                    },
                    "default": []
                  },
                  "version": {
                    "title": "Version number",
                    "type": "integer",
                    "description": "The version of this Network Group. It increments every time its configuration changes.",
                    "format": "int32",
                    "example": 42
                  }
                },
                "description": "Details about a Network Group."
              },
              "ref": "#/components/schemas/NetworkGroup"
            }
          }
        },
        {
          "id": "[GET] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX",
          "method": "get",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX",
          "operationId": "getNetworkGroup",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "Network Group",
                "required": [
                  "id",
                  "label",
                  "lastAllocatedIp",
                  "networkIp",
                  "ownerId",
                  "version"
                ],
                "type": "object",
                "properties": {
                  "description": {
                    "title": "Network Group description",
                    "type": "string",
                    "description": "Description of a Network Group.",
                    "example": "A Network Group with my apps and add-ons."
                  },
                  "id": {
                    "title": "Network Group ID",
                    "type": "string",
                    "description": "Unique ID of a Network Group.",
                    "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                  },
                  "label": {
                    "title": "Network Group label",
                    "type": "string",
                    "description": "Label of a Network Group used in the `<ngLabel>.ng.clever-cloud.com` domain name alias.",
                    "example": "my-networkgroup"
                  },
                  "lastAllocatedIp": {
                    "title": "IP address",
                    "type": "string",
                    "description": "The last IP address allocated to a peer in this Network Group. It can be in IPv4 or IPv6 format.",
                    "example": "10.105.0.42"
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "title": "Member",
                      "required": [
                        "domainName",
                        "id",
                        "label",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "domainName": {
                          "title": "Member name",
                          "type": "string",
                          "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias."
                        },
                        "id": {
                          "title": "Member ID",
                          "type": "string",
                          "description": "Unique ID of a Network Group member.",
                          "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                        },
                        "label": {
                          "title": "Member label",
                          "type": "string",
                          "description": "Human-readable name of a Network Group member."
                        },
                        "type": {
                          "title": "Member Type",
                          "type": "string",
                          "description": "Type of a Network Group member.",
                          "enum": [
                            "application",
                            "addon",
                            "external"
                          ]
                        }
                      },
                      "description": "Informations about a Network Group member."
                    },
                    "default": []
                  },
                  "networkIp": {
                    "title": "IP address",
                    "type": "string",
                    "description": "The public IP address of the Network Group. It can be in IPv4 or IPv6 format.",
                    "example": "10.105.0.42"
                  },
                  "ownerId": {
                    "$ref": "#/components/schemas/OwnerID"
                  },
                  "peers": {
                    "type": "array",
                    "items": {
                      "title": "Peer",
                      "type": "object",
                      "description": "Information about a Network Group peer.",
                      "oneOf": [
                        {
                          "required": [
                            "endpoint",
                            "hostname",
                            "hv",
                            "id",
                            "parentMember",
                            "publicKey"
                          ],
                          "type": "object",
                          "properties": {
                            "endpoint": {
                              "type": "object"
                            },
                            "hostname": {
                              "title": "Host name",
                              "type": "string",
                              "description": "Host name of a Network Group peer.",
                              "example": "rust-1"
                            },
                            "hv": {
                              "title": "Hypervisor ID",
                              "type": "string",
                              "description": "Unique ID of an hypervisor.",
                              "example": "hv-par0-001"
                            },
                            "id": {
                              "title": "Peer ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group peer.",
                              "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                            },
                            "label": {
                              "title": "Peer label",
                              "type": "string",
                              "description": "Label of a Network Group peer."
                            },
                            "parentEvent": {
                              "title": "Parent event",
                              "type": "string",
                              "description": "Event that created the Network Group peer."
                            },
                            "parentMember": {
                              "title": "Member ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group member.",
                              "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                            },
                            "publicKey": {
                              "title": "WireGuard® public key",
                              "type": "string",
                              "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                              "format": "[a-zA-Z0-9+/]{43}=",
                              "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                            }
                          }
                        },
                        {
                          "required": [
                            "endpoint",
                            "hostname",
                            "id",
                            "parentMember",
                            "publicKey"
                          ],
                          "type": "object",
                          "properties": {
                            "endpoint": {
                              "type": "object"
                            },
                            "hostname": {
                              "title": "Host name",
                              "type": "string",
                              "description": "Host name of a Network Group peer.",
                              "example": "rust-1"
                            },
                            "id": {
                              "title": "Peer ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group peer.",
                              "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                            },
                            "label": {
                              "title": "Peer label",
                              "type": "string",
                              "description": "Label of a Network Group peer."
                            },
                            "parentEvent": {
                              "title": "Parent event",
                              "type": "string",
                              "description": "Event that created the Network Group peer."
                            },
                            "parentMember": {
                              "title": "Member ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group member.",
                              "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                            },
                            "publicKey": {
                              "title": "WireGuard® public key",
                              "type": "string",
                              "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                              "format": "[a-zA-Z0-9+/]{43}=",
                              "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                            }
                          }
                        }
                      ]
                    },
                    "default": []
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "title": "Tag",
                      "type": "string",
                      "description": "A semantic tag."
                    },
                    "default": []
                  },
                  "version": {
                    "title": "Version number",
                    "type": "integer",
                    "description": "The version of this Network Group. It increments every time its configuration changes.",
                    "format": "int32",
                    "example": 42
                  }
                },
                "description": "Details about a Network Group."
              },
              "ref": "#/components/schemas/NetworkGroup"
            }
          }
        },
        {
          "id": "[DELETE] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX",
          "method": "delete",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX",
          "operationId": "deleteNetworkGroup",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[POST] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/external-peers",
          "method": "post",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/external-peers",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/external-peers",
          "operationId": "createNetworkGroupExternalPeer",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Wannabe external peer",
                    "required": [
                      "label",
                      "parentMember",
                      "peerRole",
                      "publicKey",
                      "toWannabePeer"
                    ],
                    "type": "object",
                    "properties": {
                      "hostname": {
                        "title": "Host name",
                        "type": "string",
                        "description": "Host name of a Network Group peer.",
                        "example": "rust-1"
                      },
                      "ip": {
                        "title": "IP address",
                        "type": "string",
                        "description": "The public IP on which you are listening (only for `server` role). It can be in IPv4 or IPv6 format.",
                        "example": "10.105.0.42"
                      },
                      "label": {
                        "title": "Peer label",
                        "type": "string",
                        "description": "Label of a Network Group peer."
                      },
                      "parentEvent": {
                        "title": "Parent event",
                        "type": "string",
                        "description": "Event that created the Network Group peer."
                      },
                      "parentMember": {
                        "title": "Member ID",
                        "type": "string",
                        "description": "Unique ID of a Network Group member.",
                        "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                      },
                      "peerRole": {
                        "title": "Peer Role",
                        "type": "string",
                        "description": "The role of this peer in the Network Group. Either client (`'client'`) or server (`'server'`).",
                        "enum": [
                          "client",
                          "server"
                        ]
                      },
                      "port": {
                        "title": "Port",
                        "type": "integer",
                        "description": "The public TCP or UDP port number on which you are listening (only for `server` role).",
                        "format": "int32",
                        "example": 50159
                      },
                      "publicKey": {
                        "title": "WireGuard® public key",
                        "type": "string",
                        "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                        "format": "[a-zA-Z0-9+/]{43}=",
                        "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                      }
                    },
                    "description": "Informations required to create an external Network Group peer."
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "Peer",
                "type": "object",
                "description": "Information about a Network Group peer.",
                "oneOf": [
                  {
                    "required": [
                      "endpoint",
                      "hostname",
                      "hv",
                      "id",
                      "parentMember",
                      "publicKey"
                    ],
                    "type": "object",
                    "properties": {
                      "endpoint": {
                        "type": "object"
                      },
                      "hostname": {
                        "title": "Host name",
                        "type": "string",
                        "description": "Host name of a Network Group peer.",
                        "example": "rust-1"
                      },
                      "hv": {
                        "title": "Hypervisor ID",
                        "type": "string",
                        "description": "Unique ID of an hypervisor.",
                        "example": "hv-par0-001"
                      },
                      "id": {
                        "title": "Peer ID",
                        "type": "string",
                        "description": "Unique ID of a Network Group peer.",
                        "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                      },
                      "label": {
                        "title": "Peer label",
                        "type": "string",
                        "description": "Label of a Network Group peer."
                      },
                      "parentEvent": {
                        "title": "Parent event",
                        "type": "string",
                        "description": "Event that created the Network Group peer."
                      },
                      "parentMember": {
                        "title": "Member ID",
                        "type": "string",
                        "description": "Unique ID of a Network Group member.",
                        "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                      },
                      "publicKey": {
                        "title": "WireGuard® public key",
                        "type": "string",
                        "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                        "format": "[a-zA-Z0-9+/]{43}=",
                        "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                      }
                    }
                  },
                  {
                    "required": [
                      "endpoint",
                      "hostname",
                      "id",
                      "parentMember",
                      "publicKey"
                    ],
                    "type": "object",
                    "properties": {
                      "endpoint": {
                        "type": "object"
                      },
                      "hostname": {
                        "title": "Host name",
                        "type": "string",
                        "description": "Host name of a Network Group peer.",
                        "example": "rust-1"
                      },
                      "id": {
                        "title": "Peer ID",
                        "type": "string",
                        "description": "Unique ID of a Network Group peer.",
                        "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                      },
                      "label": {
                        "title": "Peer label",
                        "type": "string",
                        "description": "Label of a Network Group peer."
                      },
                      "parentEvent": {
                        "title": "Parent event",
                        "type": "string",
                        "description": "Event that created the Network Group peer."
                      },
                      "parentMember": {
                        "title": "Member ID",
                        "type": "string",
                        "description": "Unique ID of a Network Group member.",
                        "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                      },
                      "publicKey": {
                        "title": "WireGuard® public key",
                        "type": "string",
                        "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                        "format": "[a-zA-Z0-9+/]{43}=",
                        "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                      }
                    }
                  }
                ]
              },
              "ref": "#/components/schemas/Peer"
            }
          }
        },
        {
          "id": "[DELETE] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/external-peers/:XXX",
          "method": "delete",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/external-peers/{peerId}",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/external-peers/:XXX",
          "operationId": "deleteNetworkGroupExternalPeer",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "peerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Peer ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group peer.",
                  "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                },
                "ref": "#/components/schemas/PeerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/members",
          "method": "get",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/members",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/members",
          "operationId": "listNetworkGroupMembers",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "title": "Member",
                  "required": [
                    "domainName",
                    "id",
                    "label",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "domainName": {
                      "title": "Member name",
                      "type": "string",
                      "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias."
                    },
                    "id": {
                      "title": "Member ID",
                      "type": "string",
                      "description": "Unique ID of a Network Group member.",
                      "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                    },
                    "label": {
                      "title": "Member label",
                      "type": "string",
                      "description": "Human-readable name of a Network Group member."
                    },
                    "type": {
                      "title": "Member Type",
                      "type": "string",
                      "description": "Type of a Network Group member.",
                      "enum": [
                        "application",
                        "addon",
                        "external"
                      ]
                    }
                  },
                  "description": "Informations about a Network Group member."
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/members",
          "method": "post",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/members",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/members",
          "operationId": "createNetworkGroupMember",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "title": "Wannabe member",
                    "required": [
                      "domainName",
                      "id",
                      "type"
                    ],
                    "type": "object",
                    "properties": {
                      "domainName": {
                        "title": "Member name",
                        "type": "string",
                        "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias."
                      },
                      "id": {
                        "title": "Member ID",
                        "type": "string",
                        "description": "Unique ID of a Network Group member.",
                        "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                      },
                      "label": {
                        "title": "Member label",
                        "type": "string",
                        "description": "Human-readable name of a Network Group member."
                      },
                      "type": {
                        "title": "Member Type",
                        "type": "string",
                        "description": "Type of a Network Group member.",
                        "enum": [
                          "application",
                          "addon",
                          "external"
                        ]
                      }
                    },
                    "description": "Information required to create a Network Group member."
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 202,
            "contentType": "text/plain; charset=UTF-8",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/members/:XXX",
          "method": "get",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/members/{memberId}",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/members/:XXX",
          "operationId": "getNetworkGroupMember",
          "queryParams": [],
          "pathParams": [
            {
              "name": "memberId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Member ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group member.",
                  "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/NetworkGroupID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "Member",
                "required": [
                  "domainName",
                  "id",
                  "label",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "domainName": {
                    "title": "Member name",
                    "type": "string",
                    "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias."
                  },
                  "id": {
                    "title": "Member ID",
                    "type": "string",
                    "description": "Unique ID of a Network Group member.",
                    "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                  },
                  "label": {
                    "title": "Member label",
                    "type": "string",
                    "description": "Human-readable name of a Network Group member."
                  },
                  "type": {
                    "title": "Member Type",
                    "type": "string",
                    "description": "Type of a Network Group member.",
                    "enum": [
                      "application",
                      "addon",
                      "external"
                    ]
                  }
                },
                "description": "Informations about a Network Group member."
              },
              "ref": "#/components/schemas/Member"
            }
          }
        },
        {
          "id": "[DELETE] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/members/:XXX",
          "method": "delete",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/members/{memberId}",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/members/:XXX",
          "operationId": "deleteNetworkGroupMember",
          "queryParams": [],
          "pathParams": [
            {
              "name": "memberId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Member ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group member.",
                  "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/NetworkGroupID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/peers",
          "method": "get",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/peers",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/peers",
          "operationId": "listNetworkGroupPeers",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "title": "Peer",
                  "type": "object",
                  "description": "Information about a Network Group peer.",
                  "oneOf": [
                    {
                      "required": [
                        "endpoint",
                        "hostname",
                        "hv",
                        "id",
                        "parentMember",
                        "publicKey"
                      ],
                      "type": "object",
                      "properties": {
                        "endpoint": {
                          "type": "object"
                        },
                        "hostname": {
                          "title": "Host name",
                          "type": "string",
                          "description": "Host name of a Network Group peer.",
                          "example": "rust-1"
                        },
                        "hv": {
                          "title": "Hypervisor ID",
                          "type": "string",
                          "description": "Unique ID of an hypervisor.",
                          "example": "hv-par0-001"
                        },
                        "id": {
                          "title": "Peer ID",
                          "type": "string",
                          "description": "Unique ID of a Network Group peer.",
                          "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                        },
                        "label": {
                          "title": "Peer label",
                          "type": "string",
                          "description": "Label of a Network Group peer."
                        },
                        "parentEvent": {
                          "title": "Parent event",
                          "type": "string",
                          "description": "Event that created the Network Group peer."
                        },
                        "parentMember": {
                          "title": "Member ID",
                          "type": "string",
                          "description": "Unique ID of a Network Group member.",
                          "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                        },
                        "publicKey": {
                          "title": "WireGuard® public key",
                          "type": "string",
                          "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                          "format": "[a-zA-Z0-9+/]{43}=",
                          "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                        }
                      }
                    },
                    {
                      "required": [
                        "endpoint",
                        "hostname",
                        "id",
                        "parentMember",
                        "publicKey"
                      ],
                      "type": "object",
                      "properties": {
                        "endpoint": {
                          "type": "object"
                        },
                        "hostname": {
                          "title": "Host name",
                          "type": "string",
                          "description": "Host name of a Network Group peer.",
                          "example": "rust-1"
                        },
                        "id": {
                          "title": "Peer ID",
                          "type": "string",
                          "description": "Unique ID of a Network Group peer.",
                          "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                        },
                        "label": {
                          "title": "Peer label",
                          "type": "string",
                          "description": "Label of a Network Group peer."
                        },
                        "parentEvent": {
                          "title": "Parent event",
                          "type": "string",
                          "description": "Event that created the Network Group peer."
                        },
                        "parentMember": {
                          "title": "Member ID",
                          "type": "string",
                          "description": "Unique ID of a Network Group member.",
                          "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                        },
                        "publicKey": {
                          "title": "WireGuard® public key",
                          "type": "string",
                          "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                          "format": "[a-zA-Z0-9+/]{43}=",
                          "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/peers/:XXX",
          "method": "get",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/peers/{peerId}",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/peers/:XXX",
          "operationId": "getNetworkGroupPeer",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "peerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Peer ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group peer.",
                  "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                },
                "ref": "#/components/schemas/PeerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "Peer",
                "type": "object",
                "description": "Information about a Network Group peer.",
                "oneOf": [
                  {
                    "required": [
                      "endpoint",
                      "hostname",
                      "hv",
                      "id",
                      "parentMember",
                      "publicKey"
                    ],
                    "type": "object",
                    "properties": {
                      "endpoint": {
                        "type": "object"
                      },
                      "hostname": {
                        "title": "Host name",
                        "type": "string",
                        "description": "Host name of a Network Group peer.",
                        "example": "rust-1"
                      },
                      "hv": {
                        "title": "Hypervisor ID",
                        "type": "string",
                        "description": "Unique ID of an hypervisor.",
                        "example": "hv-par0-001"
                      },
                      "id": {
                        "title": "Peer ID",
                        "type": "string",
                        "description": "Unique ID of a Network Group peer.",
                        "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                      },
                      "label": {
                        "title": "Peer label",
                        "type": "string",
                        "description": "Label of a Network Group peer."
                      },
                      "parentEvent": {
                        "title": "Parent event",
                        "type": "string",
                        "description": "Event that created the Network Group peer."
                      },
                      "parentMember": {
                        "title": "Member ID",
                        "type": "string",
                        "description": "Unique ID of a Network Group member.",
                        "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                      },
                      "publicKey": {
                        "title": "WireGuard® public key",
                        "type": "string",
                        "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                        "format": "[a-zA-Z0-9+/]{43}=",
                        "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                      }
                    }
                  },
                  {
                    "required": [
                      "endpoint",
                      "hostname",
                      "id",
                      "parentMember",
                      "publicKey"
                    ],
                    "type": "object",
                    "properties": {
                      "endpoint": {
                        "type": "object"
                      },
                      "hostname": {
                        "title": "Host name",
                        "type": "string",
                        "description": "Host name of a Network Group peer.",
                        "example": "rust-1"
                      },
                      "id": {
                        "title": "Peer ID",
                        "type": "string",
                        "description": "Unique ID of a Network Group peer.",
                        "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                      },
                      "label": {
                        "title": "Peer label",
                        "type": "string",
                        "description": "Label of a Network Group peer."
                      },
                      "parentEvent": {
                        "title": "Parent event",
                        "type": "string",
                        "description": "Event that created the Network Group peer."
                      },
                      "parentMember": {
                        "title": "Member ID",
                        "type": "string",
                        "description": "Unique ID of a Network Group member.",
                        "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                      },
                      "publicKey": {
                        "title": "WireGuard® public key",
                        "type": "string",
                        "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                        "format": "[a-zA-Z0-9+/]{43}=",
                        "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                      }
                    }
                  }
                ]
              },
              "ref": "#/components/schemas/Peer"
            }
          }
        },
        {
          "id": "[DELETE] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/peers/:XXX",
          "method": "delete",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/peers/{peerId}",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/peers/:XXX",
          "operationId": "deleteNetworkGroupPeer",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "peerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Peer ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group peer.",
                  "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                },
                "ref": "#/components/schemas/PeerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/peers/:XXX/wireguard/configuration",
          "method": "get",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/peers/{peerId}/wireguard/configuration",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/peers/:XXX/wireguard/configuration",
          "operationId": "getNetworkGroupWireGuardConfiguration",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "peerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Peer ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group peer.",
                  "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                },
                "ref": "#/components/schemas/PeerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "WireGuard® Configuration",
                "required": [
                  "base64",
                  "conf",
                  "ngId",
                  "peerId",
                  "version"
                ],
                "type": "object",
                "properties": {
                  "base64": {
                    "type": "string"
                  },
                  "conf": {
                    "title": "WireGuard® configuration file",
                    "type": "string",
                    "description": "A `wg-quick` configuration file encoded in Base64 format, without its owner's private key. In `[Interface]`, you have to replace `PrivateKey = <%PrivateKey%>` by the desired private key.",
                    "example": "W0ludGVyZmFjZV0NClByaXZhdGVLZXkgPSA8JVByaXZhdGVLZXklPg0KQWRkcmVzcyA9IDEwLjEwMi4wLjYvMTYNCg0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gS2o5cFRDTjFMQ1JaYms1U1kxbFNPU3hJT2t4dFgyVlJWRlUwTkNaeGNTNHUNCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuMTAvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFpsOTlYV1p5VGpSa1J6TmJVWEF1Sm5WSVZTTXJaaWxrVmxSOVFGb3NSamdLDQogICAgQWxsb3dlZElQcyA9IDEwLjEwMi4wLjUvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFlTMDVjaU5IWkVaNlpqZGpTMTF3TkhWNU4xUXBNMnRRYVVKWVdHUlNYem8NCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuOS8zMg0KICAgIFBlcnNpc3RlbnRLZWVwYWxpdmUgPSAyNQ0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gSVdneldWMGpLRjhsZWwxcmNIczJOV2NyVURRckxHbHlXRlFsVFQ4amUzMA0KICAgIEFsbG93ZWRJUHMgPSAxMC4xMDIuMC43LzMyDQogICAgUGVyc2lzdGVudEtlZXBhbGl2ZSA9IDI1DQoNCg0K"
                  },
                  "ngId": {
                    "title": "Network Group ID",
                    "type": "string",
                    "description": "Unique ID of a Network Group.",
                    "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                  },
                  "peerId": {
                    "title": "Peer ID",
                    "type": "string",
                    "description": "Unique ID of a Network Group peer.",
                    "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                  },
                  "version": {
                    "title": "Version number",
                    "type": "integer",
                    "description": "The version of this Network Group. It increments every time its configuration changes.",
                    "format": "int32",
                    "example": 42
                  }
                },
                "description": "WireGuard® configuration for a specific Network Group peer."
              },
              "ref": "#/components/schemas/WireGuardConfiguration"
            }
          }
        },
        {
          "id": "[GET] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/peers/:XXX/wireguard/configuration/stream",
          "method": "get",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/peers/{peerId}/wireguard/configuration/stream",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/peers/:XXX/wireguard/configuration/stream",
          "operationId": "getNetworkGroupWireGuardConfigurationStream",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "peerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Peer ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group peer.",
                  "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                },
                "ref": "#/components/schemas/PeerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/event-stream",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "WireGuard® Configuration",
                "required": [
                  "base64",
                  "conf",
                  "ngId",
                  "peerId",
                  "version"
                ],
                "type": "object",
                "properties": {
                  "base64": {
                    "type": "string"
                  },
                  "conf": {
                    "title": "WireGuard® configuration file",
                    "type": "string",
                    "description": "A `wg-quick` configuration file encoded in Base64 format, without its owner's private key. In `[Interface]`, you have to replace `PrivateKey = <%PrivateKey%>` by the desired private key.",
                    "example": "W0ludGVyZmFjZV0NClByaXZhdGVLZXkgPSA8JVByaXZhdGVLZXklPg0KQWRkcmVzcyA9IDEwLjEwMi4wLjYvMTYNCg0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gS2o5cFRDTjFMQ1JaYms1U1kxbFNPU3hJT2t4dFgyVlJWRlUwTkNaeGNTNHUNCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuMTAvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFpsOTlYV1p5VGpSa1J6TmJVWEF1Sm5WSVZTTXJaaWxrVmxSOVFGb3NSamdLDQogICAgQWxsb3dlZElQcyA9IDEwLjEwMi4wLjUvMzINCiAgICBQZXJzaXN0ZW50S2VlcGFsaXZlID0gMjUNCg0KDQoNCltQZWVyXQ0KICAgIFB1YmxpY0tleSA9IFlTMDVjaU5IWkVaNlpqZGpTMTF3TkhWNU4xUXBNMnRRYVVKWVdHUlNYem8NCiAgICBBbGxvd2VkSVBzID0gMTAuMTAyLjAuOS8zMg0KICAgIFBlcnNpc3RlbnRLZWVwYWxpdmUgPSAyNQ0KDQoNCg0KW1BlZXJdDQogICAgUHVibGljS2V5ID0gSVdneldWMGpLRjhsZWwxcmNIczJOV2NyVURRckxHbHlXRlFsVFQ4amUzMA0KICAgIEFsbG93ZWRJUHMgPSAxMC4xMDIuMC43LzMyDQogICAgUGVyc2lzdGVudEtlZXBhbGl2ZSA9IDI1DQoNCg0K"
                  },
                  "ngId": {
                    "title": "Network Group ID",
                    "type": "string",
                    "description": "Unique ID of a Network Group.",
                    "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                  },
                  "peerId": {
                    "title": "Peer ID",
                    "type": "string",
                    "description": "Unique ID of a Network Group peer.",
                    "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                  },
                  "version": {
                    "title": "Version number",
                    "type": "integer",
                    "description": "The version of this Network Group. It increments every time its configuration changes.",
                    "format": "int32",
                    "example": 42
                  }
                },
                "description": "WireGuard® configuration for a specific Network Group peer."
              },
              "ref": "#/components/schemas/WireGuardConfiguration"
            }
          }
        },
        {
          "id": "[GET] /v4/networkgroups/organisations/:XXX/networkgroups/:XXX/stream",
          "method": "get",
          "path": "/v4/networkgroups/organisations/{ownerId}/networkgroups/{networkGroupId}/stream",
          "normalizedPath": "/v4/networkgroups/organisations/:XXX/networkgroups/:XXX/stream",
          "operationId": "getNetworkGroupStream",
          "queryParams": [],
          "pathParams": [
            {
              "name": "networkGroupId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Network Group ID",
                  "type": "string",
                  "description": "Unique ID of a Network Group.",
                  "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/event-stream",
            "type": {
              "type": "not-broken",
              "schema": {
                "title": "Network Group",
                "required": [
                  "id",
                  "label",
                  "lastAllocatedIp",
                  "networkIp",
                  "ownerId",
                  "version"
                ],
                "type": "object",
                "properties": {
                  "description": {
                    "title": "Network Group description",
                    "type": "string",
                    "description": "Description of a Network Group.",
                    "example": "A Network Group with my apps and add-ons."
                  },
                  "id": {
                    "title": "Network Group ID",
                    "type": "string",
                    "description": "Unique ID of a Network Group.",
                    "example": "ng_0358a60f-51de-4918-8790-3f8d60e2053b"
                  },
                  "label": {
                    "title": "Network Group label",
                    "type": "string",
                    "description": "Label of a Network Group used in the `<ngLabel>.ng.clever-cloud.com` domain name alias.",
                    "example": "my-networkgroup"
                  },
                  "lastAllocatedIp": {
                    "title": "IP address",
                    "type": "string",
                    "description": "The last IP address allocated to a peer in this Network Group. It can be in IPv4 or IPv6 format.",
                    "example": "10.105.0.42"
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "title": "Member",
                      "required": [
                        "domainName",
                        "id",
                        "label",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "domainName": {
                          "title": "Member name",
                          "type": "string",
                          "description": "Member name used in the `<memberName>.m.<ngID>.ng.clever-cloud.com` domain name alias."
                        },
                        "id": {
                          "title": "Member ID",
                          "type": "string",
                          "description": "Unique ID of a Network Group member.",
                          "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                        },
                        "label": {
                          "title": "Member label",
                          "type": "string",
                          "description": "Human-readable name of a Network Group member."
                        },
                        "type": {
                          "title": "Member Type",
                          "type": "string",
                          "description": "Type of a Network Group member.",
                          "enum": [
                            "application",
                            "addon",
                            "external"
                          ]
                        }
                      },
                      "description": "Informations about a Network Group member."
                    },
                    "default": []
                  },
                  "networkIp": {
                    "title": "IP address",
                    "type": "string",
                    "description": "The public IP address of the Network Group. It can be in IPv4 or IPv6 format.",
                    "example": "10.105.0.42"
                  },
                  "ownerId": {
                    "$ref": "#/components/schemas/OwnerID"
                  },
                  "peers": {
                    "type": "array",
                    "items": {
                      "title": "Peer",
                      "type": "object",
                      "description": "Information about a Network Group peer.",
                      "oneOf": [
                        {
                          "required": [
                            "endpoint",
                            "hostname",
                            "hv",
                            "id",
                            "parentMember",
                            "publicKey"
                          ],
                          "type": "object",
                          "properties": {
                            "endpoint": {
                              "type": "object"
                            },
                            "hostname": {
                              "title": "Host name",
                              "type": "string",
                              "description": "Host name of a Network Group peer.",
                              "example": "rust-1"
                            },
                            "hv": {
                              "title": "Hypervisor ID",
                              "type": "string",
                              "description": "Unique ID of an hypervisor.",
                              "example": "hv-par0-001"
                            },
                            "id": {
                              "title": "Peer ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group peer.",
                              "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                            },
                            "label": {
                              "title": "Peer label",
                              "type": "string",
                              "description": "Label of a Network Group peer."
                            },
                            "parentEvent": {
                              "title": "Parent event",
                              "type": "string",
                              "description": "Event that created the Network Group peer."
                            },
                            "parentMember": {
                              "title": "Member ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group member.",
                              "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                            },
                            "publicKey": {
                              "title": "WireGuard® public key",
                              "type": "string",
                              "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                              "format": "[a-zA-Z0-9+/]{43}=",
                              "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                            }
                          }
                        },
                        {
                          "required": [
                            "endpoint",
                            "hostname",
                            "id",
                            "parentMember",
                            "publicKey"
                          ],
                          "type": "object",
                          "properties": {
                            "endpoint": {
                              "type": "object"
                            },
                            "hostname": {
                              "title": "Host name",
                              "type": "string",
                              "description": "Host name of a Network Group peer.",
                              "example": "rust-1"
                            },
                            "id": {
                              "title": "Peer ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group peer.",
                              "example": "external_94a6e943-35de-4c9c-8fd4-e7d405bffda8"
                            },
                            "label": {
                              "title": "Peer label",
                              "type": "string",
                              "description": "Label of a Network Group peer."
                            },
                            "parentEvent": {
                              "title": "Parent event",
                              "type": "string",
                              "description": "Event that created the Network Group peer."
                            },
                            "parentMember": {
                              "title": "Member ID",
                              "type": "string",
                              "description": "Unique ID of a Network Group member.",
                              "example": "app_df58468f-feaf-4f00-ab43-1f8e16c83a55"
                            },
                            "publicKey": {
                              "title": "WireGuard® public key",
                              "type": "string",
                              "description": "A WireGuard® public key of a Network Group peer. It's a Base64-encoded string (hence the format).",
                              "format": "[a-zA-Z0-9+/]{43}=",
                              "example": "Z5SECcCueLAf0+LwBfxxK81mkz2mskqdZ/GVsk/uFgs="
                            }
                          }
                        }
                      ]
                    },
                    "default": []
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "title": "Tag",
                      "type": "string",
                      "description": "A semantic tag."
                    },
                    "default": []
                  },
                  "version": {
                    "title": "Version number",
                    "type": "integer",
                    "description": "The version of this Network Group. It increments every time its configuration changes.",
                    "format": "int32",
                    "example": 42
                  }
                },
                "description": "Details about a Network Group."
              },
              "ref": "#/components/schemas/NetworkGroup"
            }
          }
        },
        {
          "id": "[GET] /v4/orchestration/organisations/:XXX/applications/:XXX/deployments",
          "method": "get",
          "path": "/v4/orchestration/organisations/{ownerId}/applications/{applicationId}/deployments",
          "normalizedPath": "/v4/orchestration/organisations/:XXX/applications/:XXX/deployments",
          "operationId": "listApplicationDeployments",
          "queryParams": [
            {
              "name": "action",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "includeApplicationConfiguration",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "boolean"
                }
              }
            },
            {
              "name": "limit",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "maximum": 1000,
                  "minimum": 1,
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            {
              "name": "order",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "applicationId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Application ID",
                  "pattern": "^app_[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "type": "string",
                  "example": "app_38864e5d-9ff0-4ef1-9462-e29dc422ae6a"
                },
                "ref": "#/components/schemas/ApplicationId"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeploymentView"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/orchestration/organisations/:XXX/applications/:XXX/deployments/:XXX",
          "method": "get",
          "path": "/v4/orchestration/organisations/{ownerId}/applications/{applicationId}/deployments/{deploymentId}",
          "normalizedPath": "/v4/orchestration/organisations/:XXX/applications/:XXX/deployments/:XXX",
          "operationId": "getApplicationDeployment",
          "queryParams": [
            {
              "name": "includeApplicationConfiguration",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "boolean"
                },
                "ref": "#/components/schemas/DeploymentID"
              }
            }
          ],
          "pathParams": [
            {
              "name": "applicationId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Application ID",
                  "pattern": "^app_[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "type": "string",
                  "example": "app_38864e5d-9ff0-4ef1-9462-e29dc422ae6a"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "deploymentId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Deployment ID",
                  "pattern": "^deployment_[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "type": "string",
                  "example": "deployment_38864e5d-9ff0-4ef1-9462-e29dc422ae6a"
                },
                "ref": "#/components/schemas/ApplicationId"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeploymentView"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/orchestration/organisations/:XXX/applications/:XXX/instances",
          "method": "get",
          "path": "/v4/orchestration/organisations/{ownerId}/applications/{applicationId}/instances",
          "normalizedPath": "/v4/orchestration/organisations/:XXX/applications/:XXX/instances",
          "operationId": "getApplicationInstances",
          "queryParams": [
            {
              "name": "excludeState",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "ref": "#/components/schemas/ApplicationId"
              }
            },
            {
              "name": "includeState",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            {
              "name": "limit",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "maximum": 1000,
                  "minimum": 1,
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            {
              "name": "order",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string",
                  "enum": [
                    "ASC",
                    "DESC"
                  ]
                }
              }
            },
            {
              "name": "since",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                },
                "ref": "#/components/parameters/DeploymentId"
              }
            },
            {
              "name": "until",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "applicationId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Application ID",
                  "pattern": "^app_[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "type": "string",
                  "example": "app_38864e5d-9ff0-4ef1-9462-e29dc422ae6a"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InstanceView"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/orchestration/organisations/:XXX/applications/:XXX/instances/:XXX",
          "method": "get",
          "path": "/v4/orchestration/organisations/{ownerId}/applications/{applicationId}/instances/{instanceId}",
          "normalizedPath": "/v4/orchestration/organisations/:XXX/applications/:XXX/instances/:XXX",
          "operationId": "getInstance",
          "queryParams": [],
          "pathParams": [
            {
              "name": "applicationId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Application ID",
                  "pattern": "^app_[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
                  "type": "string",
                  "example": "app_38864e5d-9ff0-4ef1-9462-e29dc422ae6a"
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InstanceView"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/products/zones",
          "method": "get",
          "path": "/v4/products/zones",
          "normalizedPath": "/v4/products/zones",
          "operationId": "listZones",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductZone"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v4/products/zones/:XXX",
          "method": "get",
          "path": "/v4/products/zones/{zoneName}",
          "normalizedPath": "/v4/products/zones/:XXX",
          "operationId": "getZone",
          "queryParams": [],
          "pathParams": [
            {
              "name": "zoneName",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Zone Name",
                  "type": "string",
                  "description": "A zone name referencing a Zone",
                  "example": "par, mtl"
                },
                "ref": "#/components/schemas/ZoneName"
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "required": [
                  "city",
                  "country",
                  "countryCode",
                  "id",
                  "lat",
                  "lon",
                  "name",
                  "outboundIPs",
                  "status",
                  "tags"
                ],
                "type": "object",
                "properties": {
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "lat": {
                    "type": "number",
                    "format": "double"
                  },
                  "lon": {
                    "type": "number",
                    "format": "double"
                  },
                  "name": {
                    "type": "string"
                  },
                  "outboundIPs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CidrIpAddress"
                    }
                  },
                  "status": {
                    "type": "object"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/Zone"
            }
          }
        },
        {
          "id": "[GET] /v4/stats/organisations/:XXX/resources/:XXX/metrics",
          "method": "get",
          "path": "/v4/stats/organisations/{ownerId}/resources/{resourceId}/metrics",
          "normalizedPath": "/v4/stats/organisations/:XXX/resources/:XXX/metrics",
          "operationId": "getOrganisationApplicationMetrics",
          "queryParams": [
            {
              "name": "end",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "object",
                  "properties": {
                    "dayOfMonth": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "dayOfWeek": {
                      "type": "string",
                      "enum": [
                        "MONDAY",
                        "TUESDAY",
                        "WEDNESDAY",
                        "THURSDAY",
                        "FRIDAY",
                        "SATURDAY",
                        "SUNDAY"
                      ]
                    },
                    "dayOfYear": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "hour": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "minute": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "month": {
                      "type": "string",
                      "enum": [
                        "JANUARY",
                        "FEBRUARY",
                        "MARCH",
                        "APRIL",
                        "MAY",
                        "JUNE",
                        "JULY",
                        "AUGUST",
                        "SEPTEMBER",
                        "OCTOBER",
                        "NOVEMBER",
                        "DECEMBER"
                      ]
                    },
                    "monthValue": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "nano": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "offset": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "rules": {
                          "type": "object",
                          "properties": {
                            "fixedOffset": {
                              "type": "boolean"
                            },
                            "transitionRules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "dayOfMonthIndicator": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "dayOfWeek": {
                                    "type": "string",
                                    "enum": [
                                      "MONDAY",
                                      "TUESDAY",
                                      "WEDNESDAY",
                                      "THURSDAY",
                                      "FRIDAY",
                                      "SATURDAY",
                                      "SUNDAY"
                                    ]
                                  },
                                  "localTime": {
                                    "type": "object",
                                    "properties": {
                                      "hour": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "minute": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "nano": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "second": {
                                        "type": "integer",
                                        "format": "int32"
                                      }
                                    }
                                  },
                                  "midnightEndOfDay": {
                                    "type": "boolean"
                                  },
                                  "month": {
                                    "type": "string",
                                    "enum": [
                                      "JANUARY",
                                      "FEBRUARY",
                                      "MARCH",
                                      "APRIL",
                                      "MAY",
                                      "JUNE",
                                      "JULY",
                                      "AUGUST",
                                      "SEPTEMBER",
                                      "OCTOBER",
                                      "NOVEMBER",
                                      "DECEMBER"
                                    ]
                                  },
                                  "timeDefinition": {
                                    "type": "string",
                                    "enum": [
                                      "UTC",
                                      "WALL",
                                      "STANDARD"
                                    ]
                                  }
                                }
                              }
                            },
                            "transitions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "dateTimeAfter": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "dateTimeBefore": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "duration": {
                                    "type": "object",
                                    "properties": {
                                      "nano": {
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "negative": {
                                        "type": "boolean"
                                      },
                                      "positive": {
                                        "type": "boolean"
                                      },
                                      "seconds": {
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      "units": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "dateBased": {
                                              "type": "boolean"
                                            },
                                            "durationEstimated": {
                                              "type": "boolean"
                                            },
                                            "timeBased": {
                                              "type": "boolean"
                                            }
                                          }
                                        }
                                      },
                                      "zero": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "gap": {
                                    "type": "boolean"
                                  },
                                  "instant": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "overlap": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "totalSeconds": {
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "second": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "year": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "string",
                      "format": "date-time"
                    }
                  ]
                },
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "fill",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "boolean",
                  "default": true
                },
                "ref": "#/components/schemas/ResourceID"
              }
            },
            {
              "name": "interval",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string",
                  "default": "PT30m"
                },
                "ref": "#/components/schemas/ListString"
              }
            },
            {
              "name": "only",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "object",
                  "properties": {
                    "empty": {
                      "type": "boolean"
                    },
                    "traversableAgain": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            {
              "name": "span",
              "required": false,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string",
                  "default": "PT2m"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "broken",
                "ref": "#/components/schemas/OwnerID"
              }
            },
            {
              "name": "resourceId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "title": "Resource ID",
                  "pattern": "^(app|mysql|postgresql|redis|mongodb|elastisearch)_.*$",
                  "type": "string",
                  "description": "A resource ID (can be an application or an addon as mysql_, postgresql_, redis_, mongodb_ or elasticsearch_.",
                  "example": "app_42cdf0b9-f286-4332-92bf-b71ffebb556c"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "ref": "#/components/schemas/List"
            }
          }
        }
      ],
      "deletedEndpoints": [],
      "modifiedEndpoints": []
    }
  },
  "local-cc-api-v2": {
    "source": {
      "type": "file",
      "id": "local-cc-api-v2",
      "path": "data/endpoints/input/local-cc-api-v2.json",
      "target": "api",
      "pathPrefix": "/v2"
    },
    "date": "2025-04-04T09:09:33.152Z",
    "diff": {
      "hasDiff": true,
      "addedEndpoints": [
        {
          "id": "[GET] /v2/backups/:XXX/:XXX",
          "method": "get",
          "path": "/v2/backups/{ownerId}/{ref}",
          "normalizedPath": "/v2/backups/:XXX/:XXX",
          "operationId": "getBackupsForRef",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ref",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v2/metrics/read/:XXX",
          "method": "get",
          "path": "/v2/metrics/read/{orgaId}",
          "normalizedPath": "/v2/metrics/read/:XXX",
          "operationId": "getMetricsToken",
          "queryParams": [],
          "pathParams": [
            {
              "name": "orgaId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v2/w10tokens/accessLogs/read/:XXX",
          "method": "get",
          "path": "/v2/w10tokens/accessLogs/read/{orgaId}",
          "normalizedPath": "/v2/w10tokens/accessLogs/read/:XXX",
          "operationId": "getWarp10AccessLogsToken",
          "queryParams": [],
          "pathParams": [
            {
              "name": "orgaId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[POST] /v2/users",
          "method": "post",
          "path": "/v2/users",
          "normalizedPath": "/v2/users",
          "operationId": "createUserFromForm",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "invitationKey": {
                        "type": "string"
                      },
                      "addonBetaInvitationKey": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "pass": {
                        "type": "string"
                      },
                      "url_next": {
                        "type": "string"
                      },
                      "terms": {
                        "type": "string"
                      },
                      "subscription_source": {
                        "type": "string"
                      },
                      "clever_flavor": {
                        "type": "string"
                      },
                      "oauth_token": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/logs/:XXX",
          "method": "get",
          "path": "/v2/logs/{appId}",
          "normalizedPath": "/v2/logs/:XXX",
          "operationId": "getOldLogs",
          "queryParams": [
            {
              "name": "after",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "before",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "deployment_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "filter",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "order",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "since",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/logs/:XXX/drains",
          "method": "get",
          "path": "/v2/logs/{appId}/drains",
          "normalizedPath": "/v2/logs/:XXX/drains",
          "operationId": "getDrains",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[POST] /v2/logs/:XXX/drains",
          "method": "post",
          "path": "/v2/logs/{appId}/drains",
          "normalizedPath": "/v2/logs/:XXX/drains",
          "operationId": "createDrain",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {}
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[DELETE] /v2/logs/:XXX/drains/:XXX",
          "method": "delete",
          "path": "/v2/logs/{appId}/drains/{drainId}",
          "normalizedPath": "/v2/logs/:XXX/drains/:XXX",
          "operationId": "deleteDrain",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "drainId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[PUT] /v2/logs/:XXX/drains/:XXX/state",
          "method": "put",
          "path": "/v2/logs/{appId}/drains/{drainId}/state",
          "normalizedPath": "/v2/logs/:XXX/drains/:XXX/state",
          "operationId": "updateDrainState",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "drainId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {}
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[POST] /v2/notifications/webhooks/:XXX",
          "method": "post",
          "path": "/v2/notifications/webhooks/{ownerId}",
          "normalizedPath": "/v2/notifications/webhooks/:XXX",
          "operationId": "createWebhook",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {}
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/notifications/webhooks/:XXX",
          "method": "get",
          "path": "/v2/notifications/webhooks/{ownerId}",
          "normalizedPath": "/v2/notifications/webhooks/:XXX",
          "operationId": "getWebhooks",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[PUT] /v2/notifications/webhooks/:XXX/:XXX",
          "method": "put",
          "path": "/v2/notifications/webhooks/{ownerId}/{id}",
          "normalizedPath": "/v2/notifications/webhooks/:XXX/:XXX",
          "operationId": "editWebhook",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {}
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[DELETE] /v2/notifications/webhooks/:XXX/:XXX",
          "method": "delete",
          "path": "/v2/notifications/webhooks/{ownerId}/{id}",
          "normalizedPath": "/v2/notifications/webhooks/:XXX/:XXX",
          "operationId": "deleteWebhook",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[POST] /v2/notifications/emailhooks/:XXX",
          "method": "post",
          "path": "/v2/notifications/emailhooks/{ownerId}",
          "normalizedPath": "/v2/notifications/emailhooks/:XXX",
          "operationId": "createEmailhook",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {}
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/notifications/emailhooks/:XXX",
          "method": "get",
          "path": "/v2/notifications/emailhooks/{ownerId}",
          "normalizedPath": "/v2/notifications/emailhooks/:XXX",
          "operationId": "getEmailhooks",
          "queryParams": [],
          "pathParams": [
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[PUT] /v2/notifications/emailhooks/:XXX/:XXX",
          "method": "put",
          "path": "/v2/notifications/emailhooks/{ownerId}/{id}",
          "normalizedPath": "/v2/notifications/emailhooks/:XXX/:XXX",
          "operationId": "editEmailhook",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {}
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[DELETE] /v2/notifications/emailhooks/:XXX/:XXX",
          "method": "delete",
          "path": "/v2/notifications/emailhooks/{ownerId}/{id}",
          "normalizedPath": "/v2/notifications/emailhooks/:XXX/:XXX",
          "operationId": "deleteEmailhook",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "ownerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/notifications/info/events",
          "method": "get",
          "path": "/v2/notifications/info/events",
          "normalizedPath": "/v2/notifications/info/events",
          "operationId": "getAvailableEvents",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/notifications/info/webhookformats",
          "method": "get",
          "path": "/v2/notifications/info/webhookformats",
          "normalizedPath": "/v2/notifications/info/webhookformats",
          "operationId": "getWebhookFormats",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/providers/:XXX/:XXX",
          "method": "get",
          "path": "/v2/providers/{providerId}/{addonId}",
          "normalizedPath": "/v2/providers/:XXX/:XXX",
          "operationId": "getAddon",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/providers/es-addon/tmp/services-flavors",
          "method": "get",
          "path": "/v2/providers/es-addon/tmp/services-flavors",
          "normalizedPath": "/v2/providers/es-addon/tmp/services-flavors",
          "operationId": "getEsOptionsFlavors",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v2/saas/heptapod/:XXX/heptapod.host/price-prevision",
          "method": "get",
          "path": "/v2/saas/heptapod/{id}/heptapod.host/price-prevision",
          "normalizedPath": "/v2/saas/heptapod/:XXX/heptapod.host/price-prevision",
          "operationId": "getHeptapodPricePrevision",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        }
      ],
      "deletedEndpoints": [],
      "modifiedEndpoints": []
    }
  },
  "remote-cc-api-v2": {
    "source": {
      "type": "url",
      "id": "remote-cc-api-v2",
      "url": "https://api.clever-cloud.com/v2/openapi.json",
      "target": "api",
      "pathPrefix": "/v2"
    },
    "date": "2025-04-04T09:09:33.152Z",
    "diff": {
      "hasDiff": true,
      "addedEndpoints": [
        {
          "id": "[POST] /v2/authenticate",
          "method": "post",
          "path": "/v2/authenticate",
          "normalizedPath": "/v2/authenticate",
          "operationId": "postAuthenticate",
          "queryParams": [
            {
              "name": "owner",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "verb": {
                        "type": "string"
                      },
                      "uri": {
                        "type": "string"
                      },
                      "authorization": {
                        "type": "string"
                      },
                      "payload": {
                        "type": "string"
                      },
                      "nonce": {
                        "type": "string"
                      },
                      "mac": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[POST] /v2/authorize",
          "method": "post",
          "path": "/v2/authorize",
          "normalizedPath": "/v2/authorize",
          "operationId": "postAuthorize",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "verb": {
                        "type": "string"
                      },
                      "uri": {
                        "type": "string"
                      },
                      "authorization": {
                        "type": "string"
                      },
                      "payload": {
                        "type": "string"
                      },
                      "nonce": {
                        "type": "string"
                      },
                      "mac": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/session/login",
          "method": "get",
          "path": "/v2/session/login",
          "normalizedPath": "/v2/session/login",
          "operationId": "getLoginForm",
          "queryParams": [
            {
              "name": "cli_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "deletionKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "fromAuthorize",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "secondaryEmailKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[POST] /v2/session/login",
          "method": "post",
          "path": "/v2/session/login",
          "normalizedPath": "/v2/session/login",
          "operationId": "login",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "pass": {
                        "type": "string"
                      },
                      "from_authorize": {
                        "type": "string"
                      },
                      "cli_token": {
                        "type": "string"
                      },
                      "oauth_token": {
                        "type": "string"
                      },
                      "partner_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/session/signup",
          "method": "get",
          "path": "/v2/session/signup",
          "normalizedPath": "/v2/session/signup",
          "operationId": "getSignupForm",
          "queryParams": [
            {
              "name": "invitationKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "subscription_source",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "url_next",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/session/from/:XXX/signup",
          "method": "get",
          "path": "/v2/session/from/{subscription_source}/signup",
          "normalizedPath": "/v2/session/from/:XXX/signup",
          "operationId": "getSignupFormForSource",
          "queryParams": [
            {
              "name": "invitationKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "url_next",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "subscription_source",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[POST] /v2/session/mfa_login",
          "method": "post",
          "path": "/v2/session/mfa_login",
          "normalizedPath": "/v2/session/mfa_login",
          "operationId": "mfaLogin",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "mfa_kind": {
                        "type": "string"
                      },
                      "mfa_attempt": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "auth_id": {
                        "type": "string"
                      },
                      "from_authorize": {
                        "type": "string"
                      },
                      "cli_token": {
                        "type": "string"
                      },
                      "oauth_token": {
                        "type": "string"
                      },
                      "partner_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "owner": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "gitUrl": {
                      "type": "string"
                    },
                    "defaultBranch": {
                      "type": "string"
                    },
                    "priv": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/sessions/login",
          "method": "get",
          "path": "/v2/sessions/login",
          "normalizedPath": "/v2/sessions/login",
          "operationId": "getLoginForm_1",
          "queryParams": [
            {
              "name": "cli_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "deletionKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "fromAuthorize",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "secondaryEmailKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[POST] /v2/sessions/login",
          "method": "post",
          "path": "/v2/sessions/login",
          "normalizedPath": "/v2/sessions/login",
          "operationId": "login_1",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "pass": {
                        "type": "string"
                      },
                      "from_authorize": {
                        "type": "string"
                      },
                      "cli_token": {
                        "type": "string"
                      },
                      "oauth_token": {
                        "type": "string"
                      },
                      "partner_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/sessions/signup",
          "method": "get",
          "path": "/v2/sessions/signup",
          "normalizedPath": "/v2/sessions/signup",
          "operationId": "getSignupForm_1",
          "queryParams": [
            {
              "name": "invitationKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "subscription_source",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "url_next",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/sessions/from/:XXX/signup",
          "method": "get",
          "path": "/v2/sessions/from/{subscription_source}/signup",
          "normalizedPath": "/v2/sessions/from/:XXX/signup",
          "operationId": "getSignupFormForSource_1",
          "queryParams": [
            {
              "name": "invitationKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "url_next",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "subscription_source",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[POST] /v2/sessions/mfa_login",
          "method": "post",
          "path": "/v2/sessions/mfa_login",
          "normalizedPath": "/v2/sessions/mfa_login",
          "operationId": "mfaLogin_1",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "mfa_kind": {
                        "type": "string"
                      },
                      "mfa_attempt": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "auth_id": {
                        "type": "string"
                      },
                      "from_authorize": {
                        "type": "string"
                      },
                      "cli_token": {
                        "type": "string"
                      },
                      "oauth_token": {
                        "type": "string"
                      },
                      "partner_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "owner": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "gitUrl": {
                      "type": "string"
                    },
                    "defaultBranch": {
                      "type": "string"
                    },
                    "priv": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/validation/vat/:XXX",
          "method": "get",
          "path": "/v2/validation/vat/{key}",
          "normalizedPath": "/v2/validation/vat/:XXX",
          "operationId": "validate",
          "queryParams": [
            {
              "name": "action",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/github/signup",
          "method": "get",
          "path": "/v2/github/signup",
          "normalizedPath": "/v2/github/signup",
          "operationId": "githubSignup",
          "queryParams": [
            {
              "name": "cli_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "fromAuthorize",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invitationKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "redirectUrl",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "subscriptionSource",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "terms",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[POST] /v2/github/signup",
          "method": "post",
          "path": "/v2/github/signup",
          "normalizedPath": "/v2/github/signup",
          "operationId": "finsihGithubSignup",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "transactionId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "otherId": {
                        "type": "string"
                      },
                      "otherEmail": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "autoLink": {
                        "type": "string"
                      },
                      "terms": {
                        "type": "string"
                      },
                      "invitationKey": {
                        "type": "string"
                      },
                      "mfa_kind": {
                        "type": "string"
                      },
                      "mfa_attempt": {
                        "type": "string"
                      },
                      "partner_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/github/applications",
          "method": "get",
          "path": "/v2/github/applications",
          "normalizedPath": "/v2/github/applications",
          "operationId": "getGithubApplications",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "owner": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "gitUrl": {
                      "type": "string"
                    },
                    "defaultBranch": {
                      "type": "string"
                    },
                    "priv": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/github/emails",
          "method": "get",
          "path": "/v2/github/emails",
          "normalizedPath": "/v2/github/emails",
          "operationId": "getGithubEmails",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/github/keys",
          "method": "get",
          "path": "/v2/github/keys",
          "normalizedPath": "/v2/github/keys",
          "operationId": "getGithubKeys",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "fingerprint": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/github/username",
          "method": "get",
          "path": "/v2/github/username",
          "normalizedPath": "/v2/github/username",
          "operationId": "getGithubUsername",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/github/callback",
          "method": "get",
          "path": "/v2/github/callback",
          "normalizedPath": "/v2/github/callback",
          "operationId": "getGithubCallback",
          "queryParams": [
            {
              "name": "code",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "error",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "error_description",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "error_uri",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "state",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/github/login",
          "method": "get",
          "path": "/v2/github/login",
          "normalizedPath": "/v2/github/login",
          "operationId": "getGithubLogin",
          "queryParams": [
            {
              "name": "cli_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "fromAuthorize",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invitationKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "redirectUrl",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "subscriptionSource",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/github/link",
          "method": "get",
          "path": "/v2/github/link",
          "normalizedPath": "/v2/github/link",
          "operationId": "getGithubLink",
          "queryParams": [
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "redirectUrl",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "transactionId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[DELETE] /v2/github/link",
          "method": "delete",
          "path": "/v2/github/link",
          "normalizedPath": "/v2/github/link",
          "operationId": "deleteGithubLink",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[POST] /v2/github/redeploy",
          "method": "post",
          "path": "/v2/github/redeploy",
          "normalizedPath": "/v2/github/redeploy",
          "operationId": "postGithubRedeploy",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "ref": {
                        "type": "string"
                      },
                      "after": {
                        "type": "string"
                      },
                      "repository": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "sender": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        }
                      },
                      "pusher": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          }
                        }
                      },
                      "head_commit": {
                        "type": "object",
                        "properties": {
                          "sha": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/github",
          "method": "get",
          "path": "/v2/github",
          "normalizedPath": "/v2/github",
          "operationId": "getGithub",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "transactionId": {
                    "type": "string"
                  },
                  "redirectUri": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/OAuthTransactionView"
            }
          }
        },
        {
          "id": "[GET] /v2/oauth/authorize",
          "method": "get",
          "path": "/v2/oauth/authorize",
          "normalizedPath": "/v2/oauth/authorize",
          "operationId": "authorizeForm",
          "queryParams": [
            {
              "name": "ccid",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "cli_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "from_oauth",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[POST] /v2/oauth/authorize",
          "method": "post",
          "path": "/v2/oauth/authorize",
          "normalizedPath": "/v2/oauth/authorize",
          "operationId": "authorizeToken",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "almighty": {
                        "type": "string"
                      },
                      "access_organisations": {
                        "type": "string"
                      },
                      "manage_organisations": {
                        "type": "string"
                      },
                      "manage_organisations_services": {
                        "type": "string"
                      },
                      "manage_organisations_applications": {
                        "type": "string"
                      },
                      "manage_organisations_members": {
                        "type": "string"
                      },
                      "access_organisations_bills": {
                        "type": "string"
                      },
                      "access_organisations_credit_count": {
                        "type": "string"
                      },
                      "access_organisations_consumption_statistics": {
                        "type": "string"
                      },
                      "access_personal_information": {
                        "type": "string"
                      },
                      "manage_personal_information": {
                        "type": "string"
                      },
                      "manage_ssh_keys": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/oauth/rights",
          "method": "get",
          "path": "/v2/oauth/rights",
          "normalizedPath": "/v2/oauth/rights",
          "operationId": "getAvailableRights",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/oauth/login_data",
          "method": "get",
          "path": "/v2/oauth/login_data",
          "normalizedPath": "/v2/oauth/login_data",
          "operationId": "getLoginData",
          "queryParams": [
            {
              "name": "oauth_key",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[POST] /v2/oauth/access_token",
          "method": "post",
          "path": "/v2/oauth/access_token",
          "normalizedPath": "/v2/oauth/access_token",
          "operationId": "postAccessTokenRequest",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "oauth_consumer_key": {
                        "type": "string"
                      },
                      "oauth_token": {
                        "type": "string"
                      },
                      "oauth_signature_method": {
                        "type": "string"
                      },
                      "oauth_signature": {
                        "type": "string"
                      },
                      "oauth_timestamp": {
                        "type": "string"
                      },
                      "oauth_nonce": {
                        "type": "string"
                      },
                      "oauth_version": {
                        "type": "string"
                      },
                      "oauth_verifier": {
                        "type": "string"
                      },
                      "oauth_callback": {
                        "type": "string"
                      },
                      "oauth_token_secret": {
                        "type": "string"
                      },
                      "oauth_callback_confirmed": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": null
        },
        {
          "id": "[POST] /v2/oauth/access_token_query",
          "method": "post",
          "path": "/v2/oauth/access_token_query",
          "normalizedPath": "/v2/oauth/access_token_query",
          "operationId": "postAccessTokenRequestQuery",
          "queryParams": [
            {
              "name": "oauth_callback",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_callback_confirmed",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_consumer_key",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_nonce",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_signature",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_signature_method",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_timestamp",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_token_secret",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_verifier",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_version",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[POST] /v2/oauth/request_token",
          "method": "post",
          "path": "/v2/oauth/request_token",
          "normalizedPath": "/v2/oauth/request_token",
          "operationId": "postReqTokenRequest",
          "queryParams": [
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "oauth_consumer_key": {
                        "type": "string"
                      },
                      "oauth_token": {
                        "type": "string"
                      },
                      "oauth_signature_method": {
                        "type": "string"
                      },
                      "oauth_signature": {
                        "type": "string"
                      },
                      "oauth_timestamp": {
                        "type": "string"
                      },
                      "oauth_nonce": {
                        "type": "string"
                      },
                      "oauth_version": {
                        "type": "string"
                      },
                      "oauth_verifier": {
                        "type": "string"
                      },
                      "oauth_callback": {
                        "type": "string"
                      },
                      "oauth_token_secret": {
                        "type": "string"
                      },
                      "oauth_callback_confirmed": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/x-www-form-urlencoded",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[POST] /v2/oauth/request_token_query",
          "method": "post",
          "path": "/v2/oauth/request_token_query",
          "normalizedPath": "/v2/oauth/request_token_query",
          "operationId": "postReqTokenRequestQueryString",
          "queryParams": [
            {
              "name": "oauth_callback",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_callback_confirmed",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_consumer_key",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_nonce",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_signature",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_signature_method",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_timestamp",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_token_secret",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_verifier",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_version",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/x-www-form-urlencoded",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/oidc/:XXX/callback",
          "method": "get",
          "path": "/v2/oidc/{service}/callback",
          "normalizedPath": "/v2/oidc/:XXX/callback",
          "operationId": "oidcCallback",
          "queryParams": [
            {
              "name": "code",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "error",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "error_description",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "error_uri",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "state",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "service",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/oidc/:XXX/login",
          "method": "get",
          "path": "/v2/oidc/{service}/login",
          "normalizedPath": "/v2/oidc/:XXX/login",
          "operationId": "getOIDCLogin",
          "queryParams": [
            {
              "name": "cli_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "fromAuthorize",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invitationKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "redirectUrl",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "subscriptionSource",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "service",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/oidc/:XXX/signup",
          "method": "get",
          "path": "/v2/oidc/{service}/signup",
          "normalizedPath": "/v2/oidc/:XXX/signup",
          "operationId": "oidcSignup",
          "queryParams": [
            {
              "name": "cli_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "fromAuthorize",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "invitationKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "oauth_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "partnerId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "redirectUrl",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "subscriptionSource",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "terms",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "service",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[POST] /v2/oidc/:XXX/signup",
          "method": "post",
          "path": "/v2/oidc/{service}/signup",
          "normalizedPath": "/v2/oidc/:XXX/signup",
          "operationId": "oidcSignupEnd",
          "queryParams": [],
          "pathParams": [
            {
              "name": "service",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "transactionId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "otherId": {
                        "type": "string"
                      },
                      "otherEmail": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "autoLink": {
                        "type": "string"
                      },
                      "terms": {
                        "type": "string"
                      },
                      "invitationKey": {
                        "type": "string"
                      },
                      "mfa_kind": {
                        "type": "string"
                      },
                      "mfa_attempt": {
                        "type": "string"
                      },
                      "partner_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}",
          "normalizedPath": "/v2/organisations/:XXX",
          "operationId": "getOrganisation",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "billingEmail": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "VAT": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "vatState": {
                    "type": "string",
                    "enum": [
                      "INVALID",
                      "PENDING_VALIDATION",
                      "VALID",
                      "NOT_NEEDED",
                      "NOT_APPLICABLE"
                    ]
                  },
                  "customerFullName": {
                    "type": "string"
                  },
                  "canPay": {
                    "type": "boolean"
                  },
                  "cleverEnterprise": {
                    "type": "boolean"
                  },
                  "emergencyNumber": {
                    "type": "string"
                  },
                  "canSEPA": {
                    "type": "boolean"
                  },
                  "isTrusted": {
                    "type": "boolean"
                  }
                }
              },
              "ref": "#/components/schemas/OrganisationView"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}",
          "normalizedPath": "/v2/organisations/:XXX",
          "operationId": "updateOrganisation",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "company": {
                        "type": "string"
                      },
                      "customerFullName": {
                        "type": "string"
                      },
                      "VAT": {
                        "type": "string"
                      },
                      "billingEmail": {
                        "type": "string"
                      },
                      "contacts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contact_type": {
                              "type": "string",
                              "enum": [
                                "security",
                                "privacy",
                                "abuse"
                              ]
                            },
                            "email_address": {
                              "type": "string"
                            },
                            "phone_number": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "billingEmail": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "VAT": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "vatState": {
                    "type": "string",
                    "enum": [
                      "INVALID",
                      "PENDING_VALIDATION",
                      "VALID",
                      "NOT_NEEDED",
                      "NOT_APPLICABLE"
                    ]
                  },
                  "customerFullName": {
                    "type": "string"
                  },
                  "canPay": {
                    "type": "boolean"
                  },
                  "cleverEnterprise": {
                    "type": "boolean"
                  },
                  "emergencyNumber": {
                    "type": "string"
                  },
                  "canSEPA": {
                    "type": "boolean"
                  },
                  "isTrusted": {
                    "type": "boolean"
                  }
                }
              },
              "ref": "#/components/schemas/OrganisationView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}",
          "normalizedPath": "/v2/organisations/:XXX",
          "operationId": "deleteOrganisation",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/deployments",
          "method": "get",
          "path": "/v2/organisations/{id}/deployments",
          "normalizedPath": "/v2/organisations/:XXX/deployments",
          "operationId": "listOrganisationDeployments",
          "queryParams": [
            {
              "name": "limit",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "empty": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/instances",
          "method": "get",
          "path": "/v2/organisations/{id}/instances",
          "normalizedPath": "/v2/organisations/:XXX/instances",
          "operationId": "listOrganisationInstances",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/namespaces",
          "method": "get",
          "path": "/v2/organisations/{id}/namespaces",
          "normalizedPath": "/v2/organisations/:XXX/namespaces",
          "operationId": "listOrganisationNamespaces",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payment-info",
          "method": "get",
          "path": "/v2/organisations/{id}/payment-info",
          "normalizedPath": "/v2/organisations/:XXX/payment-info",
          "operationId": "getOrganisationPaymentInfo",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "fromOrga": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "vatNumber": {
                    "type": "string"
                  },
                  "errors": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/PaymentInfoView"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/avatar",
          "method": "put",
          "path": "/v2/organisations/{id}/avatar",
          "normalizedPath": "/v2/organisations/:XXX/avatar",
          "operationId": "updateOrganisationAvatar",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "source": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/UrlView"
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/addonproviders/:XXX/testers",
          "method": "post",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/testers",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/testers",
          "operationId": "addBetaTester",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addonproviders/:XXX/features",
          "method": "get",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/features",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/features",
          "operationId": "getProviderFeatures",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "BOOLEAN",
                        "INTERVAL",
                        "FILESIZE",
                        "NUMBER",
                        "PERCENTAGE",
                        "STRING",
                        "OBJECT",
                        "BYTES",
                        "BOOLEAN_SHARED"
                      ]
                    },
                    "name_code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/addonproviders/:XXX/features",
          "method": "post",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/features",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/features",
          "operationId": "addProviderFeature",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "BOOLEAN",
                          "INTERVAL",
                          "FILESIZE",
                          "NUMBER",
                          "PERCENTAGE",
                          "STRING",
                          "OBJECT",
                          "BYTES",
                          "BOOLEAN_SHARED"
                        ]
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "BOOLEAN",
                      "INTERVAL",
                      "FILESIZE",
                      "NUMBER",
                      "PERCENTAGE",
                      "STRING",
                      "OBJECT",
                      "BYTES",
                      "BOOLEAN_SHARED"
                    ]
                  },
                  "name_code": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/AddonFeatureView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addonproviders/:XXX/plans",
          "method": "get",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/plans",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/plans",
          "operationId": "getProviderPlans",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "price_id": {
                      "type": "string"
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "BOOLEAN",
                              "INTERVAL",
                              "FILESIZE",
                              "NUMBER",
                              "PERCENTAGE",
                              "STRING",
                              "OBJECT",
                              "BYTES",
                              "BOOLEAN_SHARED"
                            ]
                          },
                          "value": {
                            "type": "string"
                          },
                          "computable_value": {
                            "type": "string"
                          },
                          "name_code": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "zones": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/addonproviders/:XXX/plans",
          "method": "post",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/plans",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/plans",
          "operationId": "addProviderPlan",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BOOLEAN",
                                "INTERVAL",
                                "FILESIZE",
                                "NUMBER",
                                "PERCENTAGE",
                                "STRING",
                                "OBJECT",
                                "BYTES",
                                "BOOLEAN_SHARED"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "computable_value": {
                              "type": "string"
                            },
                            "name_code": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "price_id": {
                    "type": "string"
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "BOOLEAN",
                            "INTERVAL",
                            "FILESIZE",
                            "NUMBER",
                            "PERCENTAGE",
                            "STRING",
                            "OBJECT",
                            "BYTES",
                            "BOOLEAN_SHARED"
                          ]
                        },
                        "value": {
                          "type": "string"
                        },
                        "computable_value": {
                          "type": "string"
                        },
                        "name_code": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "zones": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonPlanView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addonproviders",
          "method": "get",
          "path": "/v2/organisations/{id}/addonproviders",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders",
          "operationId": "getProvidersInfo",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "website": {
                      "type": "string"
                    },
                    "supportEmail": {
                      "type": "string"
                    },
                    "googlePlusName": {
                      "type": "string"
                    },
                    "twitterName": {
                      "type": "string"
                    },
                    "analyticsId": {
                      "type": "string"
                    },
                    "shortDesc": {
                      "type": "string"
                    },
                    "longDesc": {
                      "type": "string"
                    },
                    "logoUrl": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ALPHA",
                        "BETA_PRIV",
                        "BETA_PUB",
                        "RELEASE",
                        "DELETED"
                      ]
                    },
                    "openInNewTab": {
                      "type": "boolean"
                    },
                    "canUpgrade": {
                      "type": "boolean"
                    },
                    "regions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "plans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "price": {
                            "type": "number"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "features": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "BOOLEAN",
                                    "INTERVAL",
                                    "FILESIZE",
                                    "NUMBER",
                                    "PERCENTAGE",
                                    "STRING",
                                    "OBJECT",
                                    "BYTES",
                                    "BOOLEAN_SHARED"
                                  ]
                                },
                                "value": {
                                  "type": "string"
                                },
                                "computable_value": {
                                  "type": "string"
                                },
                                "name_code": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "zones": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "BOOLEAN",
                              "INTERVAL",
                              "FILESIZE",
                              "NUMBER",
                              "PERCENTAGE",
                              "STRING",
                              "OBJECT",
                              "BYTES",
                              "BOOLEAN_SHARED"
                            ]
                          },
                          "name_code": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/addonproviders",
          "method": "post",
          "path": "/v2/organisations/{id}/addonproviders",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders",
          "operationId": "createProvider",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "api": {
                        "type": "object",
                        "properties": {
                          "config_vars": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "password": {
                            "type": "string"
                          },
                          "sso_salt": {
                            "type": "string"
                          },
                          "regions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "production": {
                            "type": "object",
                            "properties": {
                              "base_url": {
                                "type": "string"
                              },
                              "sso_url": {
                                "type": "string"
                              }
                            }
                          },
                          "test": {
                            "type": "object",
                            "properties": {
                              "base_url": {
                                "type": "string"
                              },
                              "sso_url": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "supportEmail": {
                    "type": "string"
                  },
                  "googlePlusName": {
                    "type": "string"
                  },
                  "twitterName": {
                    "type": "string"
                  },
                  "analyticsId": {
                    "type": "string"
                  },
                  "shortDesc": {
                    "type": "string"
                  },
                  "longDesc": {
                    "type": "string"
                  },
                  "logoUrl": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ALPHA",
                      "BETA_PRIV",
                      "BETA_PUB",
                      "RELEASE",
                      "DELETED"
                    ]
                  },
                  "openInNewTab": {
                    "type": "boolean"
                  },
                  "canUpgrade": {
                    "type": "boolean"
                  },
                  "regions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "plans": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "BOOLEAN",
                                  "INTERVAL",
                                  "FILESIZE",
                                  "NUMBER",
                                  "PERCENTAGE",
                                  "STRING",
                                  "OBJECT",
                                  "BYTES",
                                  "BOOLEAN_SHARED"
                                ]
                              },
                              "value": {
                                "type": "string"
                              },
                              "computable_value": {
                                "type": "string"
                              },
                              "name_code": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "zones": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "BOOLEAN",
                            "INTERVAL",
                            "FILESIZE",
                            "NUMBER",
                            "PERCENTAGE",
                            "STRING",
                            "OBJECT",
                            "BYTES",
                            "BOOLEAN_SHARED"
                          ]
                        },
                        "name_code": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonProviderInfoFullView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addonproviders/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX",
          "operationId": "getProviderInfo",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "supportEmail": {
                    "type": "string"
                  },
                  "googlePlusName": {
                    "type": "string"
                  },
                  "twitterName": {
                    "type": "string"
                  },
                  "analyticsId": {
                    "type": "string"
                  },
                  "shortDesc": {
                    "type": "string"
                  },
                  "longDesc": {
                    "type": "string"
                  },
                  "logoUrl": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ALPHA",
                      "BETA_PRIV",
                      "BETA_PUB",
                      "RELEASE",
                      "DELETED"
                    ]
                  },
                  "openInNewTab": {
                    "type": "boolean"
                  },
                  "canUpgrade": {
                    "type": "boolean"
                  },
                  "regions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonProviderInfoView"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/addonproviders/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX",
          "operationId": "updateProviderInfos",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "website": {
                        "type": "string"
                      },
                      "supportEmail": {
                        "type": "string"
                      },
                      "googlePlusName": {
                        "type": "string"
                      },
                      "twitterName": {
                        "type": "string"
                      },
                      "analyticsId": {
                        "type": "string"
                      },
                      "shortDesc": {
                        "type": "string"
                      },
                      "longDesc": {
                        "type": "string"
                      },
                      "logoUrl": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "supportEmail": {
                    "type": "string"
                  },
                  "googlePlusName": {
                    "type": "string"
                  },
                  "twitterName": {
                    "type": "string"
                  },
                  "analyticsId": {
                    "type": "string"
                  },
                  "shortDesc": {
                    "type": "string"
                  },
                  "longDesc": {
                    "type": "string"
                  },
                  "logoUrl": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ALPHA",
                      "BETA_PRIV",
                      "BETA_PUB",
                      "RELEASE",
                      "DELETED"
                    ]
                  },
                  "openInNewTab": {
                    "type": "boolean"
                  },
                  "canUpgrade": {
                    "type": "boolean"
                  },
                  "regions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonProviderInfoView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/addonproviders/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX",
          "operationId": "deleteProvider",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/addonproviders/:XXX/features/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/features/{featureId}",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/features/:XXX",
          "operationId": "deleteProviderFeature",
          "queryParams": [],
          "pathParams": [
            {
              "name": "featureId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addonproviders/:XXX/plans/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/plans/{planId}",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/plans/:XXX",
          "operationId": "getProviderPlan",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "planId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "price_id": {
                    "type": "string"
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "BOOLEAN",
                            "INTERVAL",
                            "FILESIZE",
                            "NUMBER",
                            "PERCENTAGE",
                            "STRING",
                            "OBJECT",
                            "BYTES",
                            "BOOLEAN_SHARED"
                          ]
                        },
                        "value": {
                          "type": "string"
                        },
                        "computable_value": {
                          "type": "string"
                        },
                        "name_code": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "zones": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonPlanView"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/addonproviders/:XXX/plans/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/plans/{planId}",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/plans/:XXX",
          "operationId": "editProviderPlan",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "planId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BOOLEAN",
                                "INTERVAL",
                                "FILESIZE",
                                "NUMBER",
                                "PERCENTAGE",
                                "STRING",
                                "OBJECT",
                                "BYTES",
                                "BOOLEAN_SHARED"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "computable_value": {
                              "type": "string"
                            },
                            "name_code": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "price_id": {
                    "type": "string"
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "BOOLEAN",
                            "INTERVAL",
                            "FILESIZE",
                            "NUMBER",
                            "PERCENTAGE",
                            "STRING",
                            "OBJECT",
                            "BYTES",
                            "BOOLEAN_SHARED"
                          ]
                        },
                        "value": {
                          "type": "string"
                        },
                        "computable_value": {
                          "type": "string"
                        },
                        "name_code": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "zones": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonPlanView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/addonproviders/:XXX/plans/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/plans/{planId}",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/plans/:XXX",
          "operationId": "deleteProviderPlan",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "planId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/addonproviders/:XXX/plans/:XXX/features/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/plans/{planId}/features/{featureName}",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/plans/:XXX/features/:XXX",
          "operationId": "editProviderPlanFeature",
          "queryParams": [],
          "pathParams": [
            {
              "name": "featureName",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "planId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "BOOLEAN",
                          "INTERVAL",
                          "FILESIZE",
                          "NUMBER",
                          "PERCENTAGE",
                          "STRING",
                          "OBJECT",
                          "BYTES",
                          "BOOLEAN_SHARED"
                        ]
                      },
                      "value": {
                        "type": "string"
                      },
                      "computable_value": {
                        "type": "string"
                      },
                      "name_code": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "price_id": {
                    "type": "string"
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "BOOLEAN",
                            "INTERVAL",
                            "FILESIZE",
                            "NUMBER",
                            "PERCENTAGE",
                            "STRING",
                            "OBJECT",
                            "BYTES",
                            "BOOLEAN_SHARED"
                          ]
                        },
                        "value": {
                          "type": "string"
                        },
                        "computable_value": {
                          "type": "string"
                        },
                        "name_code": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "zones": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonPlanView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/addonproviders/:XXX/plans/:XXX/features/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/plans/{planId}/features/{featureName}",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/plans/:XXX/features/:XXX",
          "operationId": "deleteProviderPlanFeature",
          "queryParams": [],
          "pathParams": [
            {
              "name": "featureName",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "planId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addonproviders/:XXX/tags",
          "method": "get",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/tags",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/tags",
          "operationId": "getProviderTags",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addonproviders/:XXX/sso",
          "method": "get",
          "path": "/v2/organisations/{id}/addonproviders/{providerId}/sso",
          "normalizedPath": "/v2/organisations/:XXX/addonproviders/:XXX/sso",
          "operationId": "getSSODataForOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "providerId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "macaroon": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/AddonProviderSSOData"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/addons/:XXX/tags/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/addons/{addonId}/tags/{tag}",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/tags/:XXX",
          "operationId": "addAddonTagByOrgaAndAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "tag",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/addons/:XXX/tags/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/addons/{addonId}/tags/{tag}",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/tags/:XXX",
          "operationId": "deleteAddonTagByOrgaAndAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "tag",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addons/:XXX/tags",
          "method": "get",
          "path": "/v2/organisations/{id}/addons/{addonId}/tags",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/tags",
          "operationId": "getAddonTagsByOrgaIdAndAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/addons/:XXX/tags",
          "method": "put",
          "path": "/v2/organisations/{id}/addons/{addonId}/tags",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/tags",
          "operationId": "replaceAddonTags",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addons/:XXX/migrations/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}/addons/{addonId}/migrations/{migrationId}",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/migrations/:XXX",
          "operationId": "getAddonMigration",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "migrationId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/addons/:XXX/migrations/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/addons/{addonId}/migrations/{migrationId}",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/migrations/:XXX",
          "operationId": "abortAddonMigration",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "migrationId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addons/:XXX/migrations",
          "method": "get",
          "path": "/v2/organisations/{id}/addons/{addonId}/migrations",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/migrations",
          "operationId": "getAddonMigrations",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/addons/:XXX/migrations",
          "method": "post",
          "path": "/v2/organisations/{id}/addons/{addonId}/migrations",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/migrations",
          "operationId": "changePlanByOrgaAndAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "planId": {
                        "type": "string"
                      },
                      "region": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addons/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}/addons/{addonId}",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX",
          "operationId": "getAddonByOrgaAndAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "realId": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "website": {
                        "type": "string"
                      },
                      "supportEmail": {
                        "type": "string"
                      },
                      "googlePlusName": {
                        "type": "string"
                      },
                      "twitterName": {
                        "type": "string"
                      },
                      "analyticsId": {
                        "type": "string"
                      },
                      "shortDesc": {
                        "type": "string"
                      },
                      "longDesc": {
                        "type": "string"
                      },
                      "logoUrl": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "ALPHA",
                          "BETA_PRIV",
                          "BETA_PUB",
                          "RELEASE",
                          "DELETED"
                        ]
                      },
                      "openInNewTab": {
                        "type": "boolean"
                      },
                      "canUpgrade": {
                        "type": "boolean"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "plan": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BOOLEAN",
                                "INTERVAL",
                                "FILESIZE",
                                "NUMBER",
                                "PERCENTAGE",
                                "STRING",
                                "OBJECT",
                                "BYTES",
                                "BOOLEAN_SHARED"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "computable_value": {
                              "type": "string"
                            },
                            "name_code": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "configKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonView"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/addons/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/addons/{addonId}",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX",
          "operationId": "updateAddonInfo",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "plan",
                      "providerId",
                      "region"
                    ],
                    "type": "object",
                    "properties": {
                      "providerId": {
                        "type": "string",
                        "description": "Id of the add-on provider"
                      },
                      "plan": {
                        "type": "string",
                        "description": "Id of the price plan"
                      },
                      "linkedApp": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the future add-on, for display."
                      },
                      "region": {
                        "type": "string",
                        "description": "Region to provision the add-on in."
                      },
                      "options": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "Options to add to the provision call."
                        },
                        "description": "Options to add to the provision call."
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the add-on"
                      },
                      "paymentIntent": {
                        "type": "object",
                        "properties": {
                          "ownerId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "clientSecret": {
                            "type": "string"
                          },
                          "customer": {
                            "type": "string"
                          }
                        },
                        "description": "PaymentIntent id from Stripe"
                      },
                      "paymentMethodType": {
                        "type": "string",
                        "description": "Payment method type",
                        "enum": [
                          "CREDITCARD",
                          "PAYPAL",
                          "SEPA_DEBIT"
                        ]
                      },
                      "sepaSourceId": {
                        "type": "string",
                        "description": "Id of the SEPA debit source"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "realId": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "website": {
                        "type": "string"
                      },
                      "supportEmail": {
                        "type": "string"
                      },
                      "googlePlusName": {
                        "type": "string"
                      },
                      "twitterName": {
                        "type": "string"
                      },
                      "analyticsId": {
                        "type": "string"
                      },
                      "shortDesc": {
                        "type": "string"
                      },
                      "longDesc": {
                        "type": "string"
                      },
                      "logoUrl": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "ALPHA",
                          "BETA_PRIV",
                          "BETA_PUB",
                          "RELEASE",
                          "DELETED"
                        ]
                      },
                      "openInNewTab": {
                        "type": "boolean"
                      },
                      "canUpgrade": {
                        "type": "boolean"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "plan": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BOOLEAN",
                                "INTERVAL",
                                "FILESIZE",
                                "NUMBER",
                                "PERCENTAGE",
                                "STRING",
                                "OBJECT",
                                "BYTES",
                                "BOOLEAN_SHARED"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "computable_value": {
                              "type": "string"
                            },
                            "name_code": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "configKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/addons/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/addons/{addonId}",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX",
          "operationId": "deprovisionAddonByOrgaAndAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addons/:XXX/env",
          "method": "get",
          "path": "/v2/organisations/{id}/addons/{addonId}/env",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/env",
          "operationId": "getAddonEnvByOrgaAndAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addons/:XXX/instances/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}/addons/{addonId}/instances/{instanceId}",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/instances/:XXX",
          "operationId": "getAddonInstance",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "instanceId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addons/:XXX/instances",
          "method": "get",
          "path": "/v2/organisations/{id}/addons/{addonId}/instances",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/instances",
          "operationId": "getAddonInstances",
          "queryParams": [
            {
              "name": "deploymentId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "withDeleted",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "appId": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "appPort": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "BOOTING",
                        "STARTING",
                        "DEPLOYING",
                        "MIGRATION_IN_PROGRESS",
                        "TASK_IN_PROGRESS",
                        "READY",
                        "UP",
                        "GHOST",
                        "STOPPING",
                        "DELETED"
                      ]
                    },
                    "flavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "commit": {
                      "type": "string"
                    },
                    "deployNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "deployId": {
                      "type": "string"
                    },
                    "instanceNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addons",
          "method": "get",
          "path": "/v2/organisations/{id}/addons",
          "normalizedPath": "/v2/organisations/:XXX/addons",
          "operationId": "getAddonsByOrgaId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "realId": {
                      "type": "string"
                    },
                    "region": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "website": {
                          "type": "string"
                        },
                        "supportEmail": {
                          "type": "string"
                        },
                        "googlePlusName": {
                          "type": "string"
                        },
                        "twitterName": {
                          "type": "string"
                        },
                        "analyticsId": {
                          "type": "string"
                        },
                        "shortDesc": {
                          "type": "string"
                        },
                        "longDesc": {
                          "type": "string"
                        },
                        "logoUrl": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "ALPHA",
                            "BETA_PRIV",
                            "BETA_PUB",
                            "RELEASE",
                            "DELETED"
                          ]
                        },
                        "openInNewTab": {
                          "type": "boolean"
                        },
                        "canUpgrade": {
                          "type": "boolean"
                        },
                        "regions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "plan": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "BOOLEAN",
                                  "INTERVAL",
                                  "FILESIZE",
                                  "NUMBER",
                                  "PERCENTAGE",
                                  "STRING",
                                  "OBJECT",
                                  "BYTES",
                                  "BOOLEAN_SHARED"
                                ]
                              },
                              "value": {
                                "type": "string"
                              },
                              "computable_value": {
                                "type": "string"
                              },
                              "name_code": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "zones": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "configKeys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/addons",
          "method": "post",
          "path": "/v2/organisations/{id}/addons",
          "normalizedPath": "/v2/organisations/:XXX/addons",
          "operationId": "provisionAddonByOrgaId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "plan",
                      "providerId",
                      "region"
                    ],
                    "type": "object",
                    "properties": {
                      "providerId": {
                        "type": "string",
                        "description": "Id of the add-on provider"
                      },
                      "plan": {
                        "type": "string",
                        "description": "Id of the price plan"
                      },
                      "linkedApp": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the future add-on, for display."
                      },
                      "region": {
                        "type": "string",
                        "description": "Region to provision the add-on in."
                      },
                      "options": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "Options to add to the provision call."
                        },
                        "description": "Options to add to the provision call."
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the add-on"
                      },
                      "paymentIntent": {
                        "type": "object",
                        "properties": {
                          "ownerId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "clientSecret": {
                            "type": "string"
                          },
                          "customer": {
                            "type": "string"
                          }
                        },
                        "description": "PaymentIntent id from Stripe"
                      },
                      "paymentMethodType": {
                        "type": "string",
                        "description": "Payment method type",
                        "enum": [
                          "CREDITCARD",
                          "PAYPAL",
                          "SEPA_DEBIT"
                        ]
                      },
                      "sepaSourceId": {
                        "type": "string",
                        "description": "Id of the SEPA debit source"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "realId": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "website": {
                        "type": "string"
                      },
                      "supportEmail": {
                        "type": "string"
                      },
                      "googlePlusName": {
                        "type": "string"
                      },
                      "twitterName": {
                        "type": "string"
                      },
                      "analyticsId": {
                        "type": "string"
                      },
                      "shortDesc": {
                        "type": "string"
                      },
                      "longDesc": {
                        "type": "string"
                      },
                      "logoUrl": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "ALPHA",
                          "BETA_PRIV",
                          "BETA_PUB",
                          "RELEASE",
                          "DELETED"
                        ]
                      },
                      "openInNewTab": {
                        "type": "boolean"
                      },
                      "canUpgrade": {
                        "type": "boolean"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "plan": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BOOLEAN",
                                "INTERVAL",
                                "FILESIZE",
                                "NUMBER",
                                "PERCENTAGE",
                                "STRING",
                                "OBJECT",
                                "BYTES",
                                "BOOLEAN_SHARED"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "computable_value": {
                              "type": "string"
                            },
                            "name_code": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "configKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addons/:XXX/applications",
          "method": "get",
          "path": "/v2/organisations/{id}/addons/{addonId}/applications",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/applications",
          "operationId": "getApplicationsLinkedToAddonByOrgaAndAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "zone": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "deployType": {
                              "type": "string"
                            },
                            "logo": {
                              "type": "string"
                            }
                          }
                        },
                        "minInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxAllowedInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "minFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "maxFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "flavors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mem": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "cpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "gpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "disk": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price": {
                                "type": "number"
                              },
                              "available": {
                                "type": "boolean"
                              },
                              "microservice": {
                                "type": "boolean"
                              },
                              "machine_learning": {
                                "type": "boolean"
                              },
                              "nice": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price_id": {
                                "type": "string"
                              },
                              "memory": {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "number"
                                  },
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cpuFactor": {
                                "type": "number",
                                "format": "double"
                              },
                              "memFactor": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        },
                        "defaultEnv": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "lifetime": {
                          "type": "string",
                          "enum": [
                            "REGULAR",
                            "MIGRATION",
                            "TASK"
                          ]
                        },
                        "instanceAndVersion": {
                          "type": "string"
                        }
                      }
                    },
                    "deployment": {
                      "type": "object",
                      "properties": {
                        "shutdownable": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "GIT",
                            "SFTP",
                            "FTP"
                          ]
                        },
                        "repoState": {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "CREATED",
                            "NOT_NEEDED",
                            "DELETED"
                          ]
                        },
                        "url": {
                          "type": "string"
                        },
                        "httpUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "vhosts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fqdn": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "last_deploy": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "stickySessions": {
                      "type": "boolean"
                    },
                    "homogeneous": {
                      "type": "boolean"
                    },
                    "favourite": {
                      "type": "boolean"
                    },
                    "cancelOnPush": {
                      "type": "boolean"
                    },
                    "webhookUrl": {
                      "type": "string"
                    },
                    "webhookSecret": {
                      "type": "string"
                    },
                    "separateBuild": {
                      "type": "boolean"
                    },
                    "buildFlavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "SHOULD_BE_UP",
                        "SHOULD_BE_DOWN",
                        "WANTS_TO_BE_UP",
                        "MODERATED",
                        "DEFAULT_OF_PAYMENT"
                      ]
                    },
                    "commitId": {
                      "type": "string"
                    },
                    "appliance": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string"
                    },
                    "forceHttps": {
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ]
                    },
                    "env": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deployUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addons/:XXX/sso",
          "method": "get",
          "path": "/v2/organisations/{id}/addons/{addonId}/sso",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/sso",
          "operationId": "getAddonSSODataForOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "macaroon": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/AddonProviderSSOData"
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/addons/preorders",
          "method": "post",
          "path": "/v2/organisations/{id}/addons/preorders",
          "normalizedPath": "/v2/organisations/:XXX/addons/preorders",
          "operationId": "preorderAddonByOrgaId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "plan",
                      "providerId",
                      "region"
                    ],
                    "type": "object",
                    "properties": {
                      "providerId": {
                        "type": "string",
                        "description": "Id of the add-on provider"
                      },
                      "plan": {
                        "type": "string",
                        "description": "Id of the price plan"
                      },
                      "linkedApp": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the future add-on, for display."
                      },
                      "region": {
                        "type": "string",
                        "description": "Region to provision the add-on in."
                      },
                      "options": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "Options to add to the provision call."
                        },
                        "description": "Options to add to the provision call."
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the add-on"
                      },
                      "paymentIntent": {
                        "type": "object",
                        "properties": {
                          "ownerId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "clientSecret": {
                            "type": "string"
                          },
                          "customer": {
                            "type": "string"
                          }
                        },
                        "description": "PaymentIntent id from Stripe"
                      },
                      "paymentMethodType": {
                        "type": "string",
                        "description": "Payment method type",
                        "enum": [
                          "CREDITCARD",
                          "PAYPAL",
                          "SEPA_DEBIT"
                        ]
                      },
                      "sepaSourceId": {
                        "type": "string",
                        "description": "Id of the SEPA debit source"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "PAID",
                      "CANCELED",
                      "PROCESSING",
                      "FAIL",
                      "REFUNDED",
                      "PENDING",
                      "TEST",
                      "TOBEREFUNDED",
                      "WONTPAY",
                      "PAYMENT_HELD"
                    ]
                  },
                  "emissionDate": {
                    "type": "string"
                  },
                  "paymentDate": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "target": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "vatNumber": {
                    "type": "string"
                  },
                  "fromSubscription": {
                    "type": "boolean"
                  },
                  "lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "subDescription": {
                          "type": "string"
                        },
                        "pack": {
                          "type": "string"
                        },
                        "VAT": {
                          "type": "number"
                        },
                        "price": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "originalTotal": {
                    "type": "number"
                  },
                  "totalHT": {
                    "type": "number"
                  },
                  "totalVAT": {
                    "type": "number"
                  },
                  "totalTTC": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "INVOICE",
                      "CREDITNOTE",
                      "PURCHASE_ORDER",
                      "ADDON_PREORDER"
                    ]
                  },
                  "payingUser": {
                    "type": "object",
                    "properties": {
                      "member": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          },
                          "preferredMFA": {
                            "type": "string",
                            "enum": [
                              "NONE",
                              "TOTP"
                            ]
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "ADMIN",
                          "ACCOUNTING",
                          "DEVELOPER",
                          "MANAGER"
                        ]
                      },
                      "job": {
                        "type": "string"
                      }
                    }
                  },
                  "errorCode": {
                    "type": "string"
                  },
                  "errorShortMsg": {
                    "type": "string"
                  },
                  "errorLongMsg": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "targetId": {
                    "type": "string"
                  },
                  "forId": {
                    "type": "string"
                  },
                  "customerOrderId": {
                    "type": "string"
                  },
                  "customerCostCenter": {
                    "type": "string"
                  },
                  "vatRate": {
                    "type": "number"
                  },
                  "payWhen": {
                    "type": "string",
                    "enum": [
                      "PAY_NOW",
                      "PAY_NEXT_MONTH"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/InvoiceRendering"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/addons/:XXX/migrations/preorders",
          "method": "get",
          "path": "/v2/organisations/{id}/addons/{addonId}/migrations/preorders",
          "normalizedPath": "/v2/organisations/:XXX/addons/:XXX/migrations/preorders",
          "operationId": "preorderMigration",
          "queryParams": [
            {
              "name": "planId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/applications/:XXX/dependencies/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/applications/{appId}/dependencies/{dependencyId}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/dependencies/:XXX",
          "operationId": "addApplicationDependencyByOrgaAndAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "dependencyId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/applications/:XXX/dependencies/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/applications/{appId}/dependencies/{dependencyId}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/dependencies/:XXX",
          "operationId": "deleteApplicationDependencyByOrgaAndAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "dependencyId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/dependencies",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/dependencies",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/dependencies",
          "operationId": "getApplicationDependenciesByOrgaAndAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "zone": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "deployType": {
                              "type": "string"
                            },
                            "logo": {
                              "type": "string"
                            }
                          }
                        },
                        "minInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxAllowedInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "minFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "maxFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "flavors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mem": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "cpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "gpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "disk": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price": {
                                "type": "number"
                              },
                              "available": {
                                "type": "boolean"
                              },
                              "microservice": {
                                "type": "boolean"
                              },
                              "machine_learning": {
                                "type": "boolean"
                              },
                              "nice": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price_id": {
                                "type": "string"
                              },
                              "memory": {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "number"
                                  },
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cpuFactor": {
                                "type": "number",
                                "format": "double"
                              },
                              "memFactor": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        },
                        "defaultEnv": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "lifetime": {
                          "type": "string",
                          "enum": [
                            "REGULAR",
                            "MIGRATION",
                            "TASK"
                          ]
                        },
                        "instanceAndVersion": {
                          "type": "string"
                        }
                      }
                    },
                    "deployment": {
                      "type": "object",
                      "properties": {
                        "shutdownable": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "GIT",
                            "SFTP",
                            "FTP"
                          ]
                        },
                        "repoState": {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "CREATED",
                            "NOT_NEEDED",
                            "DELETED"
                          ]
                        },
                        "url": {
                          "type": "string"
                        },
                        "httpUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "vhosts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fqdn": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "last_deploy": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "stickySessions": {
                      "type": "boolean"
                    },
                    "homogeneous": {
                      "type": "boolean"
                    },
                    "favourite": {
                      "type": "boolean"
                    },
                    "cancelOnPush": {
                      "type": "boolean"
                    },
                    "webhookUrl": {
                      "type": "string"
                    },
                    "webhookSecret": {
                      "type": "string"
                    },
                    "separateBuild": {
                      "type": "boolean"
                    },
                    "buildFlavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "SHOULD_BE_UP",
                        "SHOULD_BE_DOWN",
                        "WANTS_TO_BE_UP",
                        "MODERATED",
                        "DEFAULT_OF_PAYMENT"
                      ]
                    },
                    "commitId": {
                      "type": "string"
                    },
                    "appliance": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string"
                    },
                    "forceHttps": {
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ]
                    },
                    "env": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deployUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/dependencies/env",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/dependencies/env",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/dependencies/env",
          "operationId": "getApplicationDependenciesEnvByOrgaAndAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/dependents",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/dependents",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/dependents",
          "operationId": "getApplicationDependentsByOrgaAndAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "zone": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "deployType": {
                              "type": "string"
                            },
                            "logo": {
                              "type": "string"
                            }
                          }
                        },
                        "minInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxAllowedInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "minFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "maxFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "flavors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mem": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "cpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "gpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "disk": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price": {
                                "type": "number"
                              },
                              "available": {
                                "type": "boolean"
                              },
                              "microservice": {
                                "type": "boolean"
                              },
                              "machine_learning": {
                                "type": "boolean"
                              },
                              "nice": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price_id": {
                                "type": "string"
                              },
                              "memory": {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "number"
                                  },
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cpuFactor": {
                                "type": "number",
                                "format": "double"
                              },
                              "memFactor": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        },
                        "defaultEnv": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "lifetime": {
                          "type": "string",
                          "enum": [
                            "REGULAR",
                            "MIGRATION",
                            "TASK"
                          ]
                        },
                        "instanceAndVersion": {
                          "type": "string"
                        }
                      }
                    },
                    "deployment": {
                      "type": "object",
                      "properties": {
                        "shutdownable": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "GIT",
                            "SFTP",
                            "FTP"
                          ]
                        },
                        "repoState": {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "CREATED",
                            "NOT_NEEDED",
                            "DELETED"
                          ]
                        },
                        "url": {
                          "type": "string"
                        },
                        "httpUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "vhosts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fqdn": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "last_deploy": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "stickySessions": {
                      "type": "boolean"
                    },
                    "homogeneous": {
                      "type": "boolean"
                    },
                    "favourite": {
                      "type": "boolean"
                    },
                    "cancelOnPush": {
                      "type": "boolean"
                    },
                    "webhookUrl": {
                      "type": "string"
                    },
                    "webhookSecret": {
                      "type": "string"
                    },
                    "separateBuild": {
                      "type": "boolean"
                    },
                    "buildFlavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "SHOULD_BE_UP",
                        "SHOULD_BE_DOWN",
                        "WANTS_TO_BE_UP",
                        "MODERATED",
                        "DEFAULT_OF_PAYMENT"
                      ]
                    },
                    "commitId": {
                      "type": "string"
                    },
                    "appliance": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string"
                    },
                    "forceHttps": {
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ]
                    },
                    "env": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deployUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/applications/:XXX/deployments/:XXX/instances",
          "method": "delete",
          "path": "/v2/organisations/{id}/applications/{appId}/deployments/{deploymentId}/instances",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/deployments/:XXX/instances",
          "operationId": "cancelApplicationDeploymentForOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "deploymentId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/deployments/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/deployments/{deploymentId}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/deployments/:XXX",
          "operationId": "getApplicationDeploymentForOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "deploymentId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/deployments",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/deployments",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/deployments",
          "operationId": "getApplicationDeploymentsForOrga",
          "queryParams": [
            {
              "name": "action",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "offset",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "uuid": {
                      "type": "string"
                    },
                    "date": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "TASK_RUNNING",
                        "WIP",
                        "FAIL",
                        "CANCELLED",
                        "OK"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "DEPLOY",
                        "UNDEPLOY",
                        "UPSCALE",
                        "DOWNSCALE",
                        "REPLACE",
                        "CANCEL",
                        "NONE"
                      ]
                    },
                    "commit": {
                      "type": "string"
                    },
                    "cause": {
                      "type": "string"
                    },
                    "instances": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/applications/:XXX/tags/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/applications/{appId}/tags/{tag}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/tags/:XXX",
          "operationId": "addOrganisationApplicationTag",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "tag",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/applications/:XXX/tags/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/applications/{appId}/tags/{tag}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/tags/:XXX",
          "operationId": "removeOrganisationApplicationTag",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "tag",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/tags",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/tags",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/tags",
          "operationId": "listOrganisationApplicationTags",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/applications/:XXX/tags",
          "method": "put",
          "path": "/v2/organisations/{id}/applications/{appId}/tags",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/tags",
          "operationId": "updateOrganisationApplicationTags",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/applications/:XXX/vhosts/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/applications/{appId}/vhosts/{domain}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/vhosts/:XXX",
          "operationId": "addOrganisationApplicationVirtualHost",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "domain",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/applications/:XXX/vhosts/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/applications/{appId}/vhosts/{domain}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/vhosts/:XXX",
          "operationId": "removeOrganisationApplicationVirtualhost",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "domain",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/vhosts/favourite",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/vhosts/favourite",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/vhosts/favourite",
          "operationId": "getOrganisationApplicationFavouriteVirtualHost",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "fqdn": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/VhostView"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/applications/:XXX/vhosts/favourite",
          "method": "put",
          "path": "/v2/organisations/{id}/applications/{appId}/vhosts/favourite",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/vhosts/favourite",
          "operationId": "updateOrganisationApplicationFavouriteVirtualHost",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "fqdn": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "fqdn": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/VhostView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/applications/:XXX/vhosts/favourite",
          "method": "delete",
          "path": "/v2/organisations/{id}/applications/{appId}/vhosts/favourite",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/vhosts/favourite",
          "operationId": "removeOrganisationApplicationFavouriteVirtualHost",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/vhosts",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/vhosts",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/vhosts",
          "operationId": "listOrganisationApplicationVirtualHosts",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "fqdn": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications",
          "method": "get",
          "path": "/v2/organisations/{id}/applications",
          "normalizedPath": "/v2/organisations/:XXX/applications",
          "operationId": "listOrganisationApplications",
          "queryParams": [
            {
              "name": "instanceId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "zone": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "deployType": {
                              "type": "string"
                            },
                            "logo": {
                              "type": "string"
                            }
                          }
                        },
                        "minInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxAllowedInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "minFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "maxFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "flavors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mem": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "cpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "gpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "disk": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price": {
                                "type": "number"
                              },
                              "available": {
                                "type": "boolean"
                              },
                              "microservice": {
                                "type": "boolean"
                              },
                              "machine_learning": {
                                "type": "boolean"
                              },
                              "nice": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price_id": {
                                "type": "string"
                              },
                              "memory": {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "number"
                                  },
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cpuFactor": {
                                "type": "number",
                                "format": "double"
                              },
                              "memFactor": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        },
                        "defaultEnv": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "lifetime": {
                          "type": "string",
                          "enum": [
                            "REGULAR",
                            "MIGRATION",
                            "TASK"
                          ]
                        },
                        "instanceAndVersion": {
                          "type": "string"
                        }
                      }
                    },
                    "deployment": {
                      "type": "object",
                      "properties": {
                        "shutdownable": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "GIT",
                            "SFTP",
                            "FTP"
                          ]
                        },
                        "repoState": {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "CREATED",
                            "NOT_NEEDED",
                            "DELETED"
                          ]
                        },
                        "url": {
                          "type": "string"
                        },
                        "httpUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "vhosts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fqdn": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "last_deploy": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "stickySessions": {
                      "type": "boolean"
                    },
                    "homogeneous": {
                      "type": "boolean"
                    },
                    "favourite": {
                      "type": "boolean"
                    },
                    "cancelOnPush": {
                      "type": "boolean"
                    },
                    "webhookUrl": {
                      "type": "string"
                    },
                    "webhookSecret": {
                      "type": "string"
                    },
                    "separateBuild": {
                      "type": "boolean"
                    },
                    "buildFlavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "SHOULD_BE_UP",
                        "SHOULD_BE_DOWN",
                        "WANTS_TO_BE_UP",
                        "MODERATED",
                        "DEFAULT_OF_PAYMENT"
                      ]
                    },
                    "commitId": {
                      "type": "string"
                    },
                    "appliance": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string"
                    },
                    "forceHttps": {
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ]
                    },
                    "env": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deployUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/applications",
          "method": "post",
          "path": "/v2/organisations/{id}/applications",
          "normalizedPath": "/v2/organisations/:XXX/applications",
          "operationId": "createOrganisationApplication",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "zone": {
                        "type": "string"
                      },
                      "deploy": {
                        "type": "string"
                      },
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "instanceType": {
                        "type": "string"
                      },
                      "instanceVersion": {
                        "type": "string"
                      },
                      "instanceVariant": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "instanceLifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "string"
                      },
                      "maxFlavor": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "archived": {
                        "type": "boolean"
                      },
                      "stickySessions": {
                        "type": "boolean"
                      },
                      "homogeneous": {
                        "type": "boolean"
                      },
                      "favourite": {
                        "type": "boolean"
                      },
                      "cancelOnPush": {
                        "type": "boolean"
                      },
                      "separateBuild": {
                        "type": "boolean"
                      },
                      "buildFlavor": {
                        "type": "string"
                      },
                      "oauthService": {
                        "type": "string"
                      },
                      "oauthAppId": {
                        "type": "string"
                      },
                      "oauthApp": {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "applianceId": {
                        "type": "string"
                      },
                      "branch": {
                        "type": "string"
                      },
                      "forceHttps": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ]
                      },
                      "env": {
                        "type": "object",
                        "properties": {
                          "empty": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/tcpRedirs",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/tcpRedirs",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/tcpRedirs",
          "operationId": "listOrganisationApplicationTCPRedirections",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/applications/:XXX/tcpRedirs",
          "method": "post",
          "path": "/v2/organisations/{id}/applications/{appId}/tcpRedirs",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/tcpRedirs",
          "operationId": "createOrganisationApplicationTCPRedirection",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "namespace": {
                        "type": "string"
                      },
                      "minPort": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "maxPort": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "namespace": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "ref": "#/components/schemas/TcpRedirView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/udpRedirs",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/udpRedirs",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/udpRedirs",
          "operationId": "listOrganisationApplicationUDPRedirections",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/applications/:XXX/udpRedirs",
          "method": "post",
          "path": "/v2/organisations/{id}/applications/{appId}/udpRedirs",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/udpRedirs",
          "operationId": "createOrganisationApplicationUDPRedirection",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "namespace": {
                        "type": "string"
                      },
                      "minPort": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "maxPort": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "namespace": {
                    "type": "string"
                  },
                  "port": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "ref": "#/components/schemas/TcpRedirView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX",
          "operationId": "getOrganisationApplication",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/applications/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/applications/{appId}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX",
          "operationId": "updateOrganisationApplication",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "zone": {
                        "type": "string"
                      },
                      "deploy": {
                        "type": "string"
                      },
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "instanceType": {
                        "type": "string"
                      },
                      "instanceVersion": {
                        "type": "string"
                      },
                      "instanceVariant": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "instanceLifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "string"
                      },
                      "maxFlavor": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "archived": {
                        "type": "boolean"
                      },
                      "stickySessions": {
                        "type": "boolean"
                      },
                      "homogeneous": {
                        "type": "boolean"
                      },
                      "favourite": {
                        "type": "boolean"
                      },
                      "cancelOnPush": {
                        "type": "boolean"
                      },
                      "separateBuild": {
                        "type": "boolean"
                      },
                      "buildFlavor": {
                        "type": "string"
                      },
                      "oauthService": {
                        "type": "string"
                      },
                      "oauthAppId": {
                        "type": "string"
                      },
                      "oauthApp": {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "applianceId": {
                        "type": "string"
                      },
                      "branch": {
                        "type": "string"
                      },
                      "forceHttps": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ]
                      },
                      "env": {
                        "type": "object",
                        "properties": {
                          "empty": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/applications/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/applications/{appId}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX",
          "operationId": "deleteOrganisationApplication",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/env",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/env",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/env",
          "operationId": "listOrganisationApplicationEnvironmentVariables",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/applications/:XXX/env",
          "method": "put",
          "path": "/v2/organisations/{id}/applications/{appId}/env",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/env",
          "operationId": "updateOrganisationApplicationEnvironmentVariables",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/applications/:XXX/env/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/applications/{appId}/env/{envName}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/env/:XXX",
          "operationId": "updateOrganisationApplicationEnvironmentVariable",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "envName",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/applications/:XXX/env/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/applications/{appId}/env/{envName}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/env/:XXX",
          "operationId": "deleteOrganisationApplicationEnvironmentVariable",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "envName",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/addons",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/addons",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/addons",
          "operationId": "listOrganisationApplicationAddons",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "realId": {
                      "type": "string"
                    },
                    "region": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "website": {
                          "type": "string"
                        },
                        "supportEmail": {
                          "type": "string"
                        },
                        "googlePlusName": {
                          "type": "string"
                        },
                        "twitterName": {
                          "type": "string"
                        },
                        "analyticsId": {
                          "type": "string"
                        },
                        "shortDesc": {
                          "type": "string"
                        },
                        "longDesc": {
                          "type": "string"
                        },
                        "logoUrl": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "ALPHA",
                            "BETA_PRIV",
                            "BETA_PUB",
                            "RELEASE",
                            "DELETED"
                          ]
                        },
                        "openInNewTab": {
                          "type": "boolean"
                        },
                        "canUpgrade": {
                          "type": "boolean"
                        },
                        "regions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "plan": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "BOOLEAN",
                                  "INTERVAL",
                                  "FILESIZE",
                                  "NUMBER",
                                  "PERCENTAGE",
                                  "STRING",
                                  "OBJECT",
                                  "BYTES",
                                  "BOOLEAN_SHARED"
                                ]
                              },
                              "value": {
                                "type": "string"
                              },
                              "computable_value": {
                                "type": "string"
                              },
                              "name_code": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "zones": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "configKeys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/applications/:XXX/addons",
          "method": "post",
          "path": "/v2/organisations/{id}/applications/{appId}/addons",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/addons",
          "operationId": "linkOrganisationApplicationAddon",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/branches",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/branches",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/branches",
          "operationId": "listOrganisationApplicationBranches",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/instances/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/instances/{instanceId}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/instances/:XXX",
          "operationId": "getOrganisationApplicationInstance",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "instanceId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/instances",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/instances",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/instances",
          "operationId": "listOrganisationApplicationInstances",
          "queryParams": [
            {
              "name": "deploymentId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "withDeleted",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "appId": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "appPort": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "BOOTING",
                        "STARTING",
                        "DEPLOYING",
                        "MIGRATION_IN_PROGRESS",
                        "TASK_IN_PROGRESS",
                        "READY",
                        "UP",
                        "GHOST",
                        "STOPPING",
                        "DELETED"
                      ]
                    },
                    "flavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "commit": {
                      "type": "string"
                    },
                    "deployNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "deployId": {
                      "type": "string"
                    },
                    "instanceNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/applications/:XXX/instances",
          "method": "post",
          "path": "/v2/organisations/{id}/applications/{appId}/instances",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/instances",
          "operationId": "redeployOrganisationApplication",
          "queryParams": [
            {
              "name": "commit",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "useCache",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/applications/:XXX/instances",
          "method": "delete",
          "path": "/v2/organisations/{id}/applications/{appId}/instances",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/instances",
          "operationId": "stopOrganisationApplication",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/addons/env",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/addons/env",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/addons/env",
          "operationId": "listOrganisationApplicationAddonsEnvironmentVariables",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "provider_id": {
                      "type": "string"
                    },
                    "addon_id": {
                      "type": "string"
                    },
                    "addon_name": {
                      "type": "string"
                    },
                    "env": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/applications/:XXX/exposed_env",
          "method": "get",
          "path": "/v2/organisations/{id}/applications/{appId}/exposed_env",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/exposed_env",
          "operationId": "listOrganisationAppplicationExposedEnvironmentVariables",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/applications/:XXX/exposed_env",
          "method": "put",
          "path": "/v2/organisations/{id}/applications/{appId}/exposed_env",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/exposed_env",
          "operationId": "updateOrganisationApplicationExposedEnvironmentVariables",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/applications/:XXX/tcpRedirs/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/applications/{appId}/tcpRedirs/{sourcePort}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/tcpRedirs/:XXX",
          "operationId": "deleteOrganisationApplicationTCPRedirection",
          "queryParams": [
            {
              "name": "namespace",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "sourcePort",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/applications/:XXX/udpRedirs/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/applications/{appId}/udpRedirs/{sourcePort}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/udpRedirs/:XXX",
          "operationId": "deleteOrganisationApplicationUDPRedirection",
          "queryParams": [
            {
              "name": "namespace",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "sourcePort",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/applications/:XXX/branch",
          "method": "put",
          "path": "/v2/organisations/{id}/applications/{appId}/branch",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/branch",
          "operationId": "updateOrganisationApplicationBranch",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "branch": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/applications/:XXX/buildflavor",
          "method": "put",
          "path": "/v2/organisations/{id}/applications/{appId}/buildflavor",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/buildflavor",
          "operationId": "updateOrganisationApplicationBuildInstanceFlavor",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "flavorName": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/applications/:XXX/addons/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/applications/{appId}/addons/{addonId}",
          "normalizedPath": "/v2/organisations/:XXX/applications/:XXX/addons/:XXX",
          "operationId": "unlinkOrganisationApplicationAddon",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/organisations/:XXX/consumers",
          "method": "get",
          "path": "/v2/organisations/{id}/consumers",
          "normalizedPath": "/v2/organisations/:XXX/consumers",
          "operationId": "listOrganisationConsumers",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "picture": {
                      "type": "string"
                    },
                    "baseUrl": {
                      "type": "string"
                    },
                    "rights": {
                      "type": "object",
                      "properties": {
                        "almighty": {
                          "type": "boolean"
                        },
                        "access_organisations": {
                          "type": "boolean"
                        },
                        "manage_organisations": {
                          "type": "boolean"
                        },
                        "manage_organisations_services": {
                          "type": "boolean"
                        },
                        "manage_organisations_applications": {
                          "type": "boolean"
                        },
                        "manage_organisations_members": {
                          "type": "boolean"
                        },
                        "access_organisations_bills": {
                          "type": "boolean"
                        },
                        "access_organisations_credit_count": {
                          "type": "boolean"
                        },
                        "access_organisations_consumption_statistics": {
                          "type": "boolean"
                        },
                        "access_personal_information": {
                          "type": "boolean"
                        },
                        "manage_personal_information": {
                          "type": "boolean"
                        },
                        "manage_ssh_keys": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/consumers",
          "method": "post",
          "path": "/v2/organisations/{id}/consumers",
          "normalizedPath": "/v2/organisations/:XXX/consumers",
          "operationId": "createOrganisationConsumer",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "picture": {
                        "type": "string"
                      },
                      "baseUrl": {
                        "type": "string"
                      },
                      "rights": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "string"
                  },
                  "baseUrl": {
                    "type": "string"
                  },
                  "rights": {
                    "type": "object",
                    "properties": {
                      "almighty": {
                        "type": "boolean"
                      },
                      "access_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations_services": {
                        "type": "boolean"
                      },
                      "manage_organisations_applications": {
                        "type": "boolean"
                      },
                      "manage_organisations_members": {
                        "type": "boolean"
                      },
                      "access_organisations_bills": {
                        "type": "boolean"
                      },
                      "access_organisations_credit_count": {
                        "type": "boolean"
                      },
                      "access_organisations_consumption_statistics": {
                        "type": "boolean"
                      },
                      "access_personal_information": {
                        "type": "boolean"
                      },
                      "manage_personal_information": {
                        "type": "boolean"
                      },
                      "manage_ssh_keys": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/OAuth1ConsumerView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/consumers/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}/consumers/{key}",
          "normalizedPath": "/v2/organisations/:XXX/consumers/:XXX",
          "operationId": "getOrganisationConsumer",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "string"
                  },
                  "baseUrl": {
                    "type": "string"
                  },
                  "rights": {
                    "type": "object",
                    "properties": {
                      "almighty": {
                        "type": "boolean"
                      },
                      "access_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations_services": {
                        "type": "boolean"
                      },
                      "manage_organisations_applications": {
                        "type": "boolean"
                      },
                      "manage_organisations_members": {
                        "type": "boolean"
                      },
                      "access_organisations_bills": {
                        "type": "boolean"
                      },
                      "access_organisations_credit_count": {
                        "type": "boolean"
                      },
                      "access_organisations_consumption_statistics": {
                        "type": "boolean"
                      },
                      "access_personal_information": {
                        "type": "boolean"
                      },
                      "manage_personal_information": {
                        "type": "boolean"
                      },
                      "manage_ssh_keys": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/OAuth1ConsumerView"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/consumers/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/consumers/{key}",
          "normalizedPath": "/v2/organisations/:XXX/consumers/:XXX",
          "operationId": "updateOrganisationConsumer",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "picture": {
                        "type": "string"
                      },
                      "baseUrl": {
                        "type": "string"
                      },
                      "rights": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "string"
                  },
                  "baseUrl": {
                    "type": "string"
                  },
                  "rights": {
                    "type": "object",
                    "properties": {
                      "almighty": {
                        "type": "boolean"
                      },
                      "access_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations_services": {
                        "type": "boolean"
                      },
                      "manage_organisations_applications": {
                        "type": "boolean"
                      },
                      "manage_organisations_members": {
                        "type": "boolean"
                      },
                      "access_organisations_bills": {
                        "type": "boolean"
                      },
                      "access_organisations_credit_count": {
                        "type": "boolean"
                      },
                      "access_organisations_consumption_statistics": {
                        "type": "boolean"
                      },
                      "access_personal_information": {
                        "type": "boolean"
                      },
                      "manage_personal_information": {
                        "type": "boolean"
                      },
                      "manage_ssh_keys": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/OAuth1ConsumerView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/consumers/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/consumers/{key}",
          "normalizedPath": "/v2/organisations/:XXX/consumers/:XXX",
          "operationId": "deleteOrganisationConsumer",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/organisations/:XXX/consumers/:XXX/secret",
          "method": "get",
          "path": "/v2/organisations/{id}/consumers/{key}/secret",
          "normalizedPath": "/v2/organisations/:XXX/consumers/:XXX/secret",
          "operationId": "getOrganisationConsumerSecret",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "secret": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/SecretView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/credits",
          "method": "get",
          "path": "/v2/organisations/{id}/credits",
          "normalizedPath": "/v2/organisations/:XXX/credits",
          "operationId": "getAmountForOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "ownerId": {
                    "type": "string"
                  },
                  "count": {
                    "type": "number"
                  },
                  "dropPrice": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/DropCountView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/consumptions",
          "method": "get",
          "path": "/v2/organisations/{id}/consumptions",
          "normalizedPath": "/v2/organisations/:XXX/consumptions",
          "operationId": "getConsumptionsForOrga",
          "queryParams": [
            {
              "name": "appId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "for",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "from",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "to",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/members",
          "method": "get",
          "path": "/v2/organisations/{id}/members",
          "normalizedPath": "/v2/organisations/:XXX/members",
          "operationId": "listOrganisationMembers",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "member": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "preferredMFA": {
                          "type": "string",
                          "enum": [
                            "NONE",
                            "TOTP"
                          ]
                        }
                      }
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "NONE",
                        "ADMIN",
                        "ACCOUNTING",
                        "DEVELOPER",
                        "MANAGER"
                      ]
                    },
                    "job": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/members",
          "method": "post",
          "path": "/v2/organisations/{id}/members",
          "normalizedPath": "/v2/organisations/:XXX/members",
          "operationId": "addOrganisationMember",
          "queryParams": [
            {
              "name": "invitationKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string"
                      },
                      "job": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/members/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/members/{userId}",
          "normalizedPath": "/v2/organisations/:XXX/members/:XXX",
          "operationId": "updateOrganisationMember",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "userId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string"
                      },
                      "job": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/members/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/members/{userId}",
          "normalizedPath": "/v2/organisations/:XXX/members/:XXX",
          "operationId": "removeOrganisationMember",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "userId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payments/methods",
          "method": "get",
          "path": "/v2/organisations/{id}/payments/methods",
          "normalizedPath": "/v2/organisations/:XXX/payments/methods",
          "operationId": "getUnpaidInvoicesByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ownerId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "CREDITCARD",
                        "PAYPAL",
                        "SEPA_DEBIT"
                      ]
                    },
                    "token": {
                      "type": "string"
                    },
                    "imageUrl": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "holderName": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    },
                    "expirationDate": {
                      "type": "string"
                    },
                    "isExpired": {
                      "type": "boolean"
                    },
                    "cardType": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "bankCode": {
                      "type": "string"
                    },
                    "branchCode": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "fingerprint": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/payments/methods",
          "method": "post",
          "path": "/v2/organisations/{id}/payments/methods",
          "normalizedPath": "/v2/organisations/:XXX/payments/methods",
          "operationId": "addPaymentMethodByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "NEW_CARD",
                          "EXISTING_CARD"
                        ]
                      },
                      "token": {
                        "type": "string"
                      },
                      "deviceData": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "ownerId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "CREDITCARD",
                      "PAYPAL",
                      "SEPA_DEBIT"
                    ]
                  },
                  "token": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "holderName": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "expirationDate": {
                    "type": "string"
                  },
                  "isExpired": {
                    "type": "boolean"
                  },
                  "cardType": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "bankCode": {
                    "type": "string"
                  },
                  "branchCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "fingerprint": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/PaymentMethodView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payments/billings",
          "method": "get",
          "path": "/v2/organisations/{id}/payments/billings",
          "normalizedPath": "/v2/organisations/:XXX/payments/billings",
          "operationId": "getInvoicesByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PAID",
                        "CANCELED",
                        "PROCESSING",
                        "FAIL",
                        "REFUNDED",
                        "PENDING",
                        "TEST",
                        "TOBEREFUNDED",
                        "WONTPAY",
                        "PAYMENT_HELD"
                      ]
                    },
                    "emissionDate": {
                      "type": "string"
                    },
                    "paymentDate": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "company": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "zipCode": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    },
                    "vatNumber": {
                      "type": "string"
                    },
                    "fromSubscription": {
                      "type": "boolean"
                    },
                    "lines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "subDescription": {
                            "type": "string"
                          },
                          "pack": {
                            "type": "string"
                          },
                          "VAT": {
                            "type": "number"
                          },
                          "price": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "originalTotal": {
                      "type": "number"
                    },
                    "totalHT": {
                      "type": "number"
                    },
                    "totalVAT": {
                      "type": "number"
                    },
                    "totalTTC": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "INVOICE",
                        "CREDITNOTE",
                        "PURCHASE_ORDER",
                        "ADDON_PREORDER"
                      ]
                    },
                    "payingUser": {
                      "type": "object",
                      "properties": {
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "avatar": {
                              "type": "string"
                            },
                            "preferredMFA": {
                              "type": "string",
                              "enum": [
                                "NONE",
                                "TOTP"
                              ]
                            }
                          }
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "NONE",
                            "ADMIN",
                            "ACCOUNTING",
                            "DEVELOPER",
                            "MANAGER"
                          ]
                        },
                        "job": {
                          "type": "string"
                        }
                      }
                    },
                    "errorCode": {
                      "type": "string"
                    },
                    "errorShortMsg": {
                      "type": "string"
                    },
                    "errorLongMsg": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "targetId": {
                      "type": "string"
                    },
                    "forId": {
                      "type": "string"
                    },
                    "customerOrderId": {
                      "type": "string"
                    },
                    "customerCostCenter": {
                      "type": "string"
                    },
                    "vatRate": {
                      "type": "number"
                    },
                    "payWhen": {
                      "type": "string",
                      "enum": [
                        "PAY_NOW",
                        "PAY_NEXT_MONTH"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations/:XXX/payments/billings",
          "method": "post",
          "path": "/v2/organisations/{id}/payments/billings",
          "normalizedPath": "/v2/organisations/:XXX/payments/billings",
          "operationId": "buyDropsByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "packageId": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "coupon": {
                        "type": "string"
                      },
                      "dropQuantity": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "PAID",
                      "CANCELED",
                      "PROCESSING",
                      "FAIL",
                      "REFUNDED",
                      "PENDING",
                      "TEST",
                      "TOBEREFUNDED",
                      "WONTPAY",
                      "PAYMENT_HELD"
                    ]
                  },
                  "emissionDate": {
                    "type": "string"
                  },
                  "paymentDate": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "target": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "vatNumber": {
                    "type": "string"
                  },
                  "fromSubscription": {
                    "type": "boolean"
                  },
                  "lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "subDescription": {
                          "type": "string"
                        },
                        "pack": {
                          "type": "string"
                        },
                        "VAT": {
                          "type": "number"
                        },
                        "price": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "originalTotal": {
                    "type": "number"
                  },
                  "totalHT": {
                    "type": "number"
                  },
                  "totalVAT": {
                    "type": "number"
                  },
                  "totalTTC": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "INVOICE",
                      "CREDITNOTE",
                      "PURCHASE_ORDER",
                      "ADDON_PREORDER"
                    ]
                  },
                  "payingUser": {
                    "type": "object",
                    "properties": {
                      "member": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          },
                          "preferredMFA": {
                            "type": "string",
                            "enum": [
                              "NONE",
                              "TOTP"
                            ]
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "ADMIN",
                          "ACCOUNTING",
                          "DEVELOPER",
                          "MANAGER"
                        ]
                      },
                      "job": {
                        "type": "string"
                      }
                    }
                  },
                  "errorCode": {
                    "type": "string"
                  },
                  "errorShortMsg": {
                    "type": "string"
                  },
                  "errorLongMsg": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "targetId": {
                    "type": "string"
                  },
                  "forId": {
                    "type": "string"
                  },
                  "customerOrderId": {
                    "type": "string"
                  },
                  "customerCostCenter": {
                    "type": "string"
                  },
                  "vatRate": {
                    "type": "number"
                  },
                  "payWhen": {
                    "type": "string",
                    "enum": [
                      "PAY_NOW",
                      "PAY_NEXT_MONTH"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/InvoiceRendering"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payments/billings/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}/payments/billings/{bid}",
          "normalizedPath": "/v2/organisations/:XXX/payments/billings/:XXX",
          "operationId": "getInvoiceByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "PAID",
                      "CANCELED",
                      "PROCESSING",
                      "FAIL",
                      "REFUNDED",
                      "PENDING",
                      "TEST",
                      "TOBEREFUNDED",
                      "WONTPAY",
                      "PAYMENT_HELD"
                    ]
                  },
                  "emissionDate": {
                    "type": "string"
                  },
                  "paymentDate": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "target": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "vatNumber": {
                    "type": "string"
                  },
                  "fromSubscription": {
                    "type": "boolean"
                  },
                  "lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "subDescription": {
                          "type": "string"
                        },
                        "pack": {
                          "type": "string"
                        },
                        "VAT": {
                          "type": "number"
                        },
                        "price": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "originalTotal": {
                    "type": "number"
                  },
                  "totalHT": {
                    "type": "number"
                  },
                  "totalVAT": {
                    "type": "number"
                  },
                  "totalTTC": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "INVOICE",
                      "CREDITNOTE",
                      "PURCHASE_ORDER",
                      "ADDON_PREORDER"
                    ]
                  },
                  "payingUser": {
                    "type": "object",
                    "properties": {
                      "member": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          },
                          "preferredMFA": {
                            "type": "string",
                            "enum": [
                              "NONE",
                              "TOTP"
                            ]
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "ADMIN",
                          "ACCOUNTING",
                          "DEVELOPER",
                          "MANAGER"
                        ]
                      },
                      "job": {
                        "type": "string"
                      }
                    }
                  },
                  "errorCode": {
                    "type": "string"
                  },
                  "errorShortMsg": {
                    "type": "string"
                  },
                  "errorLongMsg": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "targetId": {
                    "type": "string"
                  },
                  "forId": {
                    "type": "string"
                  },
                  "customerOrderId": {
                    "type": "string"
                  },
                  "customerCostCenter": {
                    "type": "string"
                  },
                  "vatRate": {
                    "type": "number"
                  },
                  "payWhen": {
                    "type": "string",
                    "enum": [
                      "PAY_NOW",
                      "PAY_NEXT_MONTH"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/InvoiceRendering"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/payments/billings/:XXX",
          "method": "put",
          "path": "/v2/organisations/{id}/payments/billings/{bid}",
          "normalizedPath": "/v2/organisations/:XXX/payments/billings/:XXX",
          "operationId": "choosePaymentProviderByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "PAYPAL",
                          "CREDITCARD",
                          "COUPON",
                          "BITCOIN",
                          "TRANSFER",
                          "FREE",
                          "SEPA_DEBIT"
                        ]
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/NextInPaymentFlow"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/payments/billings/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/payments/billings/{bid}",
          "normalizedPath": "/v2/organisations/:XXX/payments/billings/:XXX",
          "operationId": "deletePurchaseOrderByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/payments/methods/:XXX",
          "method": "delete",
          "path": "/v2/organisations/{id}/payments/methods/{mId}",
          "normalizedPath": "/v2/organisations/:XXX/payments/methods/:XXX",
          "operationId": "deletePaymentMethodByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "mId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payments/recurring",
          "method": "get",
          "path": "/v2/organisations/{id}/payments/recurring",
          "normalizedPath": "/v2/organisations/:XXX/payments/recurring",
          "operationId": "getRecurrentPaymentByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "avatar": {
                        "type": "string"
                      },
                      "creationDate": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "emailValidated": {
                        "type": "boolean"
                      },
                      "oauthApps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "admin": {
                        "type": "boolean"
                      },
                      "canPay": {
                        "type": "boolean"
                      },
                      "preferredMFA": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "TOTP"
                        ]
                      },
                      "hasPassword": {
                        "type": "boolean"
                      },
                      "partnerId": {
                        "type": "string"
                      },
                      "partnerName": {
                        "type": "string"
                      },
                      "partnerConsoleUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "target": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "identity": {
                        "type": "string"
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "thresholdAmount": {
                    "type": "number"
                  },
                  "monthlyAmount": {
                    "type": "number"
                  },
                  "threshold": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/RecurrentPaymentView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/organisations/:XXX/payments/recurring",
          "method": "delete",
          "path": "/v2/organisations/{id}/payments/recurring",
          "normalizedPath": "/v2/organisations/:XXX/payments/recurring",
          "operationId": "deleteRecurrentPaymentByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payments/methods/default",
          "method": "get",
          "path": "/v2/organisations/{id}/payments/methods/default",
          "normalizedPath": "/v2/organisations/:XXX/payments/methods/default",
          "operationId": "getDefaultMethodByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "ownerId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "CREDITCARD",
                      "PAYPAL",
                      "SEPA_DEBIT"
                    ]
                  },
                  "token": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "holderName": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "expirationDate": {
                    "type": "string"
                  },
                  "isExpired": {
                    "type": "boolean"
                  },
                  "cardType": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "bankCode": {
                    "type": "string"
                  },
                  "branchCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "fingerprint": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/PaymentMethodView"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/payments/methods/default",
          "method": "put",
          "path": "/v2/organisations/{id}/payments/methods/default",
          "normalizedPath": "/v2/organisations/:XXX/payments/methods/default",
          "operationId": "setDefaultMethodByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "NEW_CARD",
                          "EXISTING_CARD"
                        ]
                      },
                      "token": {
                        "type": "string"
                      },
                      "deviceData": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payments/monthlyinvoice",
          "method": "get",
          "path": "/v2/organisations/{id}/payments/monthlyinvoice",
          "normalizedPath": "/v2/organisations/:XXX/payments/monthlyinvoice",
          "operationId": "getMonthlyInvoiceByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payments/methods/newintent",
          "method": "get",
          "path": "/v2/organisations/{id}/payments/methods/newintent",
          "normalizedPath": "/v2/organisations/:XXX/payments/methods/newintent",
          "operationId": "getNewSetupIntentByOrga",
          "queryParams": [
            {
              "name": "type",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "ownerId": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string"
                  },
                  "customer": {
                    "type": "string"
                  }
                },
                "description": "PaymentIntent id from Stripe"
              },
              "ref": "#/components/schemas/SetupIntentView"
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payments/billings/:XXX.pdf",
          "method": "get",
          "path": "/v2/organisations/{id}/payments/billings/{bid}.pdf",
          "normalizedPath": "/v2/organisations/:XXX/payments/billings/:XXX.pdf",
          "operationId": "getPdfInvoiceByOrga",
          "queryParams": [
            {
              "name": "token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/pdf",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payments/tokens/stripe",
          "method": "get",
          "path": "/v2/organisations/{id}/payments/tokens/stripe",
          "normalizedPath": "/v2/organisations/:XXX/payments/tokens/stripe",
          "operationId": "getStripeTokenByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payments/billings/unpaid",
          "method": "get",
          "path": "/v2/organisations/{id}/payments/billings/unpaid",
          "normalizedPath": "/v2/organisations/:XXX/payments/billings/unpaid",
          "operationId": "getUnpaidInvoicesByOrga_1",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PAID",
                        "CANCELED",
                        "PROCESSING",
                        "FAIL",
                        "REFUNDED",
                        "PENDING",
                        "TEST",
                        "TOBEREFUNDED",
                        "WONTPAY",
                        "PAYMENT_HELD"
                      ]
                    },
                    "emissionDate": {
                      "type": "string"
                    },
                    "paymentDate": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "company": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "zipCode": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    },
                    "vatNumber": {
                      "type": "string"
                    },
                    "fromSubscription": {
                      "type": "boolean"
                    },
                    "lines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "subDescription": {
                            "type": "string"
                          },
                          "pack": {
                            "type": "string"
                          },
                          "VAT": {
                            "type": "number"
                          },
                          "price": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "originalTotal": {
                      "type": "number"
                    },
                    "totalHT": {
                      "type": "number"
                    },
                    "totalVAT": {
                      "type": "number"
                    },
                    "totalTTC": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "INVOICE",
                        "CREDITNOTE",
                        "PURCHASE_ORDER",
                        "ADDON_PREORDER"
                      ]
                    },
                    "payingUser": {
                      "type": "object",
                      "properties": {
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "avatar": {
                              "type": "string"
                            },
                            "preferredMFA": {
                              "type": "string",
                              "enum": [
                                "NONE",
                                "TOTP"
                              ]
                            }
                          }
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "NONE",
                            "ADMIN",
                            "ACCOUNTING",
                            "DEVELOPER",
                            "MANAGER"
                          ]
                        },
                        "job": {
                          "type": "string"
                        }
                      }
                    },
                    "errorCode": {
                      "type": "string"
                    },
                    "errorShortMsg": {
                      "type": "string"
                    },
                    "errorLongMsg": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "targetId": {
                      "type": "string"
                    },
                    "forId": {
                      "type": "string"
                    },
                    "customerOrderId": {
                      "type": "string"
                    },
                    "customerCostCenter": {
                      "type": "string"
                    },
                    "vatRate": {
                      "type": "number"
                    },
                    "payWhen": {
                      "type": "string",
                      "enum": [
                        "PAY_NOW",
                        "PAY_NEXT_MONTH"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations/:XXX/payments/fullprice/:XXX",
          "method": "get",
          "path": "/v2/organisations/{id}/payments/fullprice/{price}",
          "normalizedPath": "/v2/organisations/:XXX/payments/fullprice/:XXX",
          "operationId": "getPriceWithTaxByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "price",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "taxFreePrice": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "vatRatio": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "invoicedOwner": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/PriceWithTaxInfo"
            }
          }
        },
        {
          "id": "[PUT] /v2/organisations/:XXX/payments/monthlyinvoice/maxcredit",
          "method": "put",
          "path": "/v2/organisations/{id}/payments/monthlyinvoice/maxcredit",
          "normalizedPath": "/v2/organisations/:XXX/payments/monthlyinvoice/maxcredit",
          "operationId": "setMaxCreditsPerMonthByOrga",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "max": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/organisations",
          "method": "get",
          "path": "/v2/organisations",
          "normalizedPath": "/v2/organisations",
          "operationId": "listOrganisations",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "billingEmail": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "zipcode": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "company": {
                      "type": "string"
                    },
                    "VAT": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "vatState": {
                      "type": "string",
                      "enum": [
                        "INVALID",
                        "PENDING_VALIDATION",
                        "VALID",
                        "NOT_NEEDED",
                        "NOT_APPLICABLE"
                      ]
                    },
                    "customerFullName": {
                      "type": "string"
                    },
                    "canPay": {
                      "type": "boolean"
                    },
                    "cleverEnterprise": {
                      "type": "boolean"
                    },
                    "emergencyNumber": {
                      "type": "string"
                    },
                    "canSEPA": {
                      "type": "boolean"
                    },
                    "isTrusted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/organisations",
          "method": "post",
          "path": "/v2/organisations",
          "normalizedPath": "/v2/organisations",
          "operationId": "createOrganisation",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "company": {
                        "type": "string"
                      },
                      "customerFullName": {
                        "type": "string"
                      },
                      "VAT": {
                        "type": "string"
                      },
                      "billingEmail": {
                        "type": "string"
                      },
                      "contacts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "contact_type": {
                              "type": "string",
                              "enum": [
                                "security",
                                "privacy",
                                "abuse"
                              ]
                            },
                            "email_address": {
                              "type": "string"
                            },
                            "phone_number": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "billingEmail": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "VAT": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "vatState": {
                    "type": "string",
                    "enum": [
                      "INVALID",
                      "PENDING_VALIDATION",
                      "VALID",
                      "NOT_NEEDED",
                      "NOT_APPLICABLE"
                    ]
                  },
                  "customerFullName": {
                    "type": "string"
                  },
                  "canPay": {
                    "type": "boolean"
                  },
                  "cleverEnterprise": {
                    "type": "boolean"
                  },
                  "emergencyNumber": {
                    "type": "string"
                  },
                  "canSEPA": {
                    "type": "boolean"
                  },
                  "isTrusted": {
                    "type": "boolean"
                  }
                }
              },
              "ref": "#/components/schemas/OrganisationView"
            }
          }
        },
        {
          "id": "[PUT] /v2/invoice/external/paypal/:XXX",
          "method": "put",
          "path": "/v2/invoice/external/paypal/{bid}",
          "normalizedPath": "/v2/invoice/external/paypal/:XXX",
          "operationId": "authorizePaypalTransaction",
          "queryParams": [],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "*/*": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "NEW_CARD",
                          "EXISTING_CARD"
                        ]
                      },
                      "token": {
                        "type": "string"
                      },
                      "deviceData": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[DELETE] /v2/invoice/external/paypal/:XXX",
          "method": "delete",
          "path": "/v2/invoice/external/paypal/{bid}",
          "normalizedPath": "/v2/invoice/external/paypal/:XXX",
          "operationId": "cancelPaypalTransaction",
          "queryParams": [],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[POST] /v2/invoice/external/:XXX",
          "method": "post",
          "path": "/v2/invoice/external/{bid}",
          "normalizedPath": "/v2/invoice/external/:XXX",
          "operationId": "updateInvoice",
          "queryParams": [],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "*/*": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "posData": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "new",
                          "paid",
                          "confirmed",
                          "complete",
                          "expired",
                          "invalid"
                        ]
                      },
                      "btcPrice": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number",
                        "format": "double"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "invoiceTime": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "currentTime": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "expirationTime": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "error": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "messages": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[POST] /v2/vendor/apps/:XXX/consumptions",
          "method": "post",
          "path": "/v2/vendor/apps/{addonId}/consumptions",
          "normalizedPath": "/v2/vendor/apps/:XXX/consumptions",
          "operationId": "billOwner",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "cost": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/vendor/apps/:XXX",
          "method": "get",
          "path": "/v2/vendor/apps/{addonId}",
          "normalizedPath": "/v2/vendor/apps/:XXX",
          "operationId": "getApplicationInfo",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "config": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "callback_url": {
                    "type": "string"
                  },
                  "owner_email": {
                    "type": "string"
                  },
                  "owner_id": {
                    "type": "string"
                  },
                  "owner_name": {
                    "type": "string"
                  },
                  "owner_emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "region": {
                    "type": "string"
                  },
                  "domains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonApplicationInfo"
            }
          }
        },
        {
          "id": "[PUT] /v2/vendor/apps/:XXX",
          "method": "put",
          "path": "/v2/vendor/apps/{addonId}",
          "normalizedPath": "/v2/vendor/apps/:XXX",
          "operationId": "editApplicationConfiguration",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "config": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "realId": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "website": {
                        "type": "string"
                      },
                      "supportEmail": {
                        "type": "string"
                      },
                      "googlePlusName": {
                        "type": "string"
                      },
                      "twitterName": {
                        "type": "string"
                      },
                      "analyticsId": {
                        "type": "string"
                      },
                      "shortDesc": {
                        "type": "string"
                      },
                      "longDesc": {
                        "type": "string"
                      },
                      "logoUrl": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "ALPHA",
                          "BETA_PRIV",
                          "BETA_PUB",
                          "RELEASE",
                          "DELETED"
                        ]
                      },
                      "openInNewTab": {
                        "type": "boolean"
                      },
                      "canUpgrade": {
                        "type": "boolean"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "plan": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BOOLEAN",
                                "INTERVAL",
                                "FILESIZE",
                                "NUMBER",
                                "PERCENTAGE",
                                "STRING",
                                "OBJECT",
                                "BYTES",
                                "BOOLEAN_SHARED"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "computable_value": {
                              "type": "string"
                            },
                            "name_code": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "configKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonView"
            }
          }
        },
        {
          "id": "[PUT] /v2/vendor/apps/:XXX/migration_callback",
          "method": "put",
          "path": "/v2/vendor/apps/{addonId}/migration_callback",
          "normalizedPath": "/v2/vendor/apps/:XXX/migration_callback",
          "operationId": "endAddonMigration",
          "queryParams": [
            {
              "name": "plan_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "region",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "config": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "realId": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "website": {
                        "type": "string"
                      },
                      "supportEmail": {
                        "type": "string"
                      },
                      "googlePlusName": {
                        "type": "string"
                      },
                      "twitterName": {
                        "type": "string"
                      },
                      "analyticsId": {
                        "type": "string"
                      },
                      "shortDesc": {
                        "type": "string"
                      },
                      "longDesc": {
                        "type": "string"
                      },
                      "logoUrl": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "ALPHA",
                          "BETA_PRIV",
                          "BETA_PUB",
                          "RELEASE",
                          "DELETED"
                        ]
                      },
                      "openInNewTab": {
                        "type": "boolean"
                      },
                      "canUpgrade": {
                        "type": "boolean"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "plan": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BOOLEAN",
                                "INTERVAL",
                                "FILESIZE",
                                "NUMBER",
                                "PERCENTAGE",
                                "STRING",
                                "OBJECT",
                                "BYTES",
                                "BOOLEAN_SHARED"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "computable_value": {
                              "type": "string"
                            },
                            "name_code": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "configKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonView"
            }
          }
        },
        {
          "id": "[GET] /v2/vendor/apps",
          "method": "get",
          "path": "/v2/vendor/apps",
          "normalizedPath": "/v2/vendor/apps",
          "operationId": "listApps",
          "queryParams": [
            {
              "name": "offset",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "provider_id": {
                      "type": "string"
                    },
                    "heroku_id": {
                      "type": "string"
                    },
                    "addon_id": {
                      "type": "string"
                    },
                    "callback_url": {
                      "type": "string"
                    },
                    "plan": {
                      "type": "string"
                    },
                    "owner_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/vendor/apps/:XXX/logscollector",
          "method": "get",
          "path": "/v2/vendor/apps/{addonId}/logscollector",
          "normalizedPath": "/v2/vendor/apps/:XXX/logscollector",
          "operationId": "logscollector",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[POST] /v2/vendor/addons",
          "method": "post",
          "path": "/v2/vendor/addons",
          "normalizedPath": "/v2/vendor/addons",
          "operationId": "provisionOtherAddon",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "organisationId": {
                        "type": "string"
                      },
                      "userId": {
                        "type": "string"
                      },
                      "providerId": {
                        "type": "string"
                      },
                      "addonId": {
                        "type": "string"
                      },
                      "plan": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "region": {
                        "type": "string"
                      },
                      "options": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/application/:XXX/environment",
          "method": "get",
          "path": "/v2/application/{appId}/environment",
          "normalizedPath": "/v2/application/:XXX/environment",
          "operationId": "getEnv",
          "queryParams": [
            {
              "name": "token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/application/:XXX/environment",
          "method": "put",
          "path": "/v2/application/{appId}/environment",
          "normalizedPath": "/v2/application/:XXX/environment",
          "operationId": "updateEnv",
          "queryParams": [
            {
              "name": "token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/newsfeeds/blog",
          "method": "get",
          "path": "/v2/newsfeeds/blog",
          "normalizedPath": "/v2/newsfeeds/blog",
          "operationId": "getBlogFeed",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/newsfeeds/engineering",
          "method": "get",
          "path": "/v2/newsfeeds/engineering",
          "normalizedPath": "/v2/newsfeeds/engineering",
          "operationId": "getEngineeringFeed",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/password_forgotten",
          "method": "get",
          "path": "/v2/password_forgotten",
          "normalizedPath": "/v2/password_forgotten",
          "operationId": "getPasswordForgottenForm",
          "queryParams": [
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[POST] /v2/password_forgotten",
          "method": "post",
          "path": "/v2/password_forgotten",
          "normalizedPath": "/v2/password_forgotten",
          "operationId": "askForPasswordResetViaForm",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "login": {
                        "type": "string"
                      },
                      "drop_tokens": {
                        "type": "string"
                      },
                      "partner_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/password_forgotten/:XXX",
          "method": "get",
          "path": "/v2/password_forgotten/{key}",
          "normalizedPath": "/v2/password_forgotten/:XXX",
          "operationId": "confirmPasswordResetRequest",
          "queryParams": [
            {
              "name": "partner_id",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[POST] /v2/password_forgotten/:XXX",
          "method": "post",
          "path": "/v2/password_forgotten/{key}",
          "normalizedPath": "/v2/password_forgotten/:XXX",
          "operationId": "resetPasswordForgotten",
          "queryParams": [],
          "pathParams": [
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "pass": {
                        "type": "string"
                      },
                      "pass2": {
                        "type": "string"
                      },
                      "partner_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "text/html",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/payments/:XXX/end/stripe",
          "method": "put",
          "path": "/v2/payments/{bid}/end/stripe",
          "normalizedPath": "/v2/payments/:XXX/end/stripe",
          "operationId": "updateStripePayment",
          "queryParams": [],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "ownerId": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "clientSecret": {
                        "type": "string"
                      },
                      "customer": {
                        "type": "string"
                      }
                    },
                    "description": "PaymentIntent id from Stripe"
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "PAID",
                      "CANCELED",
                      "PROCESSING",
                      "FAIL",
                      "REFUNDED",
                      "PENDING",
                      "TEST",
                      "TOBEREFUNDED",
                      "WONTPAY",
                      "PAYMENT_HELD"
                    ]
                  },
                  "emissionDate": {
                    "type": "string"
                  },
                  "paymentDate": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "target": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "vatNumber": {
                    "type": "string"
                  },
                  "fromSubscription": {
                    "type": "boolean"
                  },
                  "lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "subDescription": {
                          "type": "string"
                        },
                        "pack": {
                          "type": "string"
                        },
                        "VAT": {
                          "type": "number"
                        },
                        "price": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "originalTotal": {
                    "type": "number"
                  },
                  "totalHT": {
                    "type": "number"
                  },
                  "totalVAT": {
                    "type": "number"
                  },
                  "totalTTC": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "INVOICE",
                      "CREDITNOTE",
                      "PURCHASE_ORDER",
                      "ADDON_PREORDER"
                    ]
                  },
                  "payingUser": {
                    "type": "object",
                    "properties": {
                      "member": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          },
                          "preferredMFA": {
                            "type": "string",
                            "enum": [
                              "NONE",
                              "TOTP"
                            ]
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "ADMIN",
                          "ACCOUNTING",
                          "DEVELOPER",
                          "MANAGER"
                        ]
                      },
                      "job": {
                        "type": "string"
                      }
                    }
                  },
                  "errorCode": {
                    "type": "string"
                  },
                  "errorShortMsg": {
                    "type": "string"
                  },
                  "errorLongMsg": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "targetId": {
                    "type": "string"
                  },
                  "forId": {
                    "type": "string"
                  },
                  "customerOrderId": {
                    "type": "string"
                  },
                  "customerCostCenter": {
                    "type": "string"
                  },
                  "vatRate": {
                    "type": "number"
                  },
                  "payWhen": {
                    "type": "string",
                    "enum": [
                      "PAY_NOW",
                      "PAY_NEXT_MONTH"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/InvoiceRendering"
            }
          }
        },
        {
          "id": "[POST] /v2/payments/:XXX/end/stripe",
          "method": "post",
          "path": "/v2/payments/{bid}/end/stripe",
          "normalizedPath": "/v2/payments/:XXX/end/stripe",
          "operationId": "endPaymentWithStripe",
          "queryParams": [],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "NEW_CARD",
                          "EXISTING_CARD"
                        ]
                      },
                      "token": {
                        "type": "string"
                      },
                      "deviceData": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/payments/providers",
          "method": "get",
          "path": "/v2/payments/providers",
          "normalizedPath": "/v2/payments/providers",
          "operationId": "getAvailablePaymentProviders",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/payments/coupons/:XXX",
          "method": "get",
          "path": "/v2/payments/coupons/{name}",
          "normalizedPath": "/v2/payments/coupons/:XXX",
          "operationId": "getCoupon",
          "queryParams": [],
          "pathParams": [
            {
              "name": "name",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/payments/assets/pay_button/:XXX/button.png",
          "method": "get",
          "path": "/v2/payments/assets/pay_button/{token}/button.png",
          "normalizedPath": "/v2/payments/assets/pay_button/:XXX/button.png",
          "operationId": "getInvoiceStatusButton",
          "queryParams": [],
          "pathParams": [
            {
              "name": "token",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "image/png",
            "type": {
              "type": "not-broken",
              "schema": {}
            }
          }
        },
        {
          "id": "[GET] /v2/payments/tokens/stripe",
          "method": "get",
          "path": "/v2/payments/tokens/stripe",
          "normalizedPath": "/v2/payments/tokens/stripe",
          "operationId": "getStripeToken",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[POST] /v2/payments/webhooks/stripe/sepa",
          "method": "post",
          "path": "/v2/payments/webhooks/stripe/sepa",
          "normalizedPath": "/v2/payments/webhooks/stripe/sepa",
          "operationId": "stripeSepaWebhook",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/products/addonproviders/:XXX",
          "method": "get",
          "path": "/v2/products/addonproviders/{provider_id}",
          "normalizedPath": "/v2/products/addonproviders/:XXX",
          "operationId": "getAddonProvider",
          "queryParams": [
            {
              "name": "orgaId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "provider_id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "supportEmail": {
                    "type": "string"
                  },
                  "googlePlusName": {
                    "type": "string"
                  },
                  "twitterName": {
                    "type": "string"
                  },
                  "analyticsId": {
                    "type": "string"
                  },
                  "shortDesc": {
                    "type": "string"
                  },
                  "longDesc": {
                    "type": "string"
                  },
                  "logoUrl": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "ALPHA",
                      "BETA_PRIV",
                      "BETA_PUB",
                      "RELEASE",
                      "DELETED"
                    ]
                  },
                  "openInNewTab": {
                    "type": "boolean"
                  },
                  "canUpgrade": {
                    "type": "boolean"
                  },
                  "regions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "plans": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "BOOLEAN",
                                  "INTERVAL",
                                  "FILESIZE",
                                  "NUMBER",
                                  "PERCENTAGE",
                                  "STRING",
                                  "OBJECT",
                                  "BYTES",
                                  "BOOLEAN_SHARED"
                                ]
                              },
                              "value": {
                                "type": "string"
                              },
                              "computable_value": {
                                "type": "string"
                              },
                              "name_code": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "zones": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "BOOLEAN",
                            "INTERVAL",
                            "FILESIZE",
                            "NUMBER",
                            "PERCENTAGE",
                            "STRING",
                            "OBJECT",
                            "BYTES",
                            "BOOLEAN_SHARED"
                          ]
                        },
                        "name_code": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonProviderInfoFullView"
            }
          }
        },
        {
          "id": "[GET] /v2/products/addonproviders/:XXX/informations",
          "method": "get",
          "path": "/v2/products/addonproviders/{provider_id}/informations",
          "normalizedPath": "/v2/products/addonproviders/:XXX/informations",
          "operationId": "getAddonProviderInfos",
          "queryParams": [],
          "pathParams": [
            {
              "name": "provider_id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/products/addonproviders/:XXX/versions",
          "method": "get",
          "path": "/v2/products/addonproviders/{provider_id}/versions",
          "normalizedPath": "/v2/products/addonproviders/:XXX/versions",
          "operationId": "getAddonProviderVersions",
          "queryParams": [],
          "pathParams": [
            {
              "name": "provider_id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/products/addonproviders",
          "method": "get",
          "path": "/v2/products/addonproviders",
          "normalizedPath": "/v2/products/addonproviders",
          "operationId": "getAddonProviders",
          "queryParams": [
            {
              "name": "orgaId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "website": {
                      "type": "string"
                    },
                    "supportEmail": {
                      "type": "string"
                    },
                    "googlePlusName": {
                      "type": "string"
                    },
                    "twitterName": {
                      "type": "string"
                    },
                    "analyticsId": {
                      "type": "string"
                    },
                    "shortDesc": {
                      "type": "string"
                    },
                    "longDesc": {
                      "type": "string"
                    },
                    "logoUrl": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "ALPHA",
                        "BETA_PRIV",
                        "BETA_PUB",
                        "RELEASE",
                        "DELETED"
                      ]
                    },
                    "openInNewTab": {
                      "type": "boolean"
                    },
                    "canUpgrade": {
                      "type": "boolean"
                    },
                    "regions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "plans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "price": {
                            "type": "number"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "features": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "BOOLEAN",
                                    "INTERVAL",
                                    "FILESIZE",
                                    "NUMBER",
                                    "PERCENTAGE",
                                    "STRING",
                                    "OBJECT",
                                    "BYTES",
                                    "BOOLEAN_SHARED"
                                  ]
                                },
                                "value": {
                                  "type": "string"
                                },
                                "computable_value": {
                                  "type": "string"
                                },
                                "name_code": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "zones": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "BOOLEAN",
                              "INTERVAL",
                              "FILESIZE",
                              "NUMBER",
                              "PERCENTAGE",
                              "STRING",
                              "OBJECT",
                              "BYTES",
                              "BOOLEAN_SHARED"
                            ]
                          },
                          "name_code": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/products/instances",
          "method": "get",
          "path": "/v2/products/instances",
          "normalizedPath": "/v2/products/instances",
          "operationId": "getAvailableInstances",
          "queryParams": [
            {
              "name": "for",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "variant": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "deployType": {
                          "type": "string"
                        },
                        "logo": {
                          "type": "string"
                        }
                      }
                    },
                    "description": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "comingSoon": {
                      "type": "boolean"
                    },
                    "maxInstances": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "deployments": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "flavors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      }
                    },
                    "defaultFlavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "buildFlavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/products/packages",
          "method": "get",
          "path": "/v2/products/packages",
          "normalizedPath": "/v2/products/packages",
          "operationId": "getAvailablePackages",
          "queryParams": [
            {
              "name": "coupon",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "currency",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "orgaId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "dropsQuantity": {
                      "type": "number"
                    },
                    "dropPrice": {
                      "type": "object",
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "value": {
                          "type": "number"
                        }
                      }
                    },
                    "title": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "originalPrice": {
                      "type": "number"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/products/countries",
          "method": "get",
          "path": "/v2/products/countries",
          "normalizedPath": "/v2/products/countries",
          "operationId": "getCountries",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/products/countrycodes",
          "method": "get",
          "path": "/v2/products/countrycodes",
          "normalizedPath": "/v2/products/countrycodes",
          "operationId": "getCountryCodes",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/products/prices",
          "method": "get",
          "path": "/v2/products/prices",
          "normalizedPath": "/v2/products/prices",
          "operationId": "getExcahngeRates",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "value": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/products/flavors",
          "method": "get",
          "path": "/v2/products/flavors",
          "normalizedPath": "/v2/products/flavors",
          "operationId": "getFlavors",
          "queryParams": [
            {
              "name": "context",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "mem": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "cpus": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "gpus": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "disk": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "price": {
                      "type": "number"
                    },
                    "available": {
                      "type": "boolean"
                    },
                    "microservice": {
                      "type": "boolean"
                    },
                    "machine_learning": {
                      "type": "boolean"
                    },
                    "nice": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "price_id": {
                      "type": "string"
                    },
                    "memory": {
                      "type": "object",
                      "properties": {
                        "unit": {
                          "type": "string"
                        },
                        "value": {
                          "type": "number"
                        },
                        "formatted": {
                          "type": "string"
                        }
                      }
                    },
                    "cpuFactor": {
                      "type": "number",
                      "format": "double"
                    },
                    "memFactor": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/products/instances/:XXX-:XXX",
          "method": "get",
          "path": "/v2/products/instances/{type}-{version}",
          "normalizedPath": "/v2/products/instances/:XXX-:XXX",
          "operationId": "getInstance",
          "queryParams": [
            {
              "name": "app",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "for",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "type",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "pattern": "[^-]+",
                  "type": "string"
                }
              }
            },
            {
              "name": "version",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "variant": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "deployType": {
                        "type": "string"
                      },
                      "logo": {
                        "type": "string"
                      }
                    }
                  },
                  "description": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "comingSoon": {
                    "type": "boolean"
                  },
                  "maxInstances": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "deployments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "flavors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    }
                  },
                  "defaultFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AvailableInstanceView"
            }
          }
        },
        {
          "id": "[GET] /v2/products/mfa_kinds",
          "method": "get",
          "path": "/v2/products/mfa_kinds",
          "normalizedPath": "/v2/products/mfa_kinds",
          "operationId": "getMFAKinds",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/products/zones",
          "method": "get",
          "path": "/v2/products/zones",
          "normalizedPath": "/v2/products/zones",
          "operationId": "getZones",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "internal": {
                      "type": "boolean"
                    },
                    "correspondingRegion": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/vat_check",
          "method": "get",
          "path": "/v2/vat_check",
          "normalizedPath": "/v2/vat_check",
          "operationId": "checkVat",
          "queryParams": [
            {
              "name": "country",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "vat",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "valid": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/VatResult"
            }
          }
        },
        {
          "id": "[GET] /v2/users/:XXX",
          "method": "get",
          "path": "/v2/users/{id}",
          "normalizedPath": "/v2/users/:XXX",
          "operationId": "getUser",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "lang": {
                    "type": "string"
                  },
                  "emailValidated": {
                    "type": "boolean"
                  },
                  "oauthApps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "admin": {
                    "type": "boolean"
                  },
                  "canPay": {
                    "type": "boolean"
                  },
                  "preferredMFA": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "TOTP"
                    ]
                  },
                  "hasPassword": {
                    "type": "boolean"
                  },
                  "partnerId": {
                    "type": "string"
                  },
                  "partnerName": {
                    "type": "string"
                  },
                  "partnerConsoleUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/UserView"
            }
          }
        },
        {
          "id": "[GET] /v2/users/:XXX/applications",
          "method": "get",
          "path": "/v2/users/{id}/applications",
          "normalizedPath": "/v2/users/:XXX/applications",
          "operationId": "listUserApplications",
          "queryParams": [],
          "pathParams": [
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "zone": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "deployType": {
                              "type": "string"
                            },
                            "logo": {
                              "type": "string"
                            }
                          }
                        },
                        "minInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxAllowedInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "minFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "maxFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "flavors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mem": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "cpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "gpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "disk": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price": {
                                "type": "number"
                              },
                              "available": {
                                "type": "boolean"
                              },
                              "microservice": {
                                "type": "boolean"
                              },
                              "machine_learning": {
                                "type": "boolean"
                              },
                              "nice": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price_id": {
                                "type": "string"
                              },
                              "memory": {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "number"
                                  },
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cpuFactor": {
                                "type": "number",
                                "format": "double"
                              },
                              "memFactor": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        },
                        "defaultEnv": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "lifetime": {
                          "type": "string",
                          "enum": [
                            "REGULAR",
                            "MIGRATION",
                            "TASK"
                          ]
                        },
                        "instanceAndVersion": {
                          "type": "string"
                        }
                      }
                    },
                    "deployment": {
                      "type": "object",
                      "properties": {
                        "shutdownable": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "GIT",
                            "SFTP",
                            "FTP"
                          ]
                        },
                        "repoState": {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "CREATED",
                            "NOT_NEEDED",
                            "DELETED"
                          ]
                        },
                        "url": {
                          "type": "string"
                        },
                        "httpUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "vhosts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fqdn": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "last_deploy": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "stickySessions": {
                      "type": "boolean"
                    },
                    "homogeneous": {
                      "type": "boolean"
                    },
                    "favourite": {
                      "type": "boolean"
                    },
                    "cancelOnPush": {
                      "type": "boolean"
                    },
                    "webhookUrl": {
                      "type": "string"
                    },
                    "webhookSecret": {
                      "type": "string"
                    },
                    "separateBuild": {
                      "type": "boolean"
                    },
                    "buildFlavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "SHOULD_BE_UP",
                        "SHOULD_BE_DOWN",
                        "WANTS_TO_BE_UP",
                        "MODERATED",
                        "DEFAULT_OF_PAYMENT"
                      ]
                    },
                    "commitId": {
                      "type": "string"
                    },
                    "appliance": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string"
                    },
                    "forceHttps": {
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ]
                    },
                    "env": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deployUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/users",
          "method": "post",
          "path": "/v2/users",
          "normalizedPath": "/v2/users",
          "operationId": "createUserFromForm",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "invitationKey": {
                        "type": "string"
                      },
                      "addonBetaInvitationKey": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "pass": {
                        "type": "string"
                      },
                      "url_next": {
                        "type": "string"
                      },
                      "terms": {
                        "type": "string"
                      },
                      "subscription_source": {
                        "type": "string"
                      },
                      "altcha": {
                        "type": "string"
                      },
                      "partner_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/users/:XXX/git-info",
          "method": "get",
          "path": "/v2/users/{userId}/git-info",
          "normalizedPath": "/v2/users/:XXX/git-info",
          "operationId": "getUserGitInformations",
          "queryParams": [],
          "pathParams": [
            {
              "name": "userId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/self/change_password",
          "method": "put",
          "path": "/v2/self/change_password",
          "normalizedPath": "/v2/self/change_password",
          "operationId": "changeUserPassword",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "oldPassword": {
                        "type": "string"
                      },
                      "newPassword": {
                        "type": "string"
                      },
                      "dropTokens": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/self",
          "method": "get",
          "path": "/v2/self",
          "normalizedPath": "/v2/self",
          "operationId": "getUser_1",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "lang": {
                    "type": "string"
                  },
                  "emailValidated": {
                    "type": "boolean"
                  },
                  "oauthApps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "admin": {
                    "type": "boolean"
                  },
                  "canPay": {
                    "type": "boolean"
                  },
                  "preferredMFA": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "TOTP"
                    ]
                  },
                  "hasPassword": {
                    "type": "boolean"
                  },
                  "partnerId": {
                    "type": "string"
                  },
                  "partnerName": {
                    "type": "string"
                  },
                  "partnerConsoleUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/UserView"
            }
          }
        },
        {
          "id": "[PUT] /v2/self",
          "method": "put",
          "path": "/v2/self",
          "normalizedPath": "/v2/self",
          "operationId": "editUser",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "terms": {
                        "type": "boolean"
                      },
                      "subscriptionSource": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "zipcode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string"
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "lang": {
                    "type": "string"
                  },
                  "emailValidated": {
                    "type": "boolean"
                  },
                  "oauthApps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "admin": {
                    "type": "boolean"
                  },
                  "canPay": {
                    "type": "boolean"
                  },
                  "preferredMFA": {
                    "type": "string",
                    "enum": [
                      "NONE",
                      "TOTP"
                    ]
                  },
                  "hasPassword": {
                    "type": "boolean"
                  },
                  "partnerId": {
                    "type": "string"
                  },
                  "partnerName": {
                    "type": "string"
                  },
                  "partnerConsoleUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/UserView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self",
          "method": "delete",
          "path": "/v2/self",
          "normalizedPath": "/v2/self",
          "operationId": "deleteUser",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/self/confirmation_email",
          "method": "get",
          "path": "/v2/self/confirmation_email",
          "normalizedPath": "/v2/self/confirmation_email",
          "operationId": "getConfirmationEmail",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/self/id",
          "method": "get",
          "path": "/v2/self/id",
          "normalizedPath": "/v2/self/id",
          "operationId": "getId",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/instances",
          "method": "get",
          "path": "/v2/self/instances",
          "normalizedPath": "/v2/self/instances",
          "operationId": "getSelfInstancesForAllApps",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "empty": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "appId": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "appPort": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "BOOTING",
                        "STARTING",
                        "DEPLOYING",
                        "MIGRATION_IN_PROGRESS",
                        "TASK_IN_PROGRESS",
                        "READY",
                        "UP",
                        "GHOST",
                        "STOPPING",
                        "DELETED"
                      ]
                    },
                    "flavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "commit": {
                      "type": "string"
                    },
                    "deployNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "deployId": {
                      "type": "string"
                    },
                    "instanceNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/SuperNovaInstanceMap"
            }
          }
        },
        {
          "id": "[GET] /v2/self/payment-info",
          "method": "get",
          "path": "/v2/self/payment-info",
          "normalizedPath": "/v2/self/payment-info",
          "operationId": "getSelfPaymentInfo",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "fromOrga": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "vatNumber": {
                    "type": "string"
                  },
                  "errors": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/PaymentInfoView"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/avatar",
          "method": "put",
          "path": "/v2/self/avatar",
          "normalizedPath": "/v2/self/avatar",
          "operationId": "setUserAvatarFromString",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "source": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/UrlView"
            }
          }
        },
        {
          "id": "[GET] /v2/self/validate_email",
          "method": "get",
          "path": "/v2/self/validate_email",
          "normalizedPath": "/v2/self/validate_email",
          "operationId": "validateEmail",
          "queryParams": [
            {
              "name": "validationKey",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[PUT] /v2/self/addons/:XXX/tags/:XXX",
          "method": "put",
          "path": "/v2/self/addons/{addonId}/tags/{tag}",
          "normalizedPath": "/v2/self/addons/:XXX/tags/:XXX",
          "operationId": "addSelfAddonTagByAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "tag",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/addons/:XXX/tags/:XXX",
          "method": "delete",
          "path": "/v2/self/addons/{addonId}/tags/{tag}",
          "normalizedPath": "/v2/self/addons/:XXX/tags/:XXX",
          "operationId": "deleteSelfAddonTagByAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "tag",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/addons/:XXX/tags",
          "method": "get",
          "path": "/v2/self/addons/{addonId}/tags",
          "normalizedPath": "/v2/self/addons/:XXX/tags",
          "operationId": "getSelfAddonTagsByAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/self/addons/:XXX/plan",
          "method": "put",
          "path": "/v2/self/addons/{addonId}/plan",
          "normalizedPath": "/v2/self/addons/:XXX/plan",
          "operationId": "changeSelfAddonPlanByAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "planId": {
                        "type": "string"
                      },
                      "region": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "realId": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "website": {
                        "type": "string"
                      },
                      "supportEmail": {
                        "type": "string"
                      },
                      "googlePlusName": {
                        "type": "string"
                      },
                      "twitterName": {
                        "type": "string"
                      },
                      "analyticsId": {
                        "type": "string"
                      },
                      "shortDesc": {
                        "type": "string"
                      },
                      "longDesc": {
                        "type": "string"
                      },
                      "logoUrl": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "ALPHA",
                          "BETA_PRIV",
                          "BETA_PUB",
                          "RELEASE",
                          "DELETED"
                        ]
                      },
                      "openInNewTab": {
                        "type": "boolean"
                      },
                      "canUpgrade": {
                        "type": "boolean"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "plan": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BOOLEAN",
                                "INTERVAL",
                                "FILESIZE",
                                "NUMBER",
                                "PERCENTAGE",
                                "STRING",
                                "OBJECT",
                                "BYTES",
                                "BOOLEAN_SHARED"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "computable_value": {
                              "type": "string"
                            },
                            "name_code": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "configKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonView"
            }
          }
        },
        {
          "id": "[GET] /v2/self/addons/:XXX",
          "method": "get",
          "path": "/v2/self/addons/{addonId}",
          "normalizedPath": "/v2/self/addons/:XXX",
          "operationId": "getSelfAddonById",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "realId": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "website": {
                        "type": "string"
                      },
                      "supportEmail": {
                        "type": "string"
                      },
                      "googlePlusName": {
                        "type": "string"
                      },
                      "twitterName": {
                        "type": "string"
                      },
                      "analyticsId": {
                        "type": "string"
                      },
                      "shortDesc": {
                        "type": "string"
                      },
                      "longDesc": {
                        "type": "string"
                      },
                      "logoUrl": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "ALPHA",
                          "BETA_PRIV",
                          "BETA_PUB",
                          "RELEASE",
                          "DELETED"
                        ]
                      },
                      "openInNewTab": {
                        "type": "boolean"
                      },
                      "canUpgrade": {
                        "type": "boolean"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "plan": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BOOLEAN",
                                "INTERVAL",
                                "FILESIZE",
                                "NUMBER",
                                "PERCENTAGE",
                                "STRING",
                                "OBJECT",
                                "BYTES",
                                "BOOLEAN_SHARED"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "computable_value": {
                              "type": "string"
                            },
                            "name_code": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "configKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonView"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/addons/:XXX",
          "method": "put",
          "path": "/v2/self/addons/{addonId}",
          "normalizedPath": "/v2/self/addons/:XXX",
          "operationId": "renameAddon",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "plan",
                      "providerId",
                      "region"
                    ],
                    "type": "object",
                    "properties": {
                      "providerId": {
                        "type": "string",
                        "description": "Id of the add-on provider"
                      },
                      "plan": {
                        "type": "string",
                        "description": "Id of the price plan"
                      },
                      "linkedApp": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the future add-on, for display."
                      },
                      "region": {
                        "type": "string",
                        "description": "Region to provision the add-on in."
                      },
                      "options": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "Options to add to the provision call."
                        },
                        "description": "Options to add to the provision call."
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the add-on"
                      },
                      "paymentIntent": {
                        "type": "object",
                        "properties": {
                          "ownerId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "clientSecret": {
                            "type": "string"
                          },
                          "customer": {
                            "type": "string"
                          }
                        },
                        "description": "PaymentIntent id from Stripe"
                      },
                      "paymentMethodType": {
                        "type": "string",
                        "description": "Payment method type",
                        "enum": [
                          "CREDITCARD",
                          "PAYPAL",
                          "SEPA_DEBIT"
                        ]
                      },
                      "sepaSourceId": {
                        "type": "string",
                        "description": "Id of the SEPA debit source"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "realId": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "website": {
                        "type": "string"
                      },
                      "supportEmail": {
                        "type": "string"
                      },
                      "googlePlusName": {
                        "type": "string"
                      },
                      "twitterName": {
                        "type": "string"
                      },
                      "analyticsId": {
                        "type": "string"
                      },
                      "shortDesc": {
                        "type": "string"
                      },
                      "longDesc": {
                        "type": "string"
                      },
                      "logoUrl": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "ALPHA",
                          "BETA_PRIV",
                          "BETA_PUB",
                          "RELEASE",
                          "DELETED"
                        ]
                      },
                      "openInNewTab": {
                        "type": "boolean"
                      },
                      "canUpgrade": {
                        "type": "boolean"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "plan": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BOOLEAN",
                                "INTERVAL",
                                "FILESIZE",
                                "NUMBER",
                                "PERCENTAGE",
                                "STRING",
                                "OBJECT",
                                "BYTES",
                                "BOOLEAN_SHARED"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "computable_value": {
                              "type": "string"
                            },
                            "name_code": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "configKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/addons/:XXX",
          "method": "delete",
          "path": "/v2/self/addons/{addonId}",
          "normalizedPath": "/v2/self/addons/:XXX",
          "operationId": "deprovisionSelfAddonById",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/self/addons/:XXX/env",
          "method": "get",
          "path": "/v2/self/addons/{addonId}/env",
          "normalizedPath": "/v2/self/addons/:XXX/env",
          "operationId": "getSelfAddonEnvByAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/addons",
          "method": "get",
          "path": "/v2/self/addons",
          "normalizedPath": "/v2/self/addons",
          "operationId": "getSelfAddons",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "realId": {
                      "type": "string"
                    },
                    "region": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "website": {
                          "type": "string"
                        },
                        "supportEmail": {
                          "type": "string"
                        },
                        "googlePlusName": {
                          "type": "string"
                        },
                        "twitterName": {
                          "type": "string"
                        },
                        "analyticsId": {
                          "type": "string"
                        },
                        "shortDesc": {
                          "type": "string"
                        },
                        "longDesc": {
                          "type": "string"
                        },
                        "logoUrl": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "ALPHA",
                            "BETA_PRIV",
                            "BETA_PUB",
                            "RELEASE",
                            "DELETED"
                          ]
                        },
                        "openInNewTab": {
                          "type": "boolean"
                        },
                        "canUpgrade": {
                          "type": "boolean"
                        },
                        "regions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "plan": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "BOOLEAN",
                                  "INTERVAL",
                                  "FILESIZE",
                                  "NUMBER",
                                  "PERCENTAGE",
                                  "STRING",
                                  "OBJECT",
                                  "BYTES",
                                  "BOOLEAN_SHARED"
                                ]
                              },
                              "value": {
                                "type": "string"
                              },
                              "computable_value": {
                                "type": "string"
                              },
                              "name_code": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "zones": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "configKeys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/self/addons",
          "method": "post",
          "path": "/v2/self/addons",
          "normalizedPath": "/v2/self/addons",
          "operationId": "provisionSelfAddon",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "plan",
                      "providerId",
                      "region"
                    ],
                    "type": "object",
                    "properties": {
                      "providerId": {
                        "type": "string",
                        "description": "Id of the add-on provider"
                      },
                      "plan": {
                        "type": "string",
                        "description": "Id of the price plan"
                      },
                      "linkedApp": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the future add-on, for display."
                      },
                      "region": {
                        "type": "string",
                        "description": "Region to provision the add-on in."
                      },
                      "options": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "Options to add to the provision call."
                        },
                        "description": "Options to add to the provision call."
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the add-on"
                      },
                      "paymentIntent": {
                        "type": "object",
                        "properties": {
                          "ownerId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "clientSecret": {
                            "type": "string"
                          },
                          "customer": {
                            "type": "string"
                          }
                        },
                        "description": "PaymentIntent id from Stripe"
                      },
                      "paymentMethodType": {
                        "type": "string",
                        "description": "Payment method type",
                        "enum": [
                          "CREDITCARD",
                          "PAYPAL",
                          "SEPA_DEBIT"
                        ]
                      },
                      "sepaSourceId": {
                        "type": "string",
                        "description": "Id of the SEPA debit source"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "realId": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "website": {
                        "type": "string"
                      },
                      "supportEmail": {
                        "type": "string"
                      },
                      "googlePlusName": {
                        "type": "string"
                      },
                      "twitterName": {
                        "type": "string"
                      },
                      "analyticsId": {
                        "type": "string"
                      },
                      "shortDesc": {
                        "type": "string"
                      },
                      "longDesc": {
                        "type": "string"
                      },
                      "logoUrl": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "ALPHA",
                          "BETA_PRIV",
                          "BETA_PUB",
                          "RELEASE",
                          "DELETED"
                        ]
                      },
                      "openInNewTab": {
                        "type": "boolean"
                      },
                      "canUpgrade": {
                        "type": "boolean"
                      },
                      "regions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "plan": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "features": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "BOOLEAN",
                                "INTERVAL",
                                "FILESIZE",
                                "NUMBER",
                                "PERCENTAGE",
                                "STRING",
                                "OBJECT",
                                "BYTES",
                                "BOOLEAN_SHARED"
                              ]
                            },
                            "value": {
                              "type": "string"
                            },
                            "computable_value": {
                              "type": "string"
                            },
                            "name_code": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "zones": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "configKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "ref": "#/components/schemas/AddonView"
            }
          }
        },
        {
          "id": "[GET] /v2/self/addons/:XXX/applications",
          "method": "get",
          "path": "/v2/self/addons/{addonId}/applications",
          "normalizedPath": "/v2/self/addons/:XXX/applications",
          "operationId": "getSelfApplicationsLinkedToAddonByAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "zone": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "deployType": {
                              "type": "string"
                            },
                            "logo": {
                              "type": "string"
                            }
                          }
                        },
                        "minInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxAllowedInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "minFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "maxFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "flavors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mem": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "cpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "gpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "disk": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price": {
                                "type": "number"
                              },
                              "available": {
                                "type": "boolean"
                              },
                              "microservice": {
                                "type": "boolean"
                              },
                              "machine_learning": {
                                "type": "boolean"
                              },
                              "nice": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price_id": {
                                "type": "string"
                              },
                              "memory": {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "number"
                                  },
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cpuFactor": {
                                "type": "number",
                                "format": "double"
                              },
                              "memFactor": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        },
                        "defaultEnv": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "lifetime": {
                          "type": "string",
                          "enum": [
                            "REGULAR",
                            "MIGRATION",
                            "TASK"
                          ]
                        },
                        "instanceAndVersion": {
                          "type": "string"
                        }
                      }
                    },
                    "deployment": {
                      "type": "object",
                      "properties": {
                        "shutdownable": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "GIT",
                            "SFTP",
                            "FTP"
                          ]
                        },
                        "repoState": {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "CREATED",
                            "NOT_NEEDED",
                            "DELETED"
                          ]
                        },
                        "url": {
                          "type": "string"
                        },
                        "httpUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "vhosts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fqdn": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "last_deploy": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "stickySessions": {
                      "type": "boolean"
                    },
                    "homogeneous": {
                      "type": "boolean"
                    },
                    "favourite": {
                      "type": "boolean"
                    },
                    "cancelOnPush": {
                      "type": "boolean"
                    },
                    "webhookUrl": {
                      "type": "string"
                    },
                    "webhookSecret": {
                      "type": "string"
                    },
                    "separateBuild": {
                      "type": "boolean"
                    },
                    "buildFlavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "SHOULD_BE_UP",
                        "SHOULD_BE_DOWN",
                        "WANTS_TO_BE_UP",
                        "MODERATED",
                        "DEFAULT_OF_PAYMENT"
                      ]
                    },
                    "commitId": {
                      "type": "string"
                    },
                    "appliance": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string"
                    },
                    "forceHttps": {
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ]
                    },
                    "env": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deployUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/addons/:XXX/sso",
          "method": "get",
          "path": "/v2/self/addons/{addonId}/sso",
          "normalizedPath": "/v2/self/addons/:XXX/sso",
          "operationId": "getAddonSSOData",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "timestamp": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "token": {
                    "type": "string"
                  },
                  "signature": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "string"
                  },
                  "userinfo_signature": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nav-data": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/AddonSSOData"
            }
          }
        },
        {
          "id": "[POST] /v2/self/addons/preorders",
          "method": "post",
          "path": "/v2/self/addons/preorders",
          "normalizedPath": "/v2/self/addons/preorders",
          "operationId": "preorderSelfAddon",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "plan",
                      "providerId",
                      "region"
                    ],
                    "type": "object",
                    "properties": {
                      "providerId": {
                        "type": "string",
                        "description": "Id of the add-on provider"
                      },
                      "plan": {
                        "type": "string",
                        "description": "Id of the price plan"
                      },
                      "linkedApp": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the future add-on, for display."
                      },
                      "region": {
                        "type": "string",
                        "description": "Region to provision the add-on in."
                      },
                      "options": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "description": "Options to add to the provision call."
                        },
                        "description": "Options to add to the provision call."
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the add-on"
                      },
                      "paymentIntent": {
                        "type": "object",
                        "properties": {
                          "ownerId": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "clientSecret": {
                            "type": "string"
                          },
                          "customer": {
                            "type": "string"
                          }
                        },
                        "description": "PaymentIntent id from Stripe"
                      },
                      "paymentMethodType": {
                        "type": "string",
                        "description": "Payment method type",
                        "enum": [
                          "CREDITCARD",
                          "PAYPAL",
                          "SEPA_DEBIT"
                        ]
                      },
                      "sepaSourceId": {
                        "type": "string",
                        "description": "Id of the SEPA debit source"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "PAID",
                      "CANCELED",
                      "PROCESSING",
                      "FAIL",
                      "REFUNDED",
                      "PENDING",
                      "TEST",
                      "TOBEREFUNDED",
                      "WONTPAY",
                      "PAYMENT_HELD"
                    ]
                  },
                  "emissionDate": {
                    "type": "string"
                  },
                  "paymentDate": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "target": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "vatNumber": {
                    "type": "string"
                  },
                  "fromSubscription": {
                    "type": "boolean"
                  },
                  "lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "subDescription": {
                          "type": "string"
                        },
                        "pack": {
                          "type": "string"
                        },
                        "VAT": {
                          "type": "number"
                        },
                        "price": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "originalTotal": {
                    "type": "number"
                  },
                  "totalHT": {
                    "type": "number"
                  },
                  "totalVAT": {
                    "type": "number"
                  },
                  "totalTTC": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "INVOICE",
                      "CREDITNOTE",
                      "PURCHASE_ORDER",
                      "ADDON_PREORDER"
                    ]
                  },
                  "payingUser": {
                    "type": "object",
                    "properties": {
                      "member": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          },
                          "preferredMFA": {
                            "type": "string",
                            "enum": [
                              "NONE",
                              "TOTP"
                            ]
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "ADMIN",
                          "ACCOUNTING",
                          "DEVELOPER",
                          "MANAGER"
                        ]
                      },
                      "job": {
                        "type": "string"
                      }
                    }
                  },
                  "errorCode": {
                    "type": "string"
                  },
                  "errorShortMsg": {
                    "type": "string"
                  },
                  "errorLongMsg": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "targetId": {
                    "type": "string"
                  },
                  "forId": {
                    "type": "string"
                  },
                  "customerOrderId": {
                    "type": "string"
                  },
                  "customerCostCenter": {
                    "type": "string"
                  },
                  "vatRate": {
                    "type": "number"
                  },
                  "payWhen": {
                    "type": "string",
                    "enum": [
                      "PAY_NOW",
                      "PAY_NEXT_MONTH"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/InvoiceRendering"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/applications/:XXX/dependencies/:XXX",
          "method": "put",
          "path": "/v2/self/applications/{appId}/dependencies/{dependencyId}",
          "normalizedPath": "/v2/self/applications/:XXX/dependencies/:XXX",
          "operationId": "addSelfApplicationDependencyByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "dependencyId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/applications/:XXX/dependencies/:XXX",
          "method": "delete",
          "path": "/v2/self/applications/{appId}/dependencies/{dependencyId}",
          "normalizedPath": "/v2/self/applications/:XXX/dependencies/:XXX",
          "operationId": "deleteSelfApplicationDependencyByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "dependencyId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/dependencies",
          "method": "get",
          "path": "/v2/self/applications/{appId}/dependencies",
          "normalizedPath": "/v2/self/applications/:XXX/dependencies",
          "operationId": "getSelfApplicationDependenciesByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "zone": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "deployType": {
                              "type": "string"
                            },
                            "logo": {
                              "type": "string"
                            }
                          }
                        },
                        "minInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxAllowedInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "minFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "maxFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "flavors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mem": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "cpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "gpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "disk": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price": {
                                "type": "number"
                              },
                              "available": {
                                "type": "boolean"
                              },
                              "microservice": {
                                "type": "boolean"
                              },
                              "machine_learning": {
                                "type": "boolean"
                              },
                              "nice": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price_id": {
                                "type": "string"
                              },
                              "memory": {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "number"
                                  },
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cpuFactor": {
                                "type": "number",
                                "format": "double"
                              },
                              "memFactor": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        },
                        "defaultEnv": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "lifetime": {
                          "type": "string",
                          "enum": [
                            "REGULAR",
                            "MIGRATION",
                            "TASK"
                          ]
                        },
                        "instanceAndVersion": {
                          "type": "string"
                        }
                      }
                    },
                    "deployment": {
                      "type": "object",
                      "properties": {
                        "shutdownable": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "GIT",
                            "SFTP",
                            "FTP"
                          ]
                        },
                        "repoState": {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "CREATED",
                            "NOT_NEEDED",
                            "DELETED"
                          ]
                        },
                        "url": {
                          "type": "string"
                        },
                        "httpUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "vhosts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fqdn": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "last_deploy": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "stickySessions": {
                      "type": "boolean"
                    },
                    "homogeneous": {
                      "type": "boolean"
                    },
                    "favourite": {
                      "type": "boolean"
                    },
                    "cancelOnPush": {
                      "type": "boolean"
                    },
                    "webhookUrl": {
                      "type": "string"
                    },
                    "webhookSecret": {
                      "type": "string"
                    },
                    "separateBuild": {
                      "type": "boolean"
                    },
                    "buildFlavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "SHOULD_BE_UP",
                        "SHOULD_BE_DOWN",
                        "WANTS_TO_BE_UP",
                        "MODERATED",
                        "DEFAULT_OF_PAYMENT"
                      ]
                    },
                    "commitId": {
                      "type": "string"
                    },
                    "appliance": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string"
                    },
                    "forceHttps": {
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ]
                    },
                    "env": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deployUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/dependencies/env",
          "method": "get",
          "path": "/v2/self/applications/{appId}/dependencies/env",
          "normalizedPath": "/v2/self/applications/:XXX/dependencies/env",
          "operationId": "getSelfApplicationDependenciesEnvByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "id",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/dependents",
          "method": "get",
          "path": "/v2/self/applications/{appId}/dependents",
          "normalizedPath": "/v2/self/applications/:XXX/dependents",
          "operationId": "getSelfApplicationDependents",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "zone": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "deployType": {
                              "type": "string"
                            },
                            "logo": {
                              "type": "string"
                            }
                          }
                        },
                        "minInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxAllowedInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "minFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "maxFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "flavors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mem": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "cpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "gpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "disk": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price": {
                                "type": "number"
                              },
                              "available": {
                                "type": "boolean"
                              },
                              "microservice": {
                                "type": "boolean"
                              },
                              "machine_learning": {
                                "type": "boolean"
                              },
                              "nice": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price_id": {
                                "type": "string"
                              },
                              "memory": {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "number"
                                  },
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cpuFactor": {
                                "type": "number",
                                "format": "double"
                              },
                              "memFactor": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        },
                        "defaultEnv": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "lifetime": {
                          "type": "string",
                          "enum": [
                            "REGULAR",
                            "MIGRATION",
                            "TASK"
                          ]
                        },
                        "instanceAndVersion": {
                          "type": "string"
                        }
                      }
                    },
                    "deployment": {
                      "type": "object",
                      "properties": {
                        "shutdownable": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "GIT",
                            "SFTP",
                            "FTP"
                          ]
                        },
                        "repoState": {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "CREATED",
                            "NOT_NEEDED",
                            "DELETED"
                          ]
                        },
                        "url": {
                          "type": "string"
                        },
                        "httpUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "vhosts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fqdn": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "last_deploy": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "stickySessions": {
                      "type": "boolean"
                    },
                    "homogeneous": {
                      "type": "boolean"
                    },
                    "favourite": {
                      "type": "boolean"
                    },
                    "cancelOnPush": {
                      "type": "boolean"
                    },
                    "webhookUrl": {
                      "type": "string"
                    },
                    "webhookSecret": {
                      "type": "string"
                    },
                    "separateBuild": {
                      "type": "boolean"
                    },
                    "buildFlavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "SHOULD_BE_UP",
                        "SHOULD_BE_DOWN",
                        "WANTS_TO_BE_UP",
                        "MODERATED",
                        "DEFAULT_OF_PAYMENT"
                      ]
                    },
                    "commitId": {
                      "type": "string"
                    },
                    "appliance": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string"
                    },
                    "forceHttps": {
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ]
                    },
                    "env": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deployUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/self/applications/:XXX/tags/:XXX",
          "method": "put",
          "path": "/v2/self/applications/{appId}/tags/{tag}",
          "normalizedPath": "/v2/self/applications/:XXX/tags/:XXX",
          "operationId": "addSelfApplicationTagByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "tag",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/applications/:XXX/tags/:XXX",
          "method": "delete",
          "path": "/v2/self/applications/{appId}/tags/{tag}",
          "normalizedPath": "/v2/self/applications/:XXX/tags/:XXX",
          "operationId": "deleteSelfApplicationTagAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "tag",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/tags",
          "method": "get",
          "path": "/v2/self/applications/{appId}/tags",
          "normalizedPath": "/v2/self/applications/:XXX/tags",
          "operationId": "getSelfApplicationTagsByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/self/applications/:XXX/vhosts/:XXX",
          "method": "put",
          "path": "/v2/self/applications/{appId}/vhosts/{domain}",
          "normalizedPath": "/v2/self/applications/:XXX/vhosts/:XXX",
          "operationId": "addSelfVhostByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "domain",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/applications/:XXX/vhosts/:XXX",
          "method": "delete",
          "path": "/v2/self/applications/{appId}/vhosts/{domain}",
          "normalizedPath": "/v2/self/applications/:XXX/vhosts/:XXX",
          "operationId": "removeSelfVhostByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "domain",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/vhosts/favourite",
          "method": "get",
          "path": "/v2/self/applications/{appId}/vhosts/favourite",
          "normalizedPath": "/v2/self/applications/:XXX/vhosts/favourite",
          "operationId": "getSelfFavouriteVhostByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "fqdn": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/VhostView"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/applications/:XXX/vhosts/favourite",
          "method": "put",
          "path": "/v2/self/applications/{appId}/vhosts/favourite",
          "normalizedPath": "/v2/self/applications/:XXX/vhosts/favourite",
          "operationId": "markSelfFavouriteVhostByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "fqdn": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "fqdn": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/VhostView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/applications/:XXX/vhosts/favourite",
          "method": "delete",
          "path": "/v2/self/applications/{appId}/vhosts/favourite",
          "normalizedPath": "/v2/self/applications/:XXX/vhosts/favourite",
          "operationId": "unmarkSelfFavouriteVhostByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/vhosts",
          "method": "get",
          "path": "/v2/self/applications/{appId}/vhosts",
          "normalizedPath": "/v2/self/applications/:XXX/vhosts",
          "operationId": "getSelfVhostByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "fqdn": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications",
          "method": "get",
          "path": "/v2/self/applications",
          "normalizedPath": "/v2/self/applications",
          "operationId": "getSelfApplications",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "zone": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        },
                        "variant": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "deployType": {
                              "type": "string"
                            },
                            "logo": {
                              "type": "string"
                            }
                          }
                        },
                        "minInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "maxAllowedInstances": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "minFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "maxFlavor": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        },
                        "flavors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mem": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "cpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "gpus": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "disk": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price": {
                                "type": "number"
                              },
                              "available": {
                                "type": "boolean"
                              },
                              "microservice": {
                                "type": "boolean"
                              },
                              "machine_learning": {
                                "type": "boolean"
                              },
                              "nice": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "price_id": {
                                "type": "string"
                              },
                              "memory": {
                                "type": "object",
                                "properties": {
                                  "unit": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "number"
                                  },
                                  "formatted": {
                                    "type": "string"
                                  }
                                }
                              },
                              "cpuFactor": {
                                "type": "number",
                                "format": "double"
                              },
                              "memFactor": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        },
                        "defaultEnv": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "lifetime": {
                          "type": "string",
                          "enum": [
                            "REGULAR",
                            "MIGRATION",
                            "TASK"
                          ]
                        },
                        "instanceAndVersion": {
                          "type": "string"
                        }
                      }
                    },
                    "deployment": {
                      "type": "object",
                      "properties": {
                        "shutdownable": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "GIT",
                            "SFTP",
                            "FTP"
                          ]
                        },
                        "repoState": {
                          "type": "string",
                          "enum": [
                            "CREATING",
                            "CREATED",
                            "NOT_NEEDED",
                            "DELETED"
                          ]
                        },
                        "url": {
                          "type": "string"
                        },
                        "httpUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "vhosts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "fqdn": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "last_deploy": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "archived": {
                      "type": "boolean"
                    },
                    "stickySessions": {
                      "type": "boolean"
                    },
                    "homogeneous": {
                      "type": "boolean"
                    },
                    "favourite": {
                      "type": "boolean"
                    },
                    "cancelOnPush": {
                      "type": "boolean"
                    },
                    "webhookUrl": {
                      "type": "string"
                    },
                    "webhookSecret": {
                      "type": "string"
                    },
                    "separateBuild": {
                      "type": "boolean"
                    },
                    "buildFlavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "gpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "disk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number"
                        },
                        "available": {
                          "type": "boolean"
                        },
                        "microservice": {
                          "type": "boolean"
                        },
                        "machine_learning": {
                          "type": "boolean"
                        },
                        "nice": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "memory": {
                          "type": "object",
                          "properties": {
                            "unit": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            },
                            "formatted": {
                              "type": "string"
                            }
                          }
                        },
                        "cpuFactor": {
                          "type": "number",
                          "format": "double"
                        },
                        "memFactor": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "SHOULD_BE_UP",
                        "SHOULD_BE_DOWN",
                        "WANTS_TO_BE_UP",
                        "MODERATED",
                        "DEFAULT_OF_PAYMENT"
                      ]
                    },
                    "commitId": {
                      "type": "string"
                    },
                    "appliance": {
                      "type": "string"
                    },
                    "branch": {
                      "type": "string"
                    },
                    "forceHttps": {
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ]
                    },
                    "env": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deployUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/self/applications",
          "method": "post",
          "path": "/v2/self/applications",
          "normalizedPath": "/v2/self/applications",
          "operationId": "addSelfApplication",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "zone": {
                        "type": "string"
                      },
                      "deploy": {
                        "type": "string"
                      },
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "instanceType": {
                        "type": "string"
                      },
                      "instanceVersion": {
                        "type": "string"
                      },
                      "instanceVariant": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "instanceLifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "string"
                      },
                      "maxFlavor": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "archived": {
                        "type": "boolean"
                      },
                      "stickySessions": {
                        "type": "boolean"
                      },
                      "homogeneous": {
                        "type": "boolean"
                      },
                      "favourite": {
                        "type": "boolean"
                      },
                      "cancelOnPush": {
                        "type": "boolean"
                      },
                      "separateBuild": {
                        "type": "boolean"
                      },
                      "buildFlavor": {
                        "type": "string"
                      },
                      "oauthService": {
                        "type": "string"
                      },
                      "oauthAppId": {
                        "type": "string"
                      },
                      "oauthApp": {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "applianceId": {
                        "type": "string"
                      },
                      "branch": {
                        "type": "string"
                      },
                      "forceHttps": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ]
                      },
                      "env": {
                        "type": "object",
                        "properties": {
                          "empty": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications/:XXX",
          "method": "get",
          "path": "/v2/self/applications/{appId}",
          "normalizedPath": "/v2/self/applications/:XXX",
          "operationId": "getSelfApplicationByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/applications/:XXX",
          "method": "put",
          "path": "/v2/self/applications/{appId}",
          "normalizedPath": "/v2/self/applications/:XXX",
          "operationId": "editSelfApplicationByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "zone": {
                        "type": "string"
                      },
                      "deploy": {
                        "type": "string"
                      },
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "instanceType": {
                        "type": "string"
                      },
                      "instanceVersion": {
                        "type": "string"
                      },
                      "instanceVariant": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "instanceLifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "string"
                      },
                      "maxFlavor": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "archived": {
                        "type": "boolean"
                      },
                      "stickySessions": {
                        "type": "boolean"
                      },
                      "homogeneous": {
                        "type": "boolean"
                      },
                      "favourite": {
                        "type": "boolean"
                      },
                      "cancelOnPush": {
                        "type": "boolean"
                      },
                      "separateBuild": {
                        "type": "boolean"
                      },
                      "buildFlavor": {
                        "type": "string"
                      },
                      "oauthService": {
                        "type": "string"
                      },
                      "oauthAppId": {
                        "type": "string"
                      },
                      "oauthApp": {
                        "type": "object",
                        "properties": {
                          "owner": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "applianceId": {
                        "type": "string"
                      },
                      "branch": {
                        "type": "string"
                      },
                      "forceHttps": {
                        "type": "string",
                        "enum": [
                          "ENABLED",
                          "DISABLED"
                        ]
                      },
                      "env": {
                        "type": "object",
                        "properties": {
                          "empty": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/applications/:XXX",
          "method": "delete",
          "path": "/v2/self/applications/{appId}",
          "normalizedPath": "/v2/self/applications/:XXX",
          "operationId": "deleteSelfApplicationByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/applications/:XXX/env/:XXX",
          "method": "put",
          "path": "/v2/self/applications/{appId}/env/{envName}",
          "normalizedPath": "/v2/self/applications/:XXX/env/:XXX",
          "operationId": "editSelfApplicationEnvByAppIdAndEnvName",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "envName",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/applications/:XXX/env/:XXX",
          "method": "delete",
          "path": "/v2/self/applications/{appId}/env/{envName}",
          "normalizedPath": "/v2/self/applications/:XXX/env/:XXX",
          "operationId": "removeSelfApplicationEnvByAppIdAndEnvName",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "envName",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/env",
          "method": "get",
          "path": "/v2/self/applications/{appId}/env",
          "normalizedPath": "/v2/self/applications/:XXX/env",
          "operationId": "getSelfApplicationEnvByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/self/applications/:XXX/env",
          "method": "put",
          "path": "/v2/self/applications/{appId}/env",
          "normalizedPath": "/v2/self/applications/:XXX/env",
          "operationId": "editSelfApplicationEnvByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  },
                  "zoneId": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "deployType": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      },
                      "minInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "maxAllowedInstances": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "maxFlavor": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "mem": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "cpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "gpus": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price": {
                            "type": "number"
                          },
                          "available": {
                            "type": "boolean"
                          },
                          "microservice": {
                            "type": "boolean"
                          },
                          "machine_learning": {
                            "type": "boolean"
                          },
                          "nice": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "price_id": {
                            "type": "string"
                          },
                          "memory": {
                            "type": "object",
                            "properties": {
                              "unit": {
                                "type": "string"
                              },
                              "value": {
                                "type": "number"
                              },
                              "formatted": {
                                "type": "string"
                              }
                            }
                          },
                          "cpuFactor": {
                            "type": "number",
                            "format": "double"
                          },
                          "memFactor": {
                            "type": "number",
                            "format": "double"
                          }
                        }
                      },
                      "flavors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "mem": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "cpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "gpus": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "disk": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price": {
                              "type": "number"
                            },
                            "available": {
                              "type": "boolean"
                            },
                            "microservice": {
                              "type": "boolean"
                            },
                            "machine_learning": {
                              "type": "boolean"
                            },
                            "nice": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "price_id": {
                              "type": "string"
                            },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "number"
                                },
                                "formatted": {
                                  "type": "string"
                                }
                              }
                            },
                            "cpuFactor": {
                              "type": "number",
                              "format": "double"
                            },
                            "memFactor": {
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      },
                      "defaultEnv": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "type": "string",
                        "enum": [
                          "REGULAR",
                          "MIGRATION",
                          "TASK"
                        ]
                      },
                      "instanceAndVersion": {
                        "type": "string"
                      }
                    }
                  },
                  "deployment": {
                    "type": "object",
                    "properties": {
                      "shutdownable": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "GIT",
                          "SFTP",
                          "FTP"
                        ]
                      },
                      "repoState": {
                        "type": "string",
                        "enum": [
                          "CREATING",
                          "CREATED",
                          "NOT_NEEDED",
                          "DELETED"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "httpUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "vhosts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fqdn": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "last_deploy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "archived": {
                    "type": "boolean"
                  },
                  "stickySessions": {
                    "type": "boolean"
                  },
                  "homogeneous": {
                    "type": "boolean"
                  },
                  "favourite": {
                    "type": "boolean"
                  },
                  "cancelOnPush": {
                    "type": "boolean"
                  },
                  "webhookUrl": {
                    "type": "string"
                  },
                  "webhookSecret": {
                    "type": "string"
                  },
                  "separateBuild": {
                    "type": "boolean"
                  },
                  "buildFlavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "gpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "disk": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number"
                      },
                      "available": {
                        "type": "boolean"
                      },
                      "microservice": {
                        "type": "boolean"
                      },
                      "machine_learning": {
                        "type": "boolean"
                      },
                      "nice": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price_id": {
                        "type": "string"
                      },
                      "memory": {
                        "type": "object",
                        "properties": {
                          "unit": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          },
                          "formatted": {
                            "type": "string"
                          }
                        }
                      },
                      "cpuFactor": {
                        "type": "number",
                        "format": "double"
                      },
                      "memFactor": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "SHOULD_BE_UP",
                      "SHOULD_BE_DOWN",
                      "WANTS_TO_BE_UP",
                      "MODERATED",
                      "DEFAULT_OF_PAYMENT"
                    ]
                  },
                  "commitId": {
                    "type": "string"
                  },
                  "appliance": {
                    "type": "string"
                  },
                  "branch": {
                    "type": "string"
                  },
                  "forceHttps": {
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ]
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deployUrl": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/ApplicationView"
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/addons",
          "method": "get",
          "path": "/v2/self/applications/{appId}/addons",
          "normalizedPath": "/v2/self/applications/:XXX/addons",
          "operationId": "getSelfAddonsLinkedToApplicationByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "realId": {
                      "type": "string"
                    },
                    "region": {
                      "type": "string"
                    },
                    "zoneId": {
                      "type": "string"
                    },
                    "provider": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "website": {
                          "type": "string"
                        },
                        "supportEmail": {
                          "type": "string"
                        },
                        "googlePlusName": {
                          "type": "string"
                        },
                        "twitterName": {
                          "type": "string"
                        },
                        "analyticsId": {
                          "type": "string"
                        },
                        "shortDesc": {
                          "type": "string"
                        },
                        "longDesc": {
                          "type": "string"
                        },
                        "logoUrl": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "ALPHA",
                            "BETA_PRIV",
                            "BETA_PUB",
                            "RELEASE",
                            "DELETED"
                          ]
                        },
                        "openInNewTab": {
                          "type": "boolean"
                        },
                        "canUpgrade": {
                          "type": "boolean"
                        },
                        "regions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "plan": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "price_id": {
                          "type": "string"
                        },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "BOOLEAN",
                                  "INTERVAL",
                                  "FILESIZE",
                                  "NUMBER",
                                  "PERCENTAGE",
                                  "STRING",
                                  "OBJECT",
                                  "BYTES",
                                  "BOOLEAN_SHARED"
                                ]
                              },
                              "value": {
                                "type": "string"
                              },
                              "computable_value": {
                                "type": "string"
                              },
                              "name_code": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "zones": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "configKeys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/self/applications/:XXX/addons",
          "method": "post",
          "path": "/v2/self/applications/{appId}/addons",
          "normalizedPath": "/v2/self/applications/:XXX/addons",
          "operationId": "linkSelfAddonToApplicationByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/branches",
          "method": "get",
          "path": "/v2/self/applications/{appId}/branches",
          "normalizedPath": "/v2/self/applications/:XXX/branches",
          "operationId": "getSelfApplicationBranchesByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/instances/:XXX",
          "method": "get",
          "path": "/v2/self/applications/{appId}/instances/{instanceId}",
          "normalizedPath": "/v2/self/applications/:XXX/instances/:XXX",
          "operationId": "getSelfApplicationInstanceByAppAndInstanceId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "instanceId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "appId": {
                    "type": "string"
                  },
                  "ip": {
                    "type": "string"
                  },
                  "appPort": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "BOOTING",
                      "STARTING",
                      "DEPLOYING",
                      "MIGRATION_IN_PROGRESS",
                      "TASK_IN_PROGRESS",
                      "READY",
                      "UP",
                      "GHOST",
                      "STOPPING",
                      "DELETED"
                    ]
                  },
                  "flavor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mem": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "cpus": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "price": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "commit": {
                    "type": "string"
                  },
                  "deployNumber": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "deployId": {
                    "type": "string"
                  },
                  "instanceNumber": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "creationDate": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              },
              "ref": "#/components/schemas/SuperNovaInstanceView"
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/instances",
          "method": "get",
          "path": "/v2/self/applications/{appId}/instances",
          "normalizedPath": "/v2/self/applications/:XXX/instances",
          "operationId": "getSelfApplicationInstancesByAppId",
          "queryParams": [
            {
              "name": "deploymentId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "withDeleted",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "appId": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "appPort": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "BOOTING",
                        "STARTING",
                        "DEPLOYING",
                        "MIGRATION_IN_PROGRESS",
                        "TASK_IN_PROGRESS",
                        "READY",
                        "UP",
                        "GHOST",
                        "STOPPING",
                        "DELETED"
                      ]
                    },
                    "flavor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "mem": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cpus": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "price": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "commit": {
                      "type": "string"
                    },
                    "deployNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "deployId": {
                      "type": "string"
                    },
                    "instanceNumber": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "displayName": {
                      "type": "string"
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/self/applications/:XXX/instances",
          "method": "post",
          "path": "/v2/self/applications/{appId}/instances",
          "normalizedPath": "/v2/self/applications/:XXX/instances",
          "operationId": "redeploySelfApplicationByAppId",
          "queryParams": [
            {
              "name": "commit",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "useCache",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/applications/:XXX/instances",
          "method": "delete",
          "path": "/v2/self/applications/{appId}/instances",
          "normalizedPath": "/v2/self/applications/:XXX/instances",
          "operationId": "undeploySelfApplicationByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/addons/env",
          "method": "get",
          "path": "/v2/self/applications/{appId}/addons/env",
          "normalizedPath": "/v2/self/applications/:XXX/addons/env",
          "operationId": "getSelfEnvOfAddonsLinkedToApplicationByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "provider_id": {
                      "type": "string"
                    },
                    "addon_id": {
                      "type": "string"
                    },
                    "addon_name": {
                      "type": "string"
                    },
                    "env": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/exposed_env",
          "method": "get",
          "path": "/v2/self/applications/{appId}/exposed_env",
          "normalizedPath": "/v2/self/applications/:XXX/exposed_env",
          "operationId": "getSelfExposedEnvByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/self/applications/:XXX/exposed_env",
          "method": "put",
          "path": "/v2/self/applications/{appId}/exposed_env",
          "normalizedPath": "/v2/self/applications/:XXX/exposed_env",
          "operationId": "updateSelfExposedEnvByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/applications/:XXX/branch",
          "method": "put",
          "path": "/v2/self/applications/{appId}/branch",
          "normalizedPath": "/v2/self/applications/:XXX/branch",
          "operationId": "setSelfApplicationBranchByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "branch": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[PUT] /v2/self/applications/:XXX/buildflavor",
          "method": "put",
          "path": "/v2/self/applications/{appId}/buildflavor",
          "normalizedPath": "/v2/self/applications/:XXX/buildflavor",
          "operationId": "setSelfBuildInstanceFlavorByAppId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "flavorName": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[DELETE] /v2/self/applications/:XXX/addons/:XXX",
          "method": "delete",
          "path": "/v2/self/applications/{appId}/addons/{addonId}",
          "normalizedPath": "/v2/self/applications/:XXX/addons/:XXX",
          "operationId": "unlinkSelfddonFromApplicationByAppAndAddonId",
          "queryParams": [],
          "pathParams": [
            {
              "name": "addonId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[DELETE] /v2/self/applications/:XXX/deployments/:XXX/instances",
          "method": "delete",
          "path": "/v2/self/applications/{appId}/deployments/{deploymentId}/instances",
          "normalizedPath": "/v2/self/applications/:XXX/deployments/:XXX/instances",
          "operationId": "cancelDeploy",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "deploymentId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/deployments/:XXX",
          "method": "get",
          "path": "/v2/self/applications/{appId}/deployments/{deploymentId}",
          "normalizedPath": "/v2/self/applications/:XXX/deployments/:XXX",
          "operationId": "getApplicationDeployment",
          "queryParams": [],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "deploymentId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/self/applications/:XXX/deployments",
          "method": "get",
          "path": "/v2/self/applications/{appId}/deployments",
          "normalizedPath": "/v2/self/applications/:XXX/deployments",
          "operationId": "getApplicationDeployments",
          "queryParams": [
            {
              "name": "action",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "limit",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "offset",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "appId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "uuid": {
                      "type": "string"
                    },
                    "date": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "TASK_RUNNING",
                        "WIP",
                        "FAIL",
                        "CANCELLED",
                        "OK"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "DEPLOY",
                        "UNDEPLOY",
                        "UPSCALE",
                        "DOWNSCALE",
                        "REPLACE",
                        "CANCEL",
                        "NONE"
                      ]
                    },
                    "commit": {
                      "type": "string"
                    },
                    "cause": {
                      "type": "string"
                    },
                    "instances": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/cli_tokens",
          "method": "get",
          "path": "/v2/self/cli_tokens",
          "normalizedPath": "/v2/self/cli_tokens",
          "operationId": "getSelfCliTokens",
          "queryParams": [
            {
              "name": "cli_token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "expirationDate": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/consumers",
          "method": "get",
          "path": "/v2/self/consumers",
          "normalizedPath": "/v2/self/consumers",
          "operationId": "getSelfConsumers",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[POST] /v2/self/consumers",
          "method": "post",
          "path": "/v2/self/consumers",
          "normalizedPath": "/v2/self/consumers",
          "operationId": "createSelfConsumer",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "picture": {
                        "type": "string"
                      },
                      "baseUrl": {
                        "type": "string"
                      },
                      "rights": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "string"
                  },
                  "baseUrl": {
                    "type": "string"
                  },
                  "rights": {
                    "type": "object",
                    "properties": {
                      "almighty": {
                        "type": "boolean"
                      },
                      "access_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations_services": {
                        "type": "boolean"
                      },
                      "manage_organisations_applications": {
                        "type": "boolean"
                      },
                      "manage_organisations_members": {
                        "type": "boolean"
                      },
                      "access_organisations_bills": {
                        "type": "boolean"
                      },
                      "access_organisations_credit_count": {
                        "type": "boolean"
                      },
                      "access_organisations_consumption_statistics": {
                        "type": "boolean"
                      },
                      "access_personal_information": {
                        "type": "boolean"
                      },
                      "manage_personal_information": {
                        "type": "boolean"
                      },
                      "manage_ssh_keys": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/OAuth1ConsumerView"
            }
          }
        },
        {
          "id": "[GET] /v2/self/consumers/:XXX",
          "method": "get",
          "path": "/v2/self/consumers/{key}",
          "normalizedPath": "/v2/self/consumers/:XXX",
          "operationId": "getSelfConsumer",
          "queryParams": [],
          "pathParams": [
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "string"
                  },
                  "baseUrl": {
                    "type": "string"
                  },
                  "rights": {
                    "type": "object",
                    "properties": {
                      "almighty": {
                        "type": "boolean"
                      },
                      "access_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations_services": {
                        "type": "boolean"
                      },
                      "manage_organisations_applications": {
                        "type": "boolean"
                      },
                      "manage_organisations_members": {
                        "type": "boolean"
                      },
                      "access_organisations_bills": {
                        "type": "boolean"
                      },
                      "access_organisations_credit_count": {
                        "type": "boolean"
                      },
                      "access_organisations_consumption_statistics": {
                        "type": "boolean"
                      },
                      "access_personal_information": {
                        "type": "boolean"
                      },
                      "manage_personal_information": {
                        "type": "boolean"
                      },
                      "manage_ssh_keys": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/OAuth1ConsumerView"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/consumers/:XXX",
          "method": "put",
          "path": "/v2/self/consumers/{key}",
          "normalizedPath": "/v2/self/consumers/:XXX",
          "operationId": "updateSelfConsumer",
          "queryParams": [],
          "pathParams": [
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "picture": {
                        "type": "string"
                      },
                      "baseUrl": {
                        "type": "string"
                      },
                      "rights": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "picture": {
                    "type": "string"
                  },
                  "baseUrl": {
                    "type": "string"
                  },
                  "rights": {
                    "type": "object",
                    "properties": {
                      "almighty": {
                        "type": "boolean"
                      },
                      "access_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations": {
                        "type": "boolean"
                      },
                      "manage_organisations_services": {
                        "type": "boolean"
                      },
                      "manage_organisations_applications": {
                        "type": "boolean"
                      },
                      "manage_organisations_members": {
                        "type": "boolean"
                      },
                      "access_organisations_bills": {
                        "type": "boolean"
                      },
                      "access_organisations_credit_count": {
                        "type": "boolean"
                      },
                      "access_organisations_consumption_statistics": {
                        "type": "boolean"
                      },
                      "access_personal_information": {
                        "type": "boolean"
                      },
                      "manage_personal_information": {
                        "type": "boolean"
                      },
                      "manage_ssh_keys": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/OAuth1ConsumerView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/consumers/:XXX",
          "method": "delete",
          "path": "/v2/self/consumers/{key}",
          "normalizedPath": "/v2/self/consumers/:XXX",
          "operationId": "deleteSelfConsumer",
          "queryParams": [],
          "pathParams": [
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/self/consumers/:XXX/secret",
          "method": "get",
          "path": "/v2/self/consumers/{key}/secret",
          "normalizedPath": "/v2/self/consumers/:XXX/secret",
          "operationId": "getSelfConsumerSecret",
          "queryParams": [],
          "pathParams": [
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "secret": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/SecretView"
            }
          }
        },
        {
          "id": "[GET] /v2/self/consumptions",
          "method": "get",
          "path": "/v2/self/consumptions",
          "normalizedPath": "/v2/self/consumptions",
          "operationId": "getConsumptions",
          "queryParams": [
            {
              "name": "appId",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "for",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "from",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            },
            {
              "name": "to",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/credits",
          "method": "get",
          "path": "/v2/self/credits",
          "normalizedPath": "/v2/self/credits",
          "operationId": "getSelfAmount",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "ownerId": {
                    "type": "string"
                  },
                  "count": {
                    "type": "number"
                  },
                  "dropPrice": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/DropCountView"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/emails/:XXX",
          "method": "put",
          "path": "/v2/self/emails/{email}",
          "normalizedPath": "/v2/self/emails/:XXX",
          "operationId": "addEmailAddress",
          "queryParams": [],
          "pathParams": [
            {
              "name": "email",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/emails/:XXX",
          "method": "delete",
          "path": "/v2/self/emails/{email}",
          "normalizedPath": "/v2/self/emails/:XXX",
          "operationId": "removeEmailAddress",
          "queryParams": [],
          "pathParams": [
            {
              "name": "email",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/self/emails",
          "method": "get",
          "path": "/v2/self/emails",
          "normalizedPath": "/v2/self/emails",
          "operationId": "getEmailAddresses",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/self/keys/:XXX",
          "method": "put",
          "path": "/v2/self/keys/{key}",
          "normalizedPath": "/v2/self/keys/:XXX",
          "operationId": "addSshKey",
          "queryParams": [],
          "pathParams": [
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/keys/:XXX",
          "method": "delete",
          "path": "/v2/self/keys/{key}",
          "normalizedPath": "/v2/self/keys/:XXX",
          "operationId": "removeSshKey",
          "queryParams": [],
          "pathParams": [
            {
              "name": "key",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/self/keys",
          "method": "get",
          "path": "/v2/self/keys",
          "normalizedPath": "/v2/self/keys",
          "operationId": "getSshKeys",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "fingerprint": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /v2/self/mfa/:XXX",
          "method": "put",
          "path": "/v2/self/mfa/{kind}",
          "normalizedPath": "/v2/self/mfa/:XXX",
          "operationId": "setSelfFavouriteMFA",
          "queryParams": [],
          "pathParams": [
            {
              "name": "kind",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "favourite": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[POST] /v2/self/mfa/:XXX",
          "method": "post",
          "path": "/v2/self/mfa/{kind}",
          "normalizedPath": "/v2/self/mfa/:XXX",
          "operationId": "createSelfMFA",
          "queryParams": [],
          "pathParams": [
            {
              "name": "kind",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[DELETE] /v2/self/mfa/:XXX",
          "method": "delete",
          "path": "/v2/self/mfa/{kind}",
          "normalizedPath": "/v2/self/mfa/:XXX",
          "operationId": "deleteSelfMFA",
          "queryParams": [],
          "pathParams": [
            {
              "name": "kind",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/self/mfa/:XXX/backupcodes",
          "method": "get",
          "path": "/v2/self/mfa/{kind}/backupcodes",
          "normalizedPath": "/v2/self/mfa/:XXX/backupcodes",
          "operationId": "getSelfBackupCodes",
          "queryParams": [],
          "pathParams": [
            {
              "name": "kind",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/self/mfa/:XXX/confirmation",
          "method": "post",
          "path": "/v2/self/mfa/{kind}/confirmation",
          "normalizedPath": "/v2/self/mfa/:XXX/confirmation",
          "operationId": "validateSelfMFA",
          "queryParams": [],
          "pathParams": [
            {
              "name": "kind",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "revokeTokens": {
                        "type": "boolean"
                      },
                      "code": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/self/payments/methods",
          "method": "get",
          "path": "/v2/self/payments/methods",
          "normalizedPath": "/v2/self/payments/methods",
          "operationId": "getSelfPaymentMethods",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ownerId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "CREDITCARD",
                        "PAYPAL",
                        "SEPA_DEBIT"
                      ]
                    },
                    "token": {
                      "type": "string"
                    },
                    "imageUrl": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "holderName": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    },
                    "expirationDate": {
                      "type": "string"
                    },
                    "isExpired": {
                      "type": "boolean"
                    },
                    "cardType": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "bankCode": {
                      "type": "string"
                    },
                    "branchCode": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "fingerprint": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/self/payments/methods",
          "method": "post",
          "path": "/v2/self/payments/methods",
          "normalizedPath": "/v2/self/payments/methods",
          "operationId": "addSelfPaymentMethod",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "NEW_CARD",
                          "EXISTING_CARD"
                        ]
                      },
                      "token": {
                        "type": "string"
                      },
                      "deviceData": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "ownerId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "CREDITCARD",
                      "PAYPAL",
                      "SEPA_DEBIT"
                    ]
                  },
                  "token": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "holderName": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "expirationDate": {
                    "type": "string"
                  },
                  "isExpired": {
                    "type": "boolean"
                  },
                  "cardType": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "bankCode": {
                    "type": "string"
                  },
                  "branchCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "fingerprint": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/PaymentMethodView"
            }
          }
        },
        {
          "id": "[GET] /v2/self/payments/billings",
          "method": "get",
          "path": "/v2/self/payments/billings",
          "normalizedPath": "/v2/self/payments/billings",
          "operationId": "getSelfInvoices",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "PAID",
                        "CANCELED",
                        "PROCESSING",
                        "FAIL",
                        "REFUNDED",
                        "PENDING",
                        "TEST",
                        "TOBEREFUNDED",
                        "WONTPAY",
                        "PAYMENT_HELD"
                      ]
                    },
                    "emissionDate": {
                      "type": "string"
                    },
                    "paymentDate": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "company": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "zipCode": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "countryCode": {
                      "type": "string"
                    },
                    "vatNumber": {
                      "type": "string"
                    },
                    "fromSubscription": {
                      "type": "boolean"
                    },
                    "lines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "subDescription": {
                            "type": "string"
                          },
                          "pack": {
                            "type": "string"
                          },
                          "VAT": {
                            "type": "number"
                          },
                          "price": {
                            "type": "number"
                          }
                        }
                      }
                    },
                    "originalTotal": {
                      "type": "number"
                    },
                    "totalHT": {
                      "type": "number"
                    },
                    "totalVAT": {
                      "type": "number"
                    },
                    "totalTTC": {
                      "type": "number"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "INVOICE",
                        "CREDITNOTE",
                        "PURCHASE_ORDER",
                        "ADDON_PREORDER"
                      ]
                    },
                    "payingUser": {
                      "type": "object",
                      "properties": {
                        "member": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "avatar": {
                              "type": "string"
                            },
                            "preferredMFA": {
                              "type": "string",
                              "enum": [
                                "NONE",
                                "TOTP"
                              ]
                            }
                          }
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "NONE",
                            "ADMIN",
                            "ACCOUNTING",
                            "DEVELOPER",
                            "MANAGER"
                          ]
                        },
                        "job": {
                          "type": "string"
                        }
                      }
                    },
                    "errorCode": {
                      "type": "string"
                    },
                    "errorShortMsg": {
                      "type": "string"
                    },
                    "errorLongMsg": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    },
                    "targetId": {
                      "type": "string"
                    },
                    "forId": {
                      "type": "string"
                    },
                    "customerOrderId": {
                      "type": "string"
                    },
                    "customerCostCenter": {
                      "type": "string"
                    },
                    "vatRate": {
                      "type": "number"
                    },
                    "payWhen": {
                      "type": "string",
                      "enum": [
                        "PAY_NOW",
                        "PAY_NEXT_MONTH"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[POST] /v2/self/payments/billings",
          "method": "post",
          "path": "/v2/self/payments/billings",
          "normalizedPath": "/v2/self/payments/billings",
          "operationId": "buySelfDrops",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "packageId": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "coupon": {
                        "type": "string"
                      },
                      "dropQuantity": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "PAID",
                      "CANCELED",
                      "PROCESSING",
                      "FAIL",
                      "REFUNDED",
                      "PENDING",
                      "TEST",
                      "TOBEREFUNDED",
                      "WONTPAY",
                      "PAYMENT_HELD"
                    ]
                  },
                  "emissionDate": {
                    "type": "string"
                  },
                  "paymentDate": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "target": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "vatNumber": {
                    "type": "string"
                  },
                  "fromSubscription": {
                    "type": "boolean"
                  },
                  "lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "subDescription": {
                          "type": "string"
                        },
                        "pack": {
                          "type": "string"
                        },
                        "VAT": {
                          "type": "number"
                        },
                        "price": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "originalTotal": {
                    "type": "number"
                  },
                  "totalHT": {
                    "type": "number"
                  },
                  "totalVAT": {
                    "type": "number"
                  },
                  "totalTTC": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "INVOICE",
                      "CREDITNOTE",
                      "PURCHASE_ORDER",
                      "ADDON_PREORDER"
                    ]
                  },
                  "payingUser": {
                    "type": "object",
                    "properties": {
                      "member": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          },
                          "preferredMFA": {
                            "type": "string",
                            "enum": [
                              "NONE",
                              "TOTP"
                            ]
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "ADMIN",
                          "ACCOUNTING",
                          "DEVELOPER",
                          "MANAGER"
                        ]
                      },
                      "job": {
                        "type": "string"
                      }
                    }
                  },
                  "errorCode": {
                    "type": "string"
                  },
                  "errorShortMsg": {
                    "type": "string"
                  },
                  "errorLongMsg": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "targetId": {
                    "type": "string"
                  },
                  "forId": {
                    "type": "string"
                  },
                  "customerOrderId": {
                    "type": "string"
                  },
                  "customerCostCenter": {
                    "type": "string"
                  },
                  "vatRate": {
                    "type": "number"
                  },
                  "payWhen": {
                    "type": "string",
                    "enum": [
                      "PAY_NOW",
                      "PAY_NEXT_MONTH"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/InvoiceRendering"
            }
          }
        },
        {
          "id": "[GET] /v2/self/payments/billings/:XXX",
          "method": "get",
          "path": "/v2/self/payments/billings/{bid}",
          "normalizedPath": "/v2/self/payments/billings/:XXX",
          "operationId": "getSelfInvoice",
          "queryParams": [],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "PAID",
                      "CANCELED",
                      "PROCESSING",
                      "FAIL",
                      "REFUNDED",
                      "PENDING",
                      "TEST",
                      "TOBEREFUNDED",
                      "WONTPAY",
                      "PAYMENT_HELD"
                    ]
                  },
                  "emissionDate": {
                    "type": "string"
                  },
                  "paymentDate": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "target": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "zipCode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "countryCode": {
                    "type": "string"
                  },
                  "vatNumber": {
                    "type": "string"
                  },
                  "fromSubscription": {
                    "type": "boolean"
                  },
                  "lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "subDescription": {
                          "type": "string"
                        },
                        "pack": {
                          "type": "string"
                        },
                        "VAT": {
                          "type": "number"
                        },
                        "price": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "originalTotal": {
                    "type": "number"
                  },
                  "totalHT": {
                    "type": "number"
                  },
                  "totalVAT": {
                    "type": "number"
                  },
                  "totalTTC": {
                    "type": "number"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "INVOICE",
                      "CREDITNOTE",
                      "PURCHASE_ORDER",
                      "ADDON_PREORDER"
                    ]
                  },
                  "payingUser": {
                    "type": "object",
                    "properties": {
                      "member": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          },
                          "preferredMFA": {
                            "type": "string",
                            "enum": [
                              "NONE",
                              "TOTP"
                            ]
                          }
                        }
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "ADMIN",
                          "ACCOUNTING",
                          "DEVELOPER",
                          "MANAGER"
                        ]
                      },
                      "job": {
                        "type": "string"
                      }
                    }
                  },
                  "errorCode": {
                    "type": "string"
                  },
                  "errorShortMsg": {
                    "type": "string"
                  },
                  "errorLongMsg": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  },
                  "targetId": {
                    "type": "string"
                  },
                  "forId": {
                    "type": "string"
                  },
                  "customerOrderId": {
                    "type": "string"
                  },
                  "customerCostCenter": {
                    "type": "string"
                  },
                  "vatRate": {
                    "type": "number"
                  },
                  "payWhen": {
                    "type": "string",
                    "enum": [
                      "PAY_NOW",
                      "PAY_NEXT_MONTH"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/InvoiceRendering"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/payments/billings/:XXX",
          "method": "put",
          "path": "/v2/self/payments/billings/{bid}",
          "normalizedPath": "/v2/self/payments/billings/:XXX",
          "operationId": "chooseSelfPaymentProvider",
          "queryParams": [],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "provider": {
                        "type": "string",
                        "enum": [
                          "PAYPAL",
                          "CREDITCARD",
                          "COUPON",
                          "BITCOIN",
                          "TRANSFER",
                          "FREE",
                          "SEPA_DEBIT"
                        ]
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/NextInPaymentFlow"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/payments/billings/:XXX",
          "method": "delete",
          "path": "/v2/self/payments/billings/{bid}",
          "normalizedPath": "/v2/self/payments/billings/:XXX",
          "operationId": "deleteSelfPurchaseOrder",
          "queryParams": [],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/self/payments/recurring",
          "method": "get",
          "path": "/v2/self/payments/recurring",
          "normalizedPath": "/v2/self/payments/recurring",
          "operationId": "getSelfRecurrentPayment",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "zipcode": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "avatar": {
                        "type": "string"
                      },
                      "creationDate": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "emailValidated": {
                        "type": "boolean"
                      },
                      "oauthApps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "admin": {
                        "type": "boolean"
                      },
                      "canPay": {
                        "type": "boolean"
                      },
                      "preferredMFA": {
                        "type": "string",
                        "enum": [
                          "NONE",
                          "TOTP"
                        ]
                      },
                      "hasPassword": {
                        "type": "boolean"
                      },
                      "partnerId": {
                        "type": "string"
                      },
                      "partnerName": {
                        "type": "string"
                      },
                      "partnerConsoleUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "target": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "identity": {
                        "type": "string"
                      },
                      "emails": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "thresholdAmount": {
                    "type": "number"
                  },
                  "monthlyAmount": {
                    "type": "number"
                  },
                  "threshold": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/RecurrentPaymentView"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/payments/recurring",
          "method": "delete",
          "path": "/v2/self/payments/recurring",
          "normalizedPath": "/v2/self/payments/recurring",
          "operationId": "deleteSelfRecurrentPayment",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[DELETE] /v2/self/payments/methods/:XXX",
          "method": "delete",
          "path": "/v2/self/payments/methods/{mId}",
          "normalizedPath": "/v2/self/payments/methods/:XXX",
          "operationId": "deleteSelfCard",
          "queryParams": [],
          "pathParams": [
            {
              "name": "mId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/self/payments/methods/default",
          "method": "get",
          "path": "/v2/self/payments/methods/default",
          "normalizedPath": "/v2/self/payments/methods/default",
          "operationId": "getSelfDefaultMethod",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "ownerId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "CREDITCARD",
                      "PAYPAL",
                      "SEPA_DEBIT"
                    ]
                  },
                  "token": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "holderName": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  },
                  "expirationDate": {
                    "type": "string"
                  },
                  "isExpired": {
                    "type": "boolean"
                  },
                  "cardType": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "bankCode": {
                    "type": "string"
                  },
                  "branchCode": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "fingerprint": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/PaymentMethodView"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/payments/methods/default",
          "method": "put",
          "path": "/v2/self/payments/methods/default",
          "normalizedPath": "/v2/self/payments/methods/default",
          "operationId": "setSelfDefaultMethod",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "NEW_CARD",
                          "EXISTING_CARD"
                        ]
                      },
                      "token": {
                        "type": "string"
                      },
                      "deviceData": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": null
        },
        {
          "id": "[GET] /v2/self/payments/monthlyinvoice",
          "method": "get",
          "path": "/v2/self/payments/monthlyinvoice",
          "normalizedPath": "/v2/self/payments/monthlyinvoice",
          "operationId": "getSelfMonthlyInvoice",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/payments/billings/:XXX.pdf",
          "method": "get",
          "path": "/v2/self/payments/billings/{bid}.pdf",
          "normalizedPath": "/v2/self/payments/billings/:XXX.pdf",
          "operationId": "getSelfPdfInvoiceById",
          "queryParams": [
            {
              "name": "token",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [
            {
              "name": "bid",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": null
        },
        {
          "id": "[GET] /v2/self/payments/tokens/stripe",
          "method": "get",
          "path": "/v2/self/payments/tokens/stripe",
          "normalizedPath": "/v2/self/payments/tokens/stripe",
          "operationId": "getSelfStripeToken",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "string"
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/payments/fullprice/:XXX",
          "method": "get",
          "path": "/v2/self/payments/fullprice/{price}",
          "normalizedPath": "/v2/self/payments/fullprice/:XXX",
          "operationId": "getSelfPriceWithTax",
          "queryParams": [],
          "pathParams": [
            {
              "name": "price",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "taxFreePrice": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "vatRatio": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "invoicedOwner": {
                    "type": "string"
                  }
                }
              },
              "ref": "#/components/schemas/PriceWithTaxInfo"
            }
          }
        },
        {
          "id": "[PUT] /v2/self/payments/monthlyinvoice/maxcredit",
          "method": "put",
          "path": "/v2/self/payments/monthlyinvoice/maxcredit",
          "normalizedPath": "/v2/self/payments/monthlyinvoice/maxcredit",
          "operationId": "setSelfMaxCreditsPerMonth",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "max": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "max": {
                    "type": "number"
                  }
                }
              },
              "ref": "#/components/schemas/WannabeMaxCredits"
            }
          }
        },
        {
          "id": "[GET] /v2/self/tokens/current",
          "method": "get",
          "path": "/v2/self/tokens/current",
          "normalizedPath": "/v2/self/tokens/current",
          "operationId": "getCurrentTokenInfo",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "consumer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "picture": {
                          "type": "string"
                        },
                        "baseUrl": {
                          "type": "string"
                        },
                        "rights": {
                          "type": "object",
                          "properties": {
                            "almighty": {
                              "type": "boolean"
                            },
                            "access_organisations": {
                              "type": "boolean"
                            },
                            "manage_organisations": {
                              "type": "boolean"
                            },
                            "manage_organisations_services": {
                              "type": "boolean"
                            },
                            "manage_organisations_applications": {
                              "type": "boolean"
                            },
                            "manage_organisations_members": {
                              "type": "boolean"
                            },
                            "access_organisations_bills": {
                              "type": "boolean"
                            },
                            "access_organisations_credit_count": {
                              "type": "boolean"
                            },
                            "access_organisations_consumption_statistics": {
                              "type": "boolean"
                            },
                            "access_personal_information": {
                              "type": "boolean"
                            },
                            "manage_personal_information": {
                              "type": "boolean"
                            },
                            "manage_ssh_keys": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "expirationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "lastUtilisation": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "rights": {
                      "type": "object",
                      "properties": {
                        "almighty": {
                          "type": "boolean"
                        },
                        "access_organisations": {
                          "type": "boolean"
                        },
                        "manage_organisations": {
                          "type": "boolean"
                        },
                        "manage_organisations_services": {
                          "type": "boolean"
                        },
                        "manage_organisations_applications": {
                          "type": "boolean"
                        },
                        "manage_organisations_members": {
                          "type": "boolean"
                        },
                        "access_organisations_bills": {
                          "type": "boolean"
                        },
                        "access_organisations_credit_count": {
                          "type": "boolean"
                        },
                        "access_organisations_consumption_statistics": {
                          "type": "boolean"
                        },
                        "access_personal_information": {
                          "type": "boolean"
                        },
                        "manage_personal_information": {
                          "type": "boolean"
                        },
                        "manage_ssh_keys": {
                          "type": "boolean"
                        }
                      }
                    },
                    "employeeId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[GET] /v2/self/tokens",
          "method": "get",
          "path": "/v2/self/tokens",
          "normalizedPath": "/v2/self/tokens",
          "operationId": "listSelfTokens",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "consumer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "picture": {
                          "type": "string"
                        },
                        "baseUrl": {
                          "type": "string"
                        },
                        "rights": {
                          "type": "object",
                          "properties": {
                            "almighty": {
                              "type": "boolean"
                            },
                            "access_organisations": {
                              "type": "boolean"
                            },
                            "manage_organisations": {
                              "type": "boolean"
                            },
                            "manage_organisations_services": {
                              "type": "boolean"
                            },
                            "manage_organisations_applications": {
                              "type": "boolean"
                            },
                            "manage_organisations_members": {
                              "type": "boolean"
                            },
                            "access_organisations_bills": {
                              "type": "boolean"
                            },
                            "access_organisations_credit_count": {
                              "type": "boolean"
                            },
                            "access_organisations_consumption_statistics": {
                              "type": "boolean"
                            },
                            "access_personal_information": {
                              "type": "boolean"
                            },
                            "manage_personal_information": {
                              "type": "boolean"
                            },
                            "manage_ssh_keys": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "creationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "expirationDate": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "lastUtilisation": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "rights": {
                      "type": "object",
                      "properties": {
                        "almighty": {
                          "type": "boolean"
                        },
                        "access_organisations": {
                          "type": "boolean"
                        },
                        "manage_organisations": {
                          "type": "boolean"
                        },
                        "manage_organisations_services": {
                          "type": "boolean"
                        },
                        "manage_organisations_applications": {
                          "type": "boolean"
                        },
                        "manage_organisations_members": {
                          "type": "boolean"
                        },
                        "access_organisations_bills": {
                          "type": "boolean"
                        },
                        "access_organisations_credit_count": {
                          "type": "boolean"
                        },
                        "access_organisations_consumption_statistics": {
                          "type": "boolean"
                        },
                        "access_personal_information": {
                          "type": "boolean"
                        },
                        "manage_personal_information": {
                          "type": "boolean"
                        },
                        "manage_ssh_keys": {
                          "type": "boolean"
                        }
                      }
                    },
                    "employeeId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/tokens",
          "method": "delete",
          "path": "/v2/self/tokens",
          "normalizedPath": "/v2/self/tokens",
          "operationId": "revokeSelfTokens",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[DELETE] /v2/self/tokens/:XXX",
          "method": "delete",
          "path": "/v2/self/tokens/{token}",
          "normalizedPath": "/v2/self/tokens/:XXX",
          "operationId": "revokeSelfToken",
          "queryParams": [],
          "pathParams": [
            {
              "name": "token",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "error",
                      "warning",
                      "success",
                      "info"
                    ]
                  }
                }
              },
              "ref": "#/components/schemas/Message"
            }
          }
        },
        {
          "id": "[GET] /v2/summary",
          "method": "get",
          "path": "/v2/summary",
          "normalizedPath": "/v2/summary",
          "operationId": "getSummary",
          "queryParams": [
            {
              "name": "full",
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "user": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "avatar": {
                        "type": "string"
                      },
                      "applications": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "instanceType": {
                              "type": "string"
                            },
                            "instanceVariant": {
                              "type": "string"
                            },
                            "variantSlug": {
                              "type": "string"
                            },
                            "archived": {
                              "type": "boolean"
                            },
                            "homogeneous": {
                              "type": "boolean"
                            },
                            "variantLogoUrl": {
                              "type": "string"
                            },
                            "state": {
                              "type": "string",
                              "enum": [
                                "SHOULD_BE_UP",
                                "SHOULD_BE_DOWN",
                                "WANTS_TO_BE_UP",
                                "MODERATED",
                                "DEFAULT_OF_PAYMENT"
                              ]
                            },
                            "commit": {
                              "type": "string"
                            },
                            "systemTags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "customerTags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "addons": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "realId": {
                              "type": "string"
                            },
                            "providerId": {
                              "type": "string"
                            },
                            "logoUrl": {
                              "type": "string"
                            },
                            "systemTags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "customerTags": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "consumers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            },
                            "picture": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "email": {
                        "type": "string"
                      },
                      "lang": {
                        "type": "string"
                      },
                      "admin": {
                        "type": "boolean"
                      },
                      "canSEPA": {
                        "type": "boolean"
                      },
                      "partnerId": {
                        "type": "string"
                      },
                      "partnerName": {
                        "type": "string"
                      },
                      "partnerConsoleUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "organisations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "string"
                        },
                        "applications": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "instanceType": {
                                "type": "string"
                              },
                              "instanceVariant": {
                                "type": "string"
                              },
                              "variantSlug": {
                                "type": "string"
                              },
                              "archived": {
                                "type": "boolean"
                              },
                              "homogeneous": {
                                "type": "boolean"
                              },
                              "variantLogoUrl": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string",
                                "enum": [
                                  "SHOULD_BE_UP",
                                  "SHOULD_BE_DOWN",
                                  "WANTS_TO_BE_UP",
                                  "MODERATED",
                                  "DEFAULT_OF_PAYMENT"
                                ]
                              },
                              "commit": {
                                "type": "string"
                              },
                              "systemTags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "customerTags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "addons": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "realId": {
                                "type": "string"
                              },
                              "providerId": {
                                "type": "string"
                              },
                              "logoUrl": {
                                "type": "string"
                              },
                              "systemTags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "customerTags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "consumers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "key": {
                                "type": "string"
                              },
                              "picture": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "role": {
                          "type": "string",
                          "enum": [
                            "NONE",
                            "ADMIN",
                            "ACCOUNTING",
                            "DEVELOPER",
                            "MANAGER"
                          ]
                        },
                        "providers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "vatState": {
                          "type": "string",
                          "enum": [
                            "INVALID",
                            "PENDING_VALIDATION",
                            "VALID",
                            "NOT_NEEDED",
                            "NOT_APPLICABLE"
                          ]
                        },
                        "canPay": {
                          "type": "boolean"
                        },
                        "canSEPA": {
                          "type": "boolean"
                        },
                        "cleverEnterprise": {
                          "type": "boolean"
                        },
                        "emergencyNumber": {
                          "type": "string"
                        },
                        "isTrusted": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              },
              "ref": "#/components/schemas/Summary"
            }
          }
        }
      ],
      "deletedEndpoints": [],
      "modifiedEndpoints": []
    }
  },
  "remote-auth-backend": {
    "source": {
      "type": "url",
      "id": "remote-auth-backend",
      "url": "https://api-bridge.clever-cloud.com/documentation/json",
      "target": "auth-backend",
      "pathPrefix": ""
    },
    "date": "2025-04-04T09:09:33.152Z",
    "diff": {
      "hasDiff": true,
      "addedEndpoints": [
        {
          "id": "[POST] /api-tokens",
          "method": "post",
          "path": "/api-tokens",
          "normalizedPath": "/api-tokens",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "password": {
                        "type": "string"
                      },
                      "mfaCode": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "description": {
                        "type": "string"
                      },
                      "expirationDate": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "email",
                      "password",
                      "name",
                      "expirationDate"
                    ]
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "apiToken": {
                    "type": "string"
                  },
                  "apiTokenId": {
                    "type": "string"
                  },
                  "creationDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "expirationDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "apiToken",
                  "apiTokenId",
                  "creationDate",
                  "expirationDate",
                  "name"
                ]
              }
            }
          }
        },
        {
          "id": "[GET] /api-tokens",
          "method": "get",
          "path": "/api-tokens",
          "normalizedPath": "/api-tokens",
          "queryParams": [],
          "pathParams": [],
          "requestBody": null,
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "apiTokenId": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "creationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expirationDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "apiTokenId",
                    "userId",
                    "creationDate",
                    "expirationDate",
                    "ip",
                    "name"
                  ]
                }
              }
            }
          }
        },
        {
          "id": "[PUT] /api-tokens/:XXX",
          "method": "put",
          "path": "/api-tokens/{apiTokenId}",
          "normalizedPath": "/api-tokens/:XXX",
          "queryParams": [],
          "pathParams": [
            {
              "name": "apiTokenId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "description": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[DELETE] /api-tokens/:XXX",
          "method": "delete",
          "path": "/api-tokens/{apiTokenId}",
          "normalizedPath": "/api-tokens/:XXX",
          "queryParams": [],
          "pathParams": [
            {
              "name": "apiTokenId",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 204
          }
        },
        {
          "id": "[GET] /v2/:XXX",
          "method": "get",
          "path": "/v2/{*}",
          "normalizedPath": "/v2/:XXX",
          "queryParams": [],
          "pathParams": [
            {
              "name": "*",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200
          }
        },
        {
          "id": "[DELETE] /v2/:XXX",
          "method": "delete",
          "path": "/v2/{*}",
          "normalizedPath": "/v2/:XXX",
          "queryParams": [],
          "pathParams": [
            {
              "name": "*",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200
          }
        },
        {
          "id": "[PUT] /v2/:XXX",
          "method": "put",
          "path": "/v2/{*}",
          "normalizedPath": "/v2/:XXX",
          "queryParams": [],
          "pathParams": [
            {
              "name": "*",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200
          }
        },
        {
          "id": "[POST] /v2/:XXX",
          "method": "post",
          "path": "/v2/{*}",
          "normalizedPath": "/v2/:XXX",
          "queryParams": [],
          "pathParams": [
            {
              "name": "*",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200
          }
        },
        {
          "id": "[GET] /v4/:XXX",
          "method": "get",
          "path": "/v4/{*}",
          "normalizedPath": "/v4/:XXX",
          "queryParams": [],
          "pathParams": [
            {
              "name": "*",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200
          }
        },
        {
          "id": "[DELETE] /v4/:XXX",
          "method": "delete",
          "path": "/v4/{*}",
          "normalizedPath": "/v4/:XXX",
          "queryParams": [],
          "pathParams": [
            {
              "name": "*",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200
          }
        },
        {
          "id": "[PUT] /v4/:XXX",
          "method": "put",
          "path": "/v4/{*}",
          "normalizedPath": "/v4/:XXX",
          "queryParams": [],
          "pathParams": [
            {
              "name": "*",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200
          }
        },
        {
          "id": "[POST] /v4/:XXX",
          "method": "post",
          "path": "/v4/{*}",
          "normalizedPath": "/v4/:XXX",
          "queryParams": [],
          "pathParams": [
            {
              "name": "*",
              "required": true,
              "type": {
                "type": "not-broken",
                "schema": {
                  "type": "string"
                }
              }
            }
          ],
          "requestBody": null,
          "response": {
            "statusCode": 200
          }
        }
      ],
      "deletedEndpoints": [],
      "modifiedEndpoints": []
    }
  },
  "remote-redis-http": {
    "source": {
      "type": "url",
      "id": "remote-redis-http",
      "url": "https://kv-proxy.services.clever-cloud.com/documentation/json",
      "target": "redis-http",
      "pathPrefix": ""
    },
    "date": "2025-04-04T09:09:33.152Z",
    "diff": {
      "hasDiff": true,
      "addedEndpoints": [
        {
          "id": "[POST] /command",
          "method": "post",
          "path": "/command",
          "normalizedPath": "/command",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "command": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Redis© command"
                      },
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Arguments"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "command",
                      "backendUrl"
                    ]
                  },
                  "examples": {
                    "example1": {
                      "value": {
                        "backendUrl": "redis://localhost:6379",
                        "command": "PING"
                      }
                    },
                    "example2": {
                      "value": {
                        "backendUrl": "redis://localhost:6379",
                        "command": "SCAN",
                        "args": [
                          "0"
                        ]
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "result": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "null"
                      },
                      {
                        "type": "array",
                        "items": {
                          "oneOf": "[Circular]"
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "result"
                ]
              }
            }
          }
        },
        {
          "id": "[POST] /command/cli",
          "method": "post",
          "path": "/command/cli",
          "normalizedPath": "/command/cli",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "commandLine": {
                        "type": "string",
                        "minLength": 1,
                        "description": "Redis© Command line"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "commandLine",
                      "backendUrl"
                    ]
                  },
                  "examples": {
                    "example1": {
                      "value": {
                        "backendUrl": "redis://localhost:6379",
                        "commandLine": "PING"
                      }
                    },
                    "example2": {
                      "value": {
                        "backendUrl": "redis://localhost:6379",
                        "commandLine": "SCAN 0"
                      }
                    }
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Whether the command execution was successful or not"
                  },
                  "result": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Result of the command split into an array of string"
                  }
                },
                "required": [
                  "success",
                  "result"
                ]
              }
            }
          }
        },
        {
          "id": "[POST] /keys/_scan",
          "method": "post",
          "path": "/keys/_scan",
          "normalizedPath": "/keys/_scan",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "cursor": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0,
                        "description": "The scan cursor",
                        "example": 0
                      },
                      "count": {
                        "type": "integer",
                        "minimum": 1,
                        "default": 100,
                        "description": "The number of keys to scan",
                        "example": 15
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "list",
                          "set",
                          "zset",
                          "hash",
                          "stream"
                        ],
                        "description": "The type of the keys to scan",
                        "example": "string"
                      },
                      "match": {
                        "type": "string",
                        "description": "The filter pattern to apply on key names",
                        "example": "*a??c*"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "backendUrl"
                    ],
                    "description": "The scan options"
                  }
                }
              },
              "required": true,
              "description": "The scan options"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "cursor": {
                    "type": "integer",
                    "description": "The scan cursor to be used to continue the scan",
                    "example": 42
                  },
                  "total": {
                    "type": "integer",
                    "description": "The total number of keys",
                    "example": 1521
                  },
                  "keys": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the key",
                          "example": "key"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "string",
                            "list",
                            "set",
                            "zset",
                            "hash",
                            "stream"
                          ],
                          "description": "Type of the key"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "description": "Key with its type"
                    },
                    "description": "The list of scanned keys with their types",
                    "example": [
                      {
                        "name": "element 1",
                        "type": "string"
                      },
                      {
                        "name": "element 6",
                        "type": "string"
                      },
                      {
                        "name": "element 10",
                        "type": "string"
                      }
                    ]
                  }
                },
                "required": [
                  "cursor",
                  "total",
                  "keys"
                ],
                "description": "The result when scan is successful"
              }
            }
          }
        },
        {
          "id": "[POST] /key/_delete",
          "method": "post",
          "path": "/key/_delete",
          "normalizedPath": "/key/_delete",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "backendUrl"
                    ],
                    "description": "The name of the key to delete"
                  }
                }
              },
              "required": true,
              "description": "The name of the key to delete"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "deleted": {
                    "type": "boolean",
                    "description": "`true` when the key has been deleted. `false` when the key was already absent."
                  }
                },
                "required": [
                  "key",
                  "deleted"
                ],
                "description": "The deleted key"
              }
            }
          }
        },
        {
          "id": "[POST] /key/string/_get",
          "method": "post",
          "path": "/key/string/_get",
          "normalizedPath": "/key/string/_get",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "backendUrl"
                    ]
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "description": "Response when the key has been found",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "value": {
                    "type": "string",
                    "description": "The value of the `string` key"
                  }
                },
                "required": [
                  "key",
                  "value"
                ]
              },
              "ref": "#/components/schemas/StringKey"
            }
          }
        },
        {
          "id": "[POST] /key/string/_create",
          "method": "post",
          "path": "/key/string/_create",
          "normalizedPath": "/key/string/_create",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The name of the key",
                            "example": "key"
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the `string` key"
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      }
                    ],
                    "properties": {
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "backendUrl"
                    ]
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "description": "Response when the key has been created",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "value": {
                    "type": "string",
                    "description": "The value of the `string` key"
                  }
                },
                "required": [
                  "key",
                  "value"
                ]
              },
              "ref": "#/components/schemas/StringKey"
            }
          }
        },
        {
          "id": "[POST] /key/string/_update",
          "method": "post",
          "path": "/key/string/_update",
          "normalizedPath": "/key/string/_update",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The name of the key",
                            "example": "key"
                          },
                          "value": {
                            "type": "string",
                            "description": "The value of the `string` key"
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ]
                      }
                    ],
                    "properties": {
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "backendUrl"
                    ]
                  }
                }
              },
              "required": true
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "description": "Response when the key has been updated",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "value": {
                    "type": "string",
                    "description": "The value of the `string` key"
                  }
                },
                "required": [
                  "key",
                  "value"
                ]
              },
              "ref": "#/components/schemas/StringKey"
            }
          }
        },
        {
          "id": "[POST] /key/hash/_create",
          "method": "post",
          "path": "/key/hash/_create",
          "normalizedPath": "/key/hash/_create",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The name of the key",
                            "example": "key"
                          },
                          "elements": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "field": {
                                  "type": "string",
                                  "description": "The field name",
                                  "example": "f1"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "The field value",
                                  "example": "value 1"
                                }
                              },
                              "required": [
                                "field",
                                "value"
                              ]
                            },
                            "minItems": 1,
                            "description": "The list of fields",
                            "example": [
                              {
                                "field": "f1",
                                "value": "key1"
                              },
                              {
                                "field": "f2",
                                "value": "key1"
                              },
                              {
                                "field": "f3",
                                "value": "key1"
                              }
                            ]
                          }
                        },
                        "required": [
                          "key",
                          "elements"
                        ],
                        "description": "The `hash` key with a list of fields"
                      }
                    ],
                    "properties": {
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "backendUrl"
                    ],
                    "description": "The key and its fields to create"
                  }
                }
              },
              "required": true,
              "description": "The key and its fields to create"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "description": "The created key and its fields",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "elements": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "description": "The field name",
                          "example": "f1"
                        },
                        "value": {
                          "type": "string",
                          "description": "The field value",
                          "example": "value 1"
                        }
                      },
                      "required": [
                        "field",
                        "value"
                      ]
                    },
                    "minItems": 1,
                    "description": "The list of fields",
                    "example": [
                      {
                        "field": "f1",
                        "value": "key1"
                      },
                      {
                        "field": "f2",
                        "value": "key1"
                      },
                      {
                        "field": "f3",
                        "value": "key1"
                      }
                    ]
                  }
                },
                "required": [
                  "key",
                  "elements"
                ]
              },
              "ref": "#/components/schemas/HashKey"
            }
          }
        },
        {
          "id": "[POST] /key/hash/_scan",
          "method": "post",
          "path": "/key/hash/_scan",
          "normalizedPath": "/key/hash/_scan",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "cursor": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0,
                        "description": "The scan cursor"
                      },
                      "count": {
                        "type": "integer",
                        "minimum": 1,
                        "default": 100,
                        "description": "The number of elements to scan"
                      },
                      "match": {
                        "type": "string",
                        "description": "The filter pattern to apply on fields"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "backendUrl"
                    ],
                    "description": "The key to scan and some scan options"
                  }
                }
              },
              "required": true,
              "description": "The key to scan and some scan options"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "cursor": {
                    "type": "integer",
                    "description": "The scan cursor to be used to continue the scan",
                    "example": 42
                  },
                  "elements": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "description": "The field name",
                          "example": "f1"
                        },
                        "value": {
                          "type": "string",
                          "description": "The field value",
                          "example": "value 1"
                        }
                      },
                      "required": [
                        "field",
                        "value"
                      ]
                    },
                    "description": "The list of scanned fields",
                    "example": [
                      {
                        "field": "f1",
                        "value": "key1"
                      },
                      {
                        "field": "f8",
                        "value": "key8"
                      },
                      {
                        "field": "f12",
                        "value": "key12"
                      }
                    ]
                  }
                },
                "required": [
                  "key",
                  "cursor",
                  "elements"
                ],
                "description": "The result when scan is successful"
              }
            }
          }
        },
        {
          "id": "[POST] /key/hash/_delete",
          "method": "post",
          "path": "/key/hash/_delete",
          "normalizedPath": "/key/hash/_delete",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "field": {
                        "type": "string",
                        "description": "The field name",
                        "example": "f1"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "field",
                      "backendUrl"
                    ],
                    "description": "The key and field to delete"
                  }
                }
              },
              "required": true,
              "description": "The key and field to delete"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "field": {
                    "type": "string",
                    "description": "The field name",
                    "example": "f1"
                  },
                  "deleted": {
                    "type": "boolean",
                    "description": "`true` when the field has been deleted. `false` when the field was already absent."
                  }
                },
                "required": [
                  "key",
                  "field",
                  "deleted"
                ],
                "description": "The result when the field has been deleted"
              }
            }
          }
        },
        {
          "id": "[POST] /key/hash/_set",
          "method": "post",
          "path": "/key/hash/_set",
          "normalizedPath": "/key/hash/_set",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "field": {
                        "type": "string",
                        "description": "The field name",
                        "example": "f1"
                      },
                      "value": {
                        "type": "string",
                        "description": "The field value",
                        "example": "value 1"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "field",
                      "value",
                      "backendUrl"
                    ],
                    "description": "The key, field and value to add or update"
                  }
                }
              },
              "required": true,
              "description": "The key, field and value to add or update"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "field": {
                    "type": "string",
                    "description": "The field name",
                    "example": "f1"
                  },
                  "value": {
                    "type": "string",
                    "description": "The field value",
                    "example": "value 1"
                  },
                  "added": {
                    "type": "boolean",
                    "description": "`true` when a new field has been added. `false` when a field has been updated."
                  }
                },
                "required": [
                  "key",
                  "field",
                  "value",
                  "added"
                ],
                "description": "The result when the field has been added or updated"
              }
            }
          }
        },
        {
          "id": "[POST] /key/list/_create",
          "method": "post",
          "path": "/key/list/_create",
          "normalizedPath": "/key/list/_create",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "elements": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 1,
                        "description": "The list of elements",
                        "example": [
                          "element 1",
                          "element 2",
                          "element 3"
                        ]
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "elements",
                      "backendUrl"
                    ],
                    "description": "The key and its elements to create"
                  }
                }
              },
              "required": true,
              "description": "The key and its elements to create"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "elements": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "description": "The list of elements",
                    "example": [
                      "element 1",
                      "element 2",
                      "element 3"
                    ]
                  }
                },
                "required": [
                  "key",
                  "elements"
                ],
                "description": "The created key and its elements"
              }
            }
          }
        },
        {
          "id": "[POST] /key/list/_scan",
          "method": "post",
          "path": "/key/list/_scan",
          "normalizedPath": "/key/list/_scan",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "cursor": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0,
                        "description": "The scan cursor",
                        "example": 0
                      },
                      "count": {
                        "type": "integer",
                        "minimum": 1,
                        "default": 100,
                        "description": "The number of elements to scan",
                        "example": 15
                      },
                      "match": {
                        "type": "string",
                        "description": "The filter pattern to apply on elements",
                        "example": "*a??c*"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "backendUrl"
                    ],
                    "description": "The key to scan and some scan options"
                  }
                }
              },
              "required": true,
              "description": "The key to scan and some scan options"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "description": "The result when scan is successful",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "cursor": {
                    "type": "integer",
                    "description": "The scan cursor to be used to continue the scan",
                    "example": 42
                  },
                  "total": {
                    "type": "integer",
                    "description": "The total number of elements",
                    "example": 1521
                  },
                  "elements": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "index": {
                          "type": "integer",
                          "minimum": 0,
                          "description": "The index of the element",
                          "example": 6
                        },
                        "value": {
                          "type": "string",
                          "description": "The value of the element",
                          "example": "element 7"
                        }
                      },
                      "required": [
                        "index",
                        "value"
                      ]
                    },
                    "description": "The list of scanned elements",
                    "example": [
                      {
                        "index": 0,
                        "value": "element 1"
                      },
                      {
                        "index": 5,
                        "value": "element 6"
                      },
                      {
                        "index": 9,
                        "value": "element 10"
                      }
                    ]
                  }
                },
                "required": [
                  "key",
                  "cursor",
                  "total",
                  "elements"
                ]
              },
              "ref": "#/components/schemas/ListKey"
            }
          }
        },
        {
          "id": "[POST] /key/list/_get",
          "method": "post",
          "path": "/key/list/_get",
          "normalizedPath": "/key/list/_get",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "index": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "The index of the element"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "index",
                      "backendUrl"
                    ],
                    "description": "The element to get"
                  }
                }
              },
              "required": true,
              "description": "The element to get"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "index": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "The index of the element"
                  },
                  "value": {
                    "type": "string",
                    "description": "The value of the element"
                  }
                },
                "required": [
                  "key",
                  "index",
                  "value"
                ],
                "description": "The result when element has been found"
              }
            }
          }
        },
        {
          "id": "[POST] /key/list/_update",
          "method": "post",
          "path": "/key/list/_update",
          "normalizedPath": "/key/list/_update",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "index": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "The index of the element"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the element"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "index",
                      "value",
                      "backendUrl"
                    ],
                    "description": "The element to update"
                  }
                }
              },
              "required": true,
              "description": "The element to update"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "index": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "The index of the element"
                  },
                  "value": {
                    "type": "string",
                    "description": "The value of the element"
                  }
                },
                "required": [
                  "key",
                  "index",
                  "value"
                ],
                "description": "The updated element"
              }
            }
          }
        },
        {
          "id": "[POST] /key/list/_push",
          "method": "post",
          "path": "/key/list/_push",
          "normalizedPath": "/key/list/_push",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "position": {
                        "type": "string",
                        "enum": [
                          "tail",
                          "head"
                        ],
                        "default": "tail",
                        "description": "The position in the list where to push the element"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the element"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "value",
                      "backendUrl"
                    ],
                    "description": "The element to push and its position"
                  }
                }
              },
              "required": true,
              "description": "The element to push and its position"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "index": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "The index of the element"
                  },
                  "value": {
                    "type": "string",
                    "description": "The value of the element"
                  }
                },
                "required": [
                  "key",
                  "index",
                  "value"
                ],
                "description": "The pushed element"
              }
            }
          }
        },
        {
          "id": "[POST] /key/set/_create",
          "method": "post",
          "path": "/key/set/_create",
          "normalizedPath": "/key/set/_create",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "The name of the key",
                            "example": "key"
                          },
                          "elements": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "minItems": 1,
                            "description": "The list of members",
                            "example": [
                              "member 1",
                              "member 2",
                              "member 3"
                            ]
                          }
                        },
                        "required": [
                          "key",
                          "elements"
                        ],
                        "description": "The `set` key with a list of members"
                      }
                    ],
                    "properties": {
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "backendUrl"
                    ],
                    "description": "The key and its members to create"
                  }
                }
              },
              "required": true,
              "description": "The key and its members to create"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "description": "The created key and its members",
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "elements": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "description": "The list of members",
                    "example": [
                      "member 1",
                      "member 2",
                      "member 3"
                    ]
                  }
                },
                "required": [
                  "key",
                  "elements"
                ]
              },
              "ref": "#/components/schemas/SetKey"
            }
          }
        },
        {
          "id": "[POST] /key/set/_scan",
          "method": "post",
          "path": "/key/set/_scan",
          "normalizedPath": "/key/set/_scan",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "cursor": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0,
                        "description": "The scan cursor",
                        "example": 0
                      },
                      "count": {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "default": 100,
                        "description": "The number of members to scan",
                        "example": 15
                      },
                      "match": {
                        "type": "string",
                        "description": "The filter pattern to apply on members",
                        "example": "*a??c*"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "backendUrl"
                    ],
                    "description": "The key to scan and some scan options"
                  }
                }
              },
              "required": true,
              "description": "The key to scan and some scan options"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "cursor": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "The scan cursor to be used to continue the scan",
                    "example": 42
                  },
                  "elements": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The list of scanned members",
                    "example": [
                      "member 1",
                      "member 8",
                      "member 14"
                    ]
                  }
                },
                "required": [
                  "key",
                  "cursor",
                  "elements"
                ],
                "description": "The result when scan is successful"
              }
            }
          }
        },
        {
          "id": "[POST] /key/set/_delete",
          "method": "post",
          "path": "/key/set/_delete",
          "normalizedPath": "/key/set/_delete",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "element": {
                        "type": "string",
                        "description": "The member"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "element",
                      "backendUrl"
                    ],
                    "description": "The key and member to delete"
                  }
                }
              },
              "required": true,
              "description": "The key and member to delete"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "element": {
                    "type": "string",
                    "description": "The member"
                  },
                  "deleted": {
                    "type": "boolean",
                    "description": "`true` when the member has been deleted. `false` when the member was already absent."
                  }
                },
                "required": [
                  "key",
                  "element",
                  "deleted"
                ],
                "description": "The result when the member has been deleted"
              }
            }
          }
        },
        {
          "id": "[POST] /key/set/_set",
          "method": "post",
          "path": "/key/set/_set",
          "normalizedPath": "/key/set/_set",
          "queryParams": [],
          "pathParams": [],
          "requestBody": {
            "type": "not-broken",
            "schema": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The name of the key",
                        "example": "key"
                      },
                      "element": {
                        "type": "string",
                        "description": "The member"
                      },
                      "backendUrl": {
                        "type": "string",
                        "description": "URL of the redis database",
                        "example": "redis://localhost:6379"
                      }
                    },
                    "required": [
                      "key",
                      "element",
                      "backendUrl"
                    ],
                    "description": "The key and member to add"
                  }
                }
              },
              "required": true,
              "description": "The key and member to add"
            }
          },
          "response": {
            "statusCode": 200,
            "contentType": "application/json",
            "type": {
              "type": "not-broken",
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The name of the key",
                    "example": "key"
                  },
                  "element": {
                    "type": "string",
                    "description": "The member"
                  },
                  "added": {
                    "type": "boolean",
                    "description": "`true` when the member has been added. `false` when the member was already present."
                  }
                },
                "required": [
                  "key",
                  "element",
                  "added"
                ],
                "description": "The result when the member has been added"
              }
            }
          }
        }
      ],
      "deletedEndpoints": [],
      "modifiedEndpoints": []
    }
  }
}